{"version":3,"file":"index.js","sources":["../src/lib/mode_handler.js","../node_modules/@turf/meta/dist/esm/index.js","../node_modules/@turf/area/dist/esm/index.js","../src/constants.js","../src/lib/sort_features.js","../src/lib/map_event_to_bounding_box.js","../src/lib/string_set.js","../src/lib/features_at.js","../src/lib/get_features_and_set_cursor.js","../src/lib/euclidean_distance.js","../src/lib/is_click.js","../src/lib/is_tap.js","../src/lib/id.js","../node_modules/nanoid/non-secure/index.js","../src/feature_types/feature.js","../src/feature_types/point.js","../src/feature_types/line_string.js","../src/feature_types/polygon.js","../src/feature_types/multi_feature.js","../src/modes/mode_interface_accessors.js","../src/modes/mode_interface.js","../src/modes/object_to_mode.js","../src/lib/to_dense_array.js","../src/render.js","../src/store.js","../src/ui.js","../src/setup.js","../src/events.js","../src/lib/theme.js","../src/lib/common_selectors.js","../node_modules/@mapbox/point-geometry/index.js","../src/lib/mouse_event_point.js","../src/lib/create_vertex.js","../src/lib/create_midpoint.js","../src/lib/create_supplementary_points.js","../src/lib/double_click_zoom.js","../src/lib/constrain_feature_movement.js","../src/lib/move_features.js","../src/modes/simple_select.js","../src/modes/direct_select.js","../src/modes/draw_point.js","../src/lib/is_event_at_coordinates.js","../src/modes/draw_polygon.js","../src/modes/draw_line_string.js","../src/modes/index.js","../src/options.js","../node_modules/fast-deep-equal/index.js","../node_modules/@mapbox/geojson-normalize/index.js","../src/lib/string_sets_are_equal.js","../src/api.js","../index.js"],"sourcesContent":["\r\nconst ModeHandler = function(mode, DrawContext) {\r\n\r\n  const handlers = {\r\n    drag: [],\r\n    click: [],\r\n    mousemove: [],\r\n    mousedown: [],\r\n    mouseup: [],\r\n    mouseout: [],\r\n    keydown: [],\r\n    keyup: [],\r\n    touchstart: [],\r\n    touchmove: [],\r\n    touchend: [],\r\n    tap: []\r\n  };\r\n\r\n  const ctx = {\r\n    on(event, selector, fn) {\r\n      if (handlers[event] === undefined) {\r\n        throw new Error(`Invalid event type: ${event}`);\r\n      }\r\n      handlers[event].push({\r\n        selector,\r\n        fn\r\n      });\r\n    },\r\n    render(id) {\r\n      DrawContext.store.featureChanged(id);\r\n    }\r\n  };\r\n\r\n  const delegate = function (eventName, event) {\r\n    const handles = handlers[eventName];\r\n    let iHandle = handles.length;\r\n    while (iHandle--) {\r\n      const handle = handles[iHandle];\r\n      if (handle.selector(event)) {\r\n        const skipRender = handle.fn.call(ctx, event);\r\n        if (!skipRender) {\r\n          DrawContext.store.render();\r\n        }\r\n        DrawContext.ui.updateMapClasses();\r\n\r\n        // ensure an event is only handled once\r\n        // we do this to let modes have multiple overlapping selectors\r\n        // and relay on order of oppertations to filter\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  mode.start.call(ctx);\r\n\r\n  return {\r\n    render: mode.render,\r\n    stop() {\r\n      if (mode.stop) mode.stop();\r\n    },\r\n    trash() {\r\n      if (mode.trash) {\r\n        mode.trash();\r\n        DrawContext.store.render();\r\n      }\r\n    },\r\n    combineFeatures() {\r\n      if (mode.combineFeatures) {\r\n        mode.combineFeatures();\r\n      }\r\n    },\r\n    uncombineFeatures() {\r\n      if (mode.uncombineFeatures) {\r\n        mode.uncombineFeatures();\r\n      }\r\n    },\r\n    drag(event) {\r\n      delegate('drag', event);\r\n    },\r\n    click(event) {\r\n      delegate('click', event);\r\n    },\r\n    mousemove(event) {\r\n      delegate('mousemove', event);\r\n    },\r\n    mousedown(event) {\r\n      delegate('mousedown', event);\r\n    },\r\n    mouseup(event) {\r\n      delegate('mouseup', event);\r\n    },\r\n    mouseout(event) {\r\n      delegate('mouseout', event);\r\n    },\r\n    keydown(event) {\r\n      delegate('keydown', event);\r\n    },\r\n    keyup(event) {\r\n      delegate('keyup', event);\r\n    },\r\n    touchstart(event) {\r\n      delegate('touchstart', event);\r\n    },\r\n    touchmove(event) {\r\n      delegate('touchmove', event);\r\n    },\r\n    touchend(event) {\r\n      delegate('touchend', event);\r\n    },\r\n    tap(event) {\r\n      delegate('tap', event);\r\n    }\r\n  };\r\n};\r\n\r\nexport default ModeHandler;\r\n","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","export const classes = {\n  CANVAS: 'mapboxgl-canvas',\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\n\nexport const source = 'mapbox-gl-draw';\n\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\n\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\n\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\n\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select'\n};\n\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\n\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_PROPERTIES: 'change_properties',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\n\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex',\n  ROTATE: 'rotate'\n};\n\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\n\nexport const interactions = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate'\n];\n\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;\n","// import area from '@mapbox/geojson-area';\nimport area from \"@turf/area\";\nimport * as Constants from '../constants.js';\n\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  MultiLineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map((feature) => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area(feature.geometry);\n    }\n    return feature;\n  }).sort(comparator).map((feature) => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;\n","/**\r\n * Returns a bounding box representing the event's location.\r\n *\r\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\r\n * @return {Array<Array<number>>} Bounding box.\r\n */\r\nfunction mapEventToBoundingBox(mapEvent, buffer = 0) {\r\n  return [\r\n    [mapEvent.point.x - buffer, mapEvent.point.y - buffer],\r\n    [mapEvent.point.x + buffer, mapEvent.point.y + buffer]\r\n  ];\r\n}\r\n\r\nexport default mapEventToBoundingBox;\r\n","function StringSet(items) {\r\n  this._items = {};\r\n  this._nums = {};\r\n  this._length = items ? items.length : 0;\r\n  if (!items) return;\r\n  for (let i = 0, l = items.length; i < l; i++) {\r\n    this.add(items[i]);\r\n    if (items[i] === undefined) continue;\r\n    if (typeof items[i] === 'string') this._items[items[i]] = i;\r\n    else this._nums[items[i]] = i;\r\n\r\n  }\r\n}\r\n\r\nStringSet.prototype.add = function(x) {\r\n  if (this.has(x)) return this;\r\n  this._length++;\r\n  if (typeof x === 'string') this._items[x] = this._length;\r\n  else this._nums[x] = this._length;\r\n  return this;\r\n};\r\n\r\nStringSet.prototype.delete = function(x) {\r\n  if (this.has(x) === false) return this;\r\n  this._length--;\r\n  delete this._items[x];\r\n  delete this._nums[x];\r\n  return this;\r\n};\r\n\r\nStringSet.prototype.has = function(x) {\r\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\r\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\r\n};\r\n\r\nStringSet.prototype.values = function() {\r\n  const values = [];\r\n  Object.keys(this._items).forEach((k) => {\r\n    values.push({ k, v: this._items[k] });\r\n  });\r\n  Object.keys(this._nums).forEach((k) => {\r\n    values.push({ k: JSON.parse(k), v: this._nums[k] });\r\n  });\r\n\r\n  return values.sort((a, b) => a.v - b.v).map(a => a.k);\r\n};\r\n\r\nStringSet.prototype.clear = function() {\r\n  this._length = 0;\r\n  this._items = {};\r\n  this._nums = {};\r\n  return this;\r\n};\r\n\r\nexport default StringSet;\r\n","import sortFeatures from './sort_features.js';\nimport mapEventToBoundingBox from './map_event_to_bounding_box.js';\nimport * as Constants from '../constants.js';\nimport StringSet from './string_set.js';\n\nconst META_TYPES = [\n  Constants.meta.FEATURE,\n  Constants.meta.MIDPOINT,\n  Constants.meta.VERTEX,\n  Constants.meta.ROTATE\n];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n\n  const box = (event) ? mapEventToBoundingBox(event, buffer) : bbox;\n\n  const queryParams = {};\n\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id).filter(id => ctx.map.getLayer(id) != null);\n\n  const features = ctx.map.queryRenderedFeatures(box, queryParams)\n    .filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach((feature) => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n\n  return sortFeatures(uniqueFeatures);\n}\n","import featuresAt from './features_at.js';\nimport * as Constants from '../constants.js';\n\nexport default function getFeatureAtAndSetCursors(event, ctx) {\n  const features = featuresAt.click(event, null, ctx);\n  const classes = { mouse: Constants.cursors.NONE };\n\n  if (features[0]) {\n    classes.mouse = (features[0].properties.active === Constants.activeStates.ACTIVE) ?\n      Constants.cursors.MOVE : Constants.cursors.POINTER;\n    classes.feature = features[0].properties.meta;\n  }\n\n  if (ctx.events.currentModeName().indexOf('draw') !== -1) {\n    classes.mouse = Constants.cursors.ADD;\n  }\n\n  ctx.ui.queueMapClasses(classes);\n  ctx.ui.updateMapClasses();\n\n  return features[0];\n}\n","export default function(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return Math.sqrt((x * x) + (y * y));\n}\n","import euclideanDistance from './euclidean_distance.js';\r\n\r\nconst FINE_TOLERANCE = 4;\r\nconst GROSS_TOLERANCE = 12;\r\nconst INTERVAL = 500;\r\n\r\nexport default function isClick(start, end, options = {}) {\r\n  const fineTolerance = (options.fineTolerance != null) ? options.fineTolerance : FINE_TOLERANCE;\r\n  const grossTolerance = (options.grossTolerance != null) ? options.grossTolerance : GROSS_TOLERANCE;\r\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\r\n\r\n  start.point = start.point || end.point;\r\n  start.time = start.time || end.time;\r\n  const moveDistance = euclideanDistance(start.point, end.point);\r\n\r\n  return moveDistance < fineTolerance ||\r\n    (moveDistance < grossTolerance && (end.time - start.time) < interval);\r\n}\r\n","import euclideanDistance from './euclidean_distance.js';\r\n\r\nexport const TAP_TOLERANCE = 25;\r\nexport const TAP_INTERVAL = 250;\r\n\r\nexport default function isTap(start, end, options = {}) {\r\n  const tolerance = (options.tolerance != null) ? options.tolerance : TAP_TOLERANCE;\r\n  const interval = (options.interval != null) ? options.interval : TAP_INTERVAL;\r\n\r\n  start.point = start.point || end.point;\r\n  start.time = start.time || end.time;\r\n  const moveDistance = euclideanDistance(start.point, end.point);\r\n\r\n  return moveDistance < tolerance && (end.time - start.time) < interval;\r\n}\r\n","import {customAlphabet} from 'nanoid/non-secure';\n\nconst nanoid = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', 32);\n\nexport function generateID() {\n  return nanoid();\n}\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size | 0\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size | 0\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n","import {generateID} from '../lib/id.js';\nimport * as Constants from '../constants.js';\n\nconst Feature = function(ctx, geojson) {\n  this.ctx = ctx;\n  this.properties = geojson.properties || {};\n  this.coordinates = geojson.geometry.coordinates;\n  this.id = geojson.id || generateID();\n  this.type = geojson.geometry.type;\n};\n\nFeature.prototype.changed = function() {\n  this.ctx.store.featureChanged(this.id);\n};\n\nFeature.prototype.incomingCoords = function(coords) {\n  this.setCoordinates(coords);\n};\n\nFeature.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.coordinates));\n};\n\nFeature.prototype.setProperty = function(property, value) {\n  this.properties[property] = value;\n};\n\nFeature.prototype.toGeoJSON = function() {\n  return JSON.parse(JSON.stringify({\n    id: this.id,\n    type: Constants.geojsonTypes.FEATURE,\n    properties: this.properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  }));\n};\n\nFeature.prototype.internal = function(mode) {\n  const properties = {\n    id: this.id,\n    meta: Constants.meta.FEATURE,\n    'meta:type': this.type,\n    active: Constants.activeStates.INACTIVE,\n    mode\n  };\n\n  if (this.ctx.options.userProperties) {\n    for (const name in this.properties) {\n      properties[`user_${name}`] = this.properties[name];\n    }\n  }\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  };\n};\n\nexport default Feature;\n","import Feature from './feature.js';\r\n\r\nconst Point = function(ctx, geojson) {\r\n  Feature.call(this, ctx, geojson);\r\n};\r\n\r\nPoint.prototype = Object.create(Feature.prototype);\r\n\r\nPoint.prototype.isValid = function() {\r\n  return typeof this.coordinates[0] === 'number' &&\r\n    typeof this.coordinates[1] === 'number';\r\n};\r\n\r\nPoint.prototype.updateCoordinate = function(pathOrLng, lngOrLat, lat) {\r\n  if (arguments.length === 3) {\r\n    this.coordinates = [lngOrLat, lat];\r\n  } else {\r\n    this.coordinates = [pathOrLng, lngOrLat];\r\n  }\r\n  this.changed();\r\n};\r\n\r\nPoint.prototype.getCoordinate = function() {\r\n  return this.getCoordinates();\r\n};\r\n\r\nexport default Point;\r\n","import Feature from './feature.js';\r\n\r\nconst LineString = function(ctx, geojson) {\r\n  Feature.call(this, ctx, geojson);\r\n};\r\n\r\nLineString.prototype = Object.create(Feature.prototype);\r\n\r\nLineString.prototype.isValid = function() {\r\n  return this.coordinates.length > 1;\r\n};\r\n\r\nLineString.prototype.addCoordinate = function(path, lng, lat) {\r\n  this.changed();\r\n  const id = parseInt(path, 10);\r\n  this.coordinates.splice(id, 0, [lng, lat]);\r\n};\r\n\r\nLineString.prototype.getCoordinate = function(path) {\r\n  const id = parseInt(path, 10);\r\n  return JSON.parse(JSON.stringify(this.coordinates[id]));\r\n};\r\n\r\nLineString.prototype.removeCoordinate = function(path) {\r\n  this.changed();\r\n  this.coordinates.splice(parseInt(path, 10), 1);\r\n};\r\n\r\nLineString.prototype.updateCoordinate = function(path, lng, lat) {\r\n  const id = parseInt(path, 10);\r\n  this.coordinates[id] = [lng, lat];\r\n  this.changed();\r\n};\r\n\r\nexport default LineString;\r\n","import Feature from './feature.js';\r\n\r\nconst Polygon = function(ctx, geojson) {\r\n  Feature.call(this, ctx, geojson);\r\n  this.coordinates = this.coordinates.map(ring => ring.slice(0, -1));\r\n};\r\n\r\nPolygon.prototype = Object.create(Feature.prototype);\r\n\r\nPolygon.prototype.isValid = function() {\r\n  if (this.coordinates.length === 0) return false;\r\n  return this.coordinates.every(ring => ring.length > 2);\r\n};\r\n\r\n// Expects valid geoJSON polygon geometry: first and last positions must be equivalent.\r\nPolygon.prototype.incomingCoords = function(coords) {\r\n  this.coordinates = coords.map(ring => ring.slice(0, -1));\r\n  this.changed();\r\n};\r\n\r\n// Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.\r\nPolygon.prototype.setCoordinates = function(coords) {\r\n  this.coordinates = coords;\r\n  this.changed();\r\n};\r\n\r\nPolygon.prototype.addCoordinate = function(path, lng, lat) {\r\n  this.changed();\r\n  const ids = path.split('.').map(x => parseInt(x, 10));\r\n\r\n  const ring = this.coordinates[ids[0]];\r\n\r\n  ring.splice(ids[1], 0, [lng, lat]);\r\n};\r\n\r\nPolygon.prototype.removeCoordinate = function(path) {\r\n  this.changed();\r\n  const ids = path.split('.').map(x => parseInt(x, 10));\r\n  const ring = this.coordinates[ids[0]];\r\n  if (ring) {\r\n    ring.splice(ids[1], 1);\r\n    if (ring.length < 3) {\r\n      this.coordinates.splice(ids[0], 1);\r\n    }\r\n  }\r\n};\r\n\r\nPolygon.prototype.getCoordinate = function(path) {\r\n  const ids = path.split('.').map(x => parseInt(x, 10));\r\n  const ring = this.coordinates[ids[0]];\r\n  return JSON.parse(JSON.stringify(ring[ids[1]]));\r\n};\r\n\r\nPolygon.prototype.getCoordinates = function() {\r\n  return this.coordinates.map(coords => coords.concat([coords[0]]));\r\n};\r\n\r\nPolygon.prototype.updateCoordinate = function(path, lng, lat) {\r\n  this.changed();\r\n  const parts = path.split('.');\r\n  const ringId = parseInt(parts[0], 10);\r\n  const coordId = parseInt(parts[1], 10);\r\n\r\n  if (this.coordinates[ringId] === undefined) {\r\n    this.coordinates[ringId] = [];\r\n  }\r\n\r\n  this.coordinates[ringId][coordId] = [lng, lat];\r\n};\r\n\r\nexport default Polygon;\r\n","import {generateID} from '../lib/id.js';\r\nimport Feature from './feature.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nimport MultiPoint from './point.js';\r\nimport MultiLineString from './line_string.js';\r\nimport MultiPolygon from './polygon.js';\r\n\r\nconst models = {\r\n  MultiPoint,\r\n  MultiLineString,\r\n  MultiPolygon\r\n};\r\n\r\nconst takeAction = (features, action, path, lng, lat) => {\r\n  const parts = path.split('.');\r\n  const idx = parseInt(parts[0], 10);\r\n  const tail = (!parts[1]) ? null : parts.slice(1).join('.');\r\n  return features[idx][action](tail, lng, lat);\r\n};\r\n\r\nconst MultiFeature = function(ctx, geojson) {\r\n  Feature.call(this, ctx, geojson);\r\n\r\n  delete this.coordinates;\r\n  this.model = models[geojson.geometry.type];\r\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\r\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\r\n};\r\n\r\nMultiFeature.prototype = Object.create(Feature.prototype);\r\n\r\nMultiFeature.prototype._coordinatesToFeatures = function(coordinates) {\r\n  const Model = this.model.bind(this);\r\n  return coordinates.map(coords => new Model(this.ctx, {\r\n    id: generateID(),\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {},\r\n    geometry: {\r\n      coordinates: coords,\r\n      type: this.type.replace('Multi', '')\r\n    }\r\n  }));\r\n};\r\n\r\nMultiFeature.prototype.isValid = function() {\r\n  return this.features.every(f => f.isValid());\r\n};\r\n\r\nMultiFeature.prototype.setCoordinates = function(coords) {\r\n  this.features = this._coordinatesToFeatures(coords);\r\n  this.changed();\r\n};\r\n\r\nMultiFeature.prototype.getCoordinate = function(path) {\r\n  return takeAction(this.features, 'getCoordinate', path);\r\n};\r\n\r\nMultiFeature.prototype.getCoordinates = function() {\r\n  return JSON.parse(JSON.stringify(this.features.map((f) => {\r\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\r\n    return f.coordinates;\r\n  })));\r\n};\r\n\r\nMultiFeature.prototype.updateCoordinate = function(path, lng, lat) {\r\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\r\n  this.changed();\r\n};\r\n\r\nMultiFeature.prototype.addCoordinate = function(path, lng, lat) {\r\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\r\n  this.changed();\r\n};\r\n\r\nMultiFeature.prototype.removeCoordinate = function(path) {\r\n  takeAction(this.features, 'removeCoordinate', path);\r\n  this.changed();\r\n};\r\n\r\nMultiFeature.prototype.getFeatures = function() {\r\n  return this.features;\r\n};\r\n\r\nexport default MultiFeature;\r\n","import * as Constants from '../constants.js';\nimport featuresAt from '../lib/features_at.js';\nimport Point from '../feature_types/point.js';\nimport LineString from '../feature_types/line_string.js';\nimport Polygon from '../feature_types/polygon.js';\nimport MultiFeature from '../feature_types/multi_feature.js';\n\nexport default function ModeInterface(ctx) {\n  this.map = ctx.map;\n  this.drawConfig = JSON.parse(JSON.stringify(ctx.options || {}));\n  this._ctx = ctx;\n}\n\n/**\n * Sets Draw's interal selected state\n * @name this.setSelected\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n */\nModeInterface.prototype.setSelected = function(features) {\n  return this._ctx.store.setSelected(features);\n};\n\n/**\n * Sets Draw's internal selected coordinate state\n * @name this.setSelectedCoordinates\n * @param {Object[]} coords - a array of {coord_path: 'string', feature_id: 'string'}\n */\nModeInterface.prototype.setSelectedCoordinates = function(coords) {\n  this._ctx.store.setSelectedCoordinates(coords);\n  coords.reduce((m, c) => {\n    if (m[c.feature_id] === undefined) {\n      m[c.feature_id] = true;\n      this._ctx.store.get(c.feature_id).changed();\n    }\n    return m;\n  }, {});\n};\n\n/**\n * Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.getSelected\n * @returns {DrawFeature[]}\n */\nModeInterface.prototype.getSelected = function() {\n  return this._ctx.store.getSelected();\n};\n\n/**\n * Get the ids of all currently selected features\n * @name this.getSelectedIds\n * @returns {String[]}\n */\nModeInterface.prototype.getSelectedIds = function() {\n  return this._ctx.store.getSelectedIds();\n};\n\n/**\n * Check if a feature is selected\n * @name this.isSelected\n * @param {String} id - a feature id\n * @returns {Boolean}\n */\nModeInterface.prototype.isSelected = function(id) {\n  return this._ctx.store.isSelected(id);\n};\n\n/**\n * Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) by its id\n * @name this.getFeature\n * @param {String} id - a feature id\n * @returns {DrawFeature}\n */\nModeInterface.prototype.getFeature = function(id) {\n  return this._ctx.store.get(id);\n};\n\n/**\n * Add a feature to draw's internal selected state\n * @name this.select\n * @param {String} id\n */\nModeInterface.prototype.select = function(id) {\n  return this._ctx.store.select(id);\n};\n\n/**\n * Remove a feature from draw's internal selected state\n * @name this.delete\n * @param {String} id\n */\nModeInterface.prototype.deselect = function(id) {\n  return this._ctx.store.deselect(id);\n};\n\n/**\n * Delete a feature from draw\n * @name this.deleteFeature\n * @param {String} id - a feature id\n */\nModeInterface.prototype.deleteFeature = function(id, opts = {}) {\n  return this._ctx.store.delete(id, opts);\n};\n\n/**\n * Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) to draw.\n * See `this.newFeature` for converting geojson into a DrawFeature\n * @name this.addFeature\n * @param {DrawFeature} feature - the feature to add\n */\nModeInterface.prototype.addFeature = function(feature, opts = {}) {\n  return this._ctx.store.add(feature, opts);\n};\n\n/**\n * Clear all selected features\n */\nModeInterface.prototype.clearSelectedFeatures = function() {\n  return this._ctx.store.clearSelected();\n};\n\n/**\n * Clear all selected coordinates\n */\nModeInterface.prototype.clearSelectedCoordinates = function() {\n  return this._ctx.store.clearSelectedCoordinates();\n};\n\n/**\n * Indicate if the different action are currently possible with your mode\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\n * @name this.setActionableState\n * @param {Object} actions\n */\nModeInterface.prototype.setActionableState = function(actions = {}) {\n  const newSet = {\n    trash: actions.trash || false,\n    combineFeatures: actions.combineFeatures || false,\n    uncombineFeatures: actions.uncombineFeatures || false\n  };\n  return this._ctx.events.actionable(newSet);\n};\n\n/**\n * Trigger a mode change\n * @name this.changeMode\n * @param {String} mode - the mode to transition into\n * @param {Object} opts - the options object to pass to the new mode\n * @param {Object} eventOpts - used to control what kind of events are emitted.\n */\nModeInterface.prototype.changeMode = function(mode, opts = {}, eventOpts = {}) {\n  return this._ctx.events.changeMode(mode, opts, eventOpts);\n};\n\n/**\n * Fire a map event\n * @name this.fire\n * @param {String} eventName - the event name.\n * @param {Object} eventData - the event data object.\n */\nModeInterface.prototype.fire = function(eventName, eventData) {\n  return this._ctx.events.fire(eventName, eventData);\n};\n\n/**\n * Update the state of draw map classes\n * @name this.updateUIClasses\n * @param {Object} opts\n */\nModeInterface.prototype.updateUIClasses = function(opts) {\n  return this._ctx.ui.queueMapClasses(opts);\n};\n\n/**\n * If a name is provided it makes that button active, else if makes all buttons inactive\n * @name this.activateUIButton\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive\n */\nModeInterface.prototype.activateUIButton = function(name) {\n  return this._ctx.ui.setActiveButton(name);\n};\n\n/**\n * Get the features at the location of an event object or in a bbox\n * @name this.featuresAt\n * @param {Event||NULL} event - a mapbox-gl event object\n * @param {BBOX||NULL} bbox - the area to get features from\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click\n */\nModeInterface.prototype.featuresAt = function(event, bbox, bufferType = 'click') {\n  if (bufferType !== 'click' && bufferType !== 'touch') throw new Error('invalid buffer type');\n  return featuresAt[bufferType](event, bbox, this._ctx);\n};\n\n/**\n * Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) from geojson\n * @name this.newFeature\n * @param {GeoJSONFeature} geojson\n * @returns {DrawFeature}\n */\nModeInterface.prototype.newFeature = function(geojson) {\n  const type = geojson.geometry.type;\n  if (type === Constants.geojsonTypes.POINT) return new Point(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.LINE_STRING) return new LineString(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.POLYGON) return new Polygon(this._ctx, geojson);\n  return new MultiFeature(this._ctx, geojson);\n};\n\n/**\n * Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.isInstanceOf\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\n * @param {Object} feature - the object that needs to be checked\n * @returns {Boolean}\n */\nModeInterface.prototype.isInstanceOf = function(type, feature) {\n  if (type === Constants.geojsonTypes.POINT) return feature instanceof Point;\n  if (type === Constants.geojsonTypes.LINE_STRING) return feature instanceof LineString;\n  if (type === Constants.geojsonTypes.POLYGON) return feature instanceof Polygon;\n  if (type === 'MultiFeature') return feature instanceof MultiFeature;\n  throw new Error(`Unknown feature class: ${type}`);\n};\n\n/**\n * Force draw to rerender the feature of the provided id\n * @name this.doRender\n * @param {String} id - a feature id\n */\nModeInterface.prototype.doRender = function(id) {\n  return this._ctx.store.featureChanged(id);\n};\n\n","import ModeInterface from './mode_interface_accessors.js';\r\nexport default ModeInterface;\r\n\r\n/**\r\n * Triggered while a mode is being transitioned into.\r\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\r\n * @name MODE.onSetup\r\n * @returns {Object} - this object will be passed to all other life cycle functions\r\n */\r\nModeInterface.prototype.onSetup = function() {};\r\n\r\n/**\r\n * Triggered when a drag event is detected on the map\r\n * @name MODE.onDrag\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onDrag = function() {};\r\n\r\n/**\r\n * Triggered when the mouse is clicked\r\n * @name MODE.onClick\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onClick = function() {};\r\n\r\n/**\r\n * Triggered with the mouse is moved\r\n * @name MODE.onMouseMove\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onMouseMove = function() {};\r\n\r\n/**\r\n * Triggered when the mouse button is pressed down\r\n * @name MODE.onMouseDown\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onMouseDown = function() {};\r\n\r\n/**\r\n * Triggered when the mouse button is released\r\n * @name MODE.onMouseUp\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onMouseUp = function() {};\r\n\r\n/**\r\n * Triggered when the mouse leaves the map's container\r\n * @name MODE.onMouseOut\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onMouseOut = function() {};\r\n\r\n/**\r\n * Triggered when a key up event is detected\r\n * @name MODE.onKeyUp\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onKeyUp = function() {};\r\n\r\n/**\r\n * Triggered when a key down event is detected\r\n * @name MODE.onKeyDown\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onKeyDown = function() {};\r\n\r\n/**\r\n * Triggered when a touch event is started\r\n * @name MODE.onTouchStart\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onTouchStart = function() {};\r\n\r\n/**\r\n * Triggered when one drags thier finger on a mobile device\r\n * @name MODE.onTouchMove\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onTouchMove = function() {};\r\n\r\n/**\r\n * Triggered when one removes their finger from the map\r\n * @name MODE.onTouchEnd\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onTouchEnd = function() {};\r\n\r\n/**\r\n * Triggered when one quicly taps the map\r\n * @name MODE.onTap\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onTap = function() {};\r\n\r\n/**\r\n * Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\r\n * @name MODE.onStop\r\n * @param state {Object} - a mutible state object created by onSetup\r\n */\r\nModeInterface.prototype.onStop = function() {};\r\n\r\n/**\r\n * Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#trash-draw) is called.\r\n * @name MODE.onTrash\r\n * @param state {Object} - a mutible state object created by onSetup\r\n */\r\nModeInterface.prototype.onTrash = function() {};\r\n\r\n/**\r\n * Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#combinefeatures-draw) is called.\r\n * @name MODE.onCombineFeature\r\n * @param state {Object} - a mutible state object created by onSetup\r\n */\r\nModeInterface.prototype.onCombineFeature = function() {};\r\n\r\n/**\r\n * Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#uncombinefeatures-draw) is called.\r\n * @name MODE.onUncombineFeature\r\n * @param state {Object} - a mutible state object created by onSetup\r\n */\r\nModeInterface.prototype.onUncombineFeature = function() {};\r\n\r\n/**\r\n * Triggered per feature on render to convert raw features into set of features for display on the map\r\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\r\n * @name MODE.toDisplayFeatures\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\r\n * @param display {Function} - all geojson objects passed to this be rendered onto the map\r\n */\r\nModeInterface.prototype.toDisplayFeatures = function() {\r\n  throw new Error('You must overwrite toDisplayFeatures');\r\n};\r\n\r\n","import ModeInterface from './mode_interface.js';\r\n\r\nconst eventMapper = {\r\n  drag: 'onDrag',\r\n  click: 'onClick',\r\n  mousemove: 'onMouseMove',\r\n  mousedown: 'onMouseDown',\r\n  mouseup: 'onMouseUp',\r\n  mouseout: 'onMouseOut',\r\n  keyup: 'onKeyUp',\r\n  keydown: 'onKeyDown',\r\n  touchstart: 'onTouchStart',\r\n  touchmove: 'onTouchMove',\r\n  touchend: 'onTouchEnd',\r\n  tap: 'onTap'\r\n};\r\n\r\nconst eventKeys = Object.keys(eventMapper);\r\n\r\nexport default function(modeObject) {\r\n  const modeObjectKeys = Object.keys(modeObject);\r\n\r\n  return function(ctx, startOpts = {}) {\r\n    let state = {};\r\n\r\n    const mode = modeObjectKeys.reduce((m, k) => {\r\n      m[k] = modeObject[k];\r\n      return m;\r\n    }, new ModeInterface(ctx));\r\n\r\n    function wrapper(eh) {\r\n      return e => mode[eh](state, e);\r\n    }\r\n\r\n    return {\r\n      start() {\r\n        state = mode.onSetup(startOpts); // this should set ui buttons\r\n\r\n        // Adds event handlers for all event options\r\n        // add sets the selector to false for all\r\n        // handlers that are not present in the mode\r\n        // to reduce on render calls for functions that\r\n        // have no logic\r\n        eventKeys.forEach((key) => {\r\n          const modeHandler = eventMapper[key];\r\n          let selector = () => false;\r\n          if (modeObject[modeHandler]) {\r\n            selector = () => true;\r\n          }\r\n          this.on(key, selector, wrapper(modeHandler));\r\n        });\r\n\r\n      },\r\n      stop() {\r\n        mode.onStop(state);\r\n      },\r\n      trash() {\r\n        mode.onTrash(state);\r\n      },\r\n      combineFeatures() {\r\n        mode.onCombineFeatures(state);\r\n      },\r\n      uncombineFeatures() {\r\n        mode.onUncombineFeatures(state);\r\n      },\r\n      render(geojson, push) {\r\n        mode.toDisplayFeatures(state, geojson, push);\r\n      }\r\n    };\r\n  };\r\n}\r\n","/**\r\n * Derive a dense array (no `undefined`s) from a single value or array.\r\n *\r\n * @param {any} x\r\n * @return {Array<any>}\r\n */\r\nfunction toDenseArray(x) {\r\n  return [].concat(x).filter(y => y !== undefined);\r\n}\r\n\r\nexport default toDenseArray;\r\n","import * as Constants from './constants.js';\n\nexport default function render() {\n  // eslint-disable-next-line no-invalid-this\n  const store = this;\n  const { ctx } = store;\n  const { map, events } = ctx;\n  const sourceId = Constants.source;\n  const mapExists = map && map.getSource(sourceId) !== undefined;\n\n  const cleanup = () => {\n    store.isDirty = false;\n    store.clearChangedIds();\n  };\n\n  if (!mapExists) return cleanup();\n\n  const mode = events.currentModeName();\n  // ctx.ui.queueMapClasses({ mode });\n\n  const newIds = store.getAllIds();\n  const lastCount = store.source.length;\n  const newFeatures = [];\n\n  for (const id of newIds) {\n    const feature = store.get(id);\n    const featureInternal = feature.internal(mode);\n    events.currentModeRender(featureInternal, (geojson) => {\n      geojson.properties.mode = mode;\n      newFeatures.push(geojson);\n    });\n  }\n\n  store.source = newFeatures;\n  const hasChanges = lastCount !== newIds.length || newIds.length > 0;\n\n  if (hasChanges) {\n    const source = map.getSource(sourceId);\n    source.setData({\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: newFeatures\n    });\n  }\n\n  cleanup();\n}\n","import toDenseArray from './lib/to_dense_array.js';\nimport StringSet from './lib/string_set.js';\nimport render from './render.js';\nimport * as Constants from './constants.js';\n\nexport default function Store(ctx) {\n  this._features = {};\n  this._featureIds = new StringSet();\n  this._selectedFeatureIds = new StringSet();\n  this._selectedCoordinates = [];\n  this._changedFeatureIds = new StringSet();\n  this._emitSelectionChange = false;\n  this._mapInitialConfig = {};\n  this.ctx = ctx;\n  this.source = [];\n\n  // Deduplicate requests to render and tie them to animation frames.\n  let renderRequest;\n  this.render = () => {\n    if (!renderRequest) {\n      renderRequest = requestAnimationFrame(() => {\n        renderRequest = null;\n        render.call(this);\n\n        // Fire deduplicated selection change event\n        if (this._emitSelectionChange) {\n          this.ctx.events.fire(Constants.events.SELECTION_CHANGE, {\n            features: this.getSelected().map(feature => feature.toGeoJSON()),\n            points: this.getSelectedCoordinates().map(coordinate => ({\n              type: Constants.geojsonTypes.FEATURE,\n              properties: {},\n              geometry: {\n                type: Constants.geojsonTypes.POINT,\n                coordinates: coordinate.coordinates\n              }\n            }))\n          });\n\n          this._emitSelectionChange = false;\n        }\n\n        // Fire render event\n        this.ctx.events.fire(Constants.events.RENDER, {});\n      });\n    }\n  };\n\n  this.isDirty = false;\n}\n\n/**\n * Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch\n */\nStore.prototype.createRenderBatch = function() {\n  const holdRender = this.render;\n  let numRenders = 0;\n  this.render = function() {\n    numRenders++;\n  };\n\n  return () => {\n    this.render = holdRender;\n    if (numRenders > 0) {\n      this.render();\n    }\n  };\n};\n\n/**\n * Sets the store's state to dirty.\n * @return {Store} this\n */\nStore.prototype.setDirty = function() {\n  this.isDirty = true;\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureCreated = function(featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    const feature = this.get(featureId);\n    this.ctx.events.fire(Constants.events.CREATE, {\n      features: [feature.toGeoJSON()]\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureChanged = function(featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    this.ctx.events.fire(Constants.events.UPDATE, {\n      action: options.action ? options.action : Constants.updateActions.CHANGE_COORDINATES,\n      features: [this.get(featureId).toGeoJSON()]\n    });\n  }\n\n  return this;\n};\n\n/**\n * Gets the ids of all features currently in changed state.\n * @return {Store} this\n */\nStore.prototype.getChangedIds = function() {\n  return this._changedFeatureIds.values();\n};\n\n/**\n * Sets all features to unchanged state.\n * @return {Store} this\n */\nStore.prototype.clearChangedIds = function() {\n  this._changedFeatureIds.clear();\n  return this;\n};\n\n/**\n * Gets the ids of all features in the store.\n * @return {Store} this\n */\nStore.prototype.getAllIds = function() {\n  return this._featureIds.values();\n};\n\n/**\n * Adds a feature to the store.\n * @param {Object} feature\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n *\n * @return {Store} this\n */\nStore.prototype.add = function(feature, options = {}) {\n  this._features[feature.id] = feature;\n  this._featureIds.add(feature.id);\n  this.featureCreated(feature.id, {silent: options.silent});\n  return this;\n};\n\n/**\n * Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.delete = function(featureIds, options = {}) {\n  const deletedFeaturesToEmit = [];\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._featureIds.has(id)) return;\n    this._featureIds.delete(id);\n    this._selectedFeatureIds.delete(id);\n    if (!options.silent) {\n      if (deletedFeaturesToEmit.indexOf(this._features[id]) === -1) {\n        deletedFeaturesToEmit.push(this._features[id].toGeoJSON());\n      }\n    }\n    delete this._features[id];\n    this.isDirty = true;\n  });\n\n  if (deletedFeaturesToEmit.length) {\n    this.ctx.events.fire(Constants.events.DELETE, {features: deletedFeaturesToEmit});\n  }\n\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature\n */\nStore.prototype.get = function(id) {\n  return this._features[id];\n};\n\n/**\n * Returns all features in the store.\n * @return {Array<Object>}\n */\nStore.prototype.getAll = function() {\n  return Object.keys(this._features).map(id => this._features[id]);\n};\n\n/**\n * Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.select = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.add(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.deselect = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.delete(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.clearSelected = function(options = {}) {\n  this.deselect(this._selectedFeatureIds.values(), { silent: options.silent });\n  return this;\n};\n\n/**\n * Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.setSelected = function(featureIds, options = {}) {\n  featureIds = toDenseArray(featureIds);\n\n  // Deselect any features not in the new selection\n  this.deselect(this._selectedFeatureIds.values().filter(id => featureIds.indexOf(id) === -1), { silent: options.silent });\n\n  // Select any features in the new selection that were not already selected\n  this.select(featureIds.filter(id => !this._selectedFeatureIds.has(id)), { silent: options.silent });\n\n  return this;\n};\n\n/**\n * Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this\n */\nStore.prototype.setSelectedCoordinates = function(coordinates) {\n  this._selectedCoordinates = coordinates;\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this\n */\nStore.prototype.clearSelectedCoordinates = function() {\n  this._selectedCoordinates = [];\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.\n */\nStore.prototype.getSelectedIds = function() {\n  return this._selectedFeatureIds.values();\n};\n\n/**\n * Returns features in the current selection.\n * @return {Array<Object>} Selected features.\n */\nStore.prototype.getSelected = function() {\n  return this.getSelectedIds().map(id => this.get(id));\n};\n\n/**\n * Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.\n */\nStore.prototype.getSelectedCoordinates = function() {\n  const selected = this._selectedCoordinates.map((coordinate) => {\n    const feature = this.get(coordinate.feature_id);\n    return {\n      coordinates: feature.getCoordinate(coordinate.coord_path)\n    };\n  });\n  return selected;\n};\n\n/**\n * Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.\n */\nStore.prototype.isSelected = function(featureId) {\n  return this._selectedFeatureIds.has(featureId);\n};\n\n/**\n * Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n*/\nStore.prototype.setFeatureProperty = function(featureId, property, value, options = {}) {\n  this.get(featureId).setProperty(property, value);\n\n  this.featureChanged(featureId, {\n    silent: options.silent,\n    action: Constants.updateActions.CHANGE_PROPERTIES\n  });\n};\n\nfunction refreshSelectedCoordinates(store, options = {}) {\n  const newSelectedCoordinates = store._selectedCoordinates.filter(point => store._selectedFeatureIds.has(point.feature_id));\n  if (store._selectedCoordinates.length !== newSelectedCoordinates.length && !options.silent) {\n    store._emitSelectionChange = true;\n  }\n  store._selectedCoordinates = newSelectedCoordinates;\n}\n\n/**\n * Stores the initial config for a map, so that we can set it again after we're done.\n*/\nStore.prototype.storeMapConfig = function() {\n  Constants.interactions.forEach((interaction) => {\n    const interactionSet = this.ctx.map[interaction];\n    if (interactionSet) {\n      this._mapInitialConfig[interaction] = this.ctx.map[interaction].isEnabled();\n    }\n  });\n};\n\n/**\n * Restores the initial config for a map, ensuring all is well.\n*/\nStore.prototype.restoreMapConfig = function() {\n  Object.keys(this._mapInitialConfig).forEach((key) => {\n    const value = this._mapInitialConfig[key];\n    if (value) {\n      this.ctx.map[key].enable();\n    } else {\n      this.ctx.map[key].disable();\n    }\n  });\n};\n\n/**\n * Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)\n*/\nStore.prototype.getInitialConfigValue = function(interaction) {\n  if (this._mapInitialConfig[interaction] !== undefined) {\n    return this._mapInitialConfig[interaction];\n  } else {\n    // This needs to be set to whatever the default is for that interaction\n    // It seems to be true for all cases currently, so let's send back `true`.\n    return true;\n  }\n};\n","import * as Constants from './constants.js';\r\n\r\nconst classTypes = ['mode', 'feature', 'mouse'];\r\n\r\nexport default function(ctx) {\r\n\r\n\r\n  const buttonElements = {};\r\n  let activeButton = null;\r\n\r\n  let currentMapClasses = {\r\n    mode: null, // e.g. mode-direct_select\r\n    feature: null, // e.g. feature-vertex\r\n    mouse: null // e.g. mouse-move\r\n  };\r\n\r\n  let nextMapClasses = {\r\n    mode: null,\r\n    feature: null,\r\n    mouse: null\r\n  };\r\n\r\n  function clearMapClasses() {\r\n    queueMapClasses({mode:null, feature:null, mouse:null});\r\n    updateMapClasses();\r\n  }\r\n\r\n  function queueMapClasses(options) {\r\n    nextMapClasses = Object.assign(nextMapClasses, options);\r\n  }\r\n\r\n  function updateMapClasses() {\r\n    if (!ctx.container) return;\r\n\r\n    const classesToRemove = [];\r\n    const classesToAdd = [];\r\n\r\n    classTypes.forEach((type) => {\r\n      if (nextMapClasses[type] === currentMapClasses[type]) return;\r\n\r\n      classesToRemove.push(`${type}-${currentMapClasses[type]}`);\r\n      if (nextMapClasses[type] !== null) {\r\n        classesToAdd.push(`${type}-${nextMapClasses[type]}`);\r\n      }\r\n    });\r\n\r\n    if (classesToRemove.length > 0) {\r\n      ctx.container.classList.remove(...classesToRemove);\r\n    }\r\n\r\n    if (classesToAdd.length > 0) {\r\n      ctx.container.classList.add(...classesToAdd);\r\n    }\r\n\r\n    currentMapClasses = Object.assign(currentMapClasses, nextMapClasses);\r\n  }\r\n\r\n  function createControlButton(id, options = {}) {\r\n    const button = document.createElement('button');\r\n    button.className = `${Constants.classes.CONTROL_BUTTON} ${options.className}`;\r\n    button.setAttribute('title', options.title);\r\n    options.container.appendChild(button);\r\n\r\n    button.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      const clickedButton = e.target;\r\n      if (clickedButton === activeButton) {\r\n        deactivateButtons();\r\n        options.onDeactivate();\r\n        return;\r\n      }\r\n\r\n      setActiveButton(id);\r\n      options.onActivate();\r\n    }, true);\r\n\r\n    return button;\r\n  }\r\n\r\n  function deactivateButtons() {\r\n    if (!activeButton) return;\r\n    activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON);\r\n    activeButton = null;\r\n  }\r\n\r\n  function setActiveButton(id) {\r\n    deactivateButtons();\r\n\r\n    const button = buttonElements[id];\r\n    if (!button) return;\r\n\r\n    if (button && id !== 'trash') {\r\n      button.classList.add(Constants.classes.ACTIVE_BUTTON);\r\n      activeButton = button;\r\n    }\r\n  }\r\n\r\n  function addButtons() {\r\n    const controls = ctx.options.controls;\r\n    const controlGroup = document.createElement('div');\r\n    controlGroup.className = `${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`;\r\n\r\n    if (!controls) return controlGroup;\r\n\r\n    if (controls[Constants.types.POINT]) {\r\n      buttonElements[Constants.types.POINT] = createControlButton(Constants.types.POINT, {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_POINT,\r\n        title: `Marker tool ${ctx.options.keybindings ? '(1)' : ''}`,\r\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POINT),\r\n        onDeactivate: () => ctx.events.trash()\r\n      });\r\n    }\r\n\r\n\r\n    if (controls[Constants.types.LINE]) {\r\n      buttonElements[Constants.types.LINE] = createControlButton(Constants.types.LINE, {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_LINE,\r\n        title: `LineString tool ${ctx.options.keybindings ? '(2)' : ''}`,\r\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING),\r\n        onDeactivate: () => ctx.events.trash()\r\n      });\r\n    }\r\n\r\n    if (controls[Constants.types.POLYGON]) {\r\n      buttonElements[Constants.types.POLYGON] = createControlButton(Constants.types.POLYGON, {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_POLYGON,\r\n        title: `Polygon tool ${ctx.options.keybindings ? '(3)' : ''}`,\r\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POLYGON),\r\n        onDeactivate: () => ctx.events.trash()\r\n      });\r\n    }\r\n\r\n    if (controls.trash) {\r\n      buttonElements.trash = createControlButton('trash', {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_TRASH,\r\n        title: 'Delete',\r\n        onActivate: () => {\r\n          ctx.events.trash();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (controls.combine_features) {\r\n      buttonElements.combine_features = createControlButton('combineFeatures', {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,\r\n        title: 'Combine',\r\n        onActivate: () => {\r\n          ctx.events.combineFeatures();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (controls.uncombine_features) {\r\n      buttonElements.uncombine_features = createControlButton('uncombineFeatures', {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,\r\n        title: 'Uncombine',\r\n        onActivate: () => {\r\n          ctx.events.uncombineFeatures();\r\n        }\r\n      });\r\n    }\r\n\r\n    return controlGroup;\r\n  }\r\n\r\n  function removeButtons() {\r\n    Object.keys(buttonElements).forEach((buttonId) => {\r\n      const button = buttonElements[buttonId];\r\n      if (button.parentNode) {\r\n        button.parentNode.removeChild(button);\r\n      }\r\n      delete buttonElements[buttonId];\r\n    });\r\n  }\r\n\r\n  return {\r\n    setActiveButton,\r\n    queueMapClasses,\r\n    updateMapClasses,\r\n    clearMapClasses,\r\n    addButtons,\r\n    removeButtons\r\n  };\r\n}\r\n","import events from './events.js';\nimport Store from './store.js';\nimport ui from './ui.js';\nimport * as Constants from './constants.js';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      if (ctx.boxZoomInitial) ctx.map.boxZoom.enable();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        ctx.boxZoomInitial = map.boxZoom.isEnabled();\n        map.boxZoom.disable();\n        const dragPanIsEnabled = map.dragPan.isEnabled();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n        if (!dragPanIsEnabled) {\n          map.dragPan.disable();\n        }\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.source, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson',\n        // dynamic: true\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.source)) {\n        ctx.map.removeSource(Constants.source);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n","import setupModeHandler from './lib/mode_handler.js';\nimport getFeaturesAndSetCursor from './lib/get_features_and_set_cursor.js';\nimport featuresAt from './lib/features_at.js';\nimport isClick from './lib/is_click.js';\nimport isTap from './lib/is_tap.js';\nimport * as Constants from './constants.js';\nimport objectToMode from './modes/object_to_mode.js';\n\nexport default function(ctx) {\n\n  const modes = Object.keys(ctx.options.modes).reduce((m, k) => {\n    m[k] = objectToMode(ctx.options.modes[k]);\n    return m;\n  }, {});\n\n  let mouseDownInfo = {};\n  let touchStartInfo = {};\n  const events = {};\n  let currentModeName = null;\n  let currentMode = null;\n\n  events.drag = function(event, isDrag) {\n    if (isDrag({\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      ctx.ui.queueMapClasses({ mouse: Constants.cursors.DRAG });\n      currentMode.drag(event);\n    } else {\n      event.originalEvent.stopPropagation();\n    }\n  };\n\n  events.mousedrag = function(event) {\n    events.drag(event, endInfo => !isClick(mouseDownInfo, endInfo));\n  };\n\n  events.touchdrag = function(event) {\n    events.drag(event, endInfo => !isTap(touchStartInfo, endInfo));\n  };\n\n  events.mousemove = function(event) {\n    const button = event.originalEvent.buttons !== undefined ? event.originalEvent.buttons : event.originalEvent.which;\n    if (button === 1) {\n      return events.mousedrag(event);\n    }\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousemove(event);\n  };\n\n  events.mousedown = function(event) {\n    mouseDownInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousedown(event);\n  };\n\n  events.mouseup = function(event) {\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n\n    if (isClick(mouseDownInfo, {\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      currentMode.click(event);\n    } else {\n      currentMode.mouseup(event);\n    }\n  };\n\n  events.mouseout = function(event) {\n    currentMode.mouseout(event);\n  };\n\n  events.touchstart = function(event) {\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    touchStartInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    currentMode.touchstart(event);\n  };\n\n  events.touchmove = function(event) {\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    currentMode.touchmove(event);\n    return events.touchdrag(event);\n  };\n\n  events.touchend = function(event) {\n    // Prevent emulated mouse events because we will fully handle the touch here.\n    // This does not stop the touch events from propogating to mapbox though.\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    if (isTap(touchStartInfo, {\n      time: new Date().getTime(),\n      point: event.point\n    })) {\n      currentMode.tap(event);\n    } else {\n      currentMode.touchend(event);\n    }\n  };\n\n  // 8 - Backspace\n  // 46 - Delete\n  const isKeyModeValid = code => !(code === 8 || code === 46 || (code >= 48 && code <= 57));\n\n  events.keydown = function(event) {\n    const isMapElement = (event.srcElement || event.target).classList.contains(Constants.classes.CANVAS);\n    if (!isMapElement) return; // we only handle events on the map\n\n    if ((event.keyCode === 8 || event.keyCode === 46) && ctx.options.controls.trash) {\n      event.preventDefault();\n      currentMode.trash();\n    } else if (isKeyModeValid(event.keyCode)) {\n      currentMode.keydown(event);\n    } else if (event.keyCode === 49 && ctx.options.controls.point) {\n      changeMode(Constants.modes.DRAW_POINT);\n    } else if (event.keyCode === 50 && ctx.options.controls.line_string) {\n      changeMode(Constants.modes.DRAW_LINE_STRING);\n    } else if (event.keyCode === 51 && ctx.options.controls.polygon) {\n      changeMode(Constants.modes.DRAW_POLYGON);\n    }\n  };\n\n  events.keyup = function(event) {\n    if (isKeyModeValid(event.keyCode)) {\n      currentMode.keyup(event);\n    }\n  };\n\n  events.zoomend = function() {\n    ctx.store.changeZoom();\n  };\n\n  events.data = function(event) {\n    if (event.dataType === 'style') {\n      const { setup, map, options, store } = ctx;\n      const hasLayers = options.styles.some(style => map.getLayer(style.id));\n      if (!hasLayers) {\n        setup.addLayers();\n        store.setDirty();\n        store.render();\n      }\n    }\n  };\n\n  function changeMode(modename, nextModeOptions, eventOptions = {}) {\n    currentMode.stop();\n\n    const modebuilder = modes[modename];\n    if (modebuilder === undefined) {\n      throw new Error(`${modename} is not valid`);\n    }\n    currentModeName = modename;\n    const mode = modebuilder(ctx, nextModeOptions);\n    currentMode = setupModeHandler(mode, ctx);\n\n    if (!eventOptions.silent) {\n      ctx.map.fire(Constants.events.MODE_CHANGE, { mode: modename});\n    }\n\n    ctx.store.setDirty();\n    ctx.store.render();\n  }\n\n  const actionState = {\n    trash: false,\n    combineFeatures: false,\n    uncombineFeatures: false\n  };\n\n  function actionable(actions) {\n    let changed = false;\n    Object.keys(actions).forEach((action) => {\n      if (actionState[action] === undefined) throw new Error('Invalid action type');\n      if (actionState[action] !== actions[action]) changed = true;\n      actionState[action] = actions[action];\n    });\n    if (changed) ctx.map.fire(Constants.events.ACTIONABLE, { actions: actionState });\n  }\n\n  const api = {\n    start() {\n      currentModeName = ctx.options.defaultMode;\n      currentMode = setupModeHandler(modes[currentModeName](ctx), ctx);\n    },\n    changeMode,\n    actionable,\n    currentModeName() {\n      return currentModeName;\n    },\n    currentModeRender(geojson, push) {\n      return currentMode.render(geojson, push);\n    },\n    fire(eventName, eventData) {\n      if (!ctx.map) return;\n      ctx.map.fire(eventName, eventData);\n    },\n    addEventListeners() {\n      ctx.map.on('mousemove', events.mousemove);\n      ctx.map.on('mousedown', events.mousedown);\n      ctx.map.on('mouseup', events.mouseup);\n      ctx.map.on('data', events.data);\n\n      ctx.map.on('touchmove', events.touchmove);\n      ctx.map.on('touchstart', events.touchstart);\n      ctx.map.on('touchend', events.touchend);\n\n      ctx.container.addEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.addEventListener('keydown', events.keydown);\n        ctx.container.addEventListener('keyup', events.keyup);\n      }\n    },\n    removeEventListeners() {\n      ctx.map.off('mousemove', events.mousemove);\n      ctx.map.off('mousedown', events.mousedown);\n      ctx.map.off('mouseup', events.mouseup);\n      ctx.map.off('data', events.data);\n\n      ctx.map.off('touchmove', events.touchmove);\n      ctx.map.off('touchstart', events.touchstart);\n      ctx.map.off('touchend', events.touchend);\n\n      ctx.container.removeEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.removeEventListener('keydown', events.keydown);\n        ctx.container.removeEventListener('keyup', events.keyup);\n      }\n    },\n    trash(options) {\n      currentMode.trash(options);\n    },\n    combineFeatures() {\n      currentMode.combineFeatures();\n    },\n    uncombineFeatures() {\n      currentMode.uncombineFeatures();\n    },\n    getMode() {\n      return currentModeName;\n    }\n  };\n\n  return api;\n}\n","/* eslint comma-dangle: [\"error\", \"always-multiline\"] */\r\n\r\nconst blue = '#3bb2d0';\r\nconst orange = '#fbb03b';\r\nconst white = '#fff';\r\n\r\nexport default [\r\n  // Polygons\r\n  //   Solid fill\r\n  //   Active state defines color\r\n  {\r\n    'id': 'gl-draw-polygon-fill',\r\n    'type': 'fill',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Polygon'],\r\n    ],\r\n    'paint': {\r\n      'fill-color': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], orange,\r\n        blue,\r\n      ],\r\n      'fill-opacity': 0.1,\r\n    },\r\n  },\r\n  // Lines\r\n  // Polygon\r\n  //   Matches Lines AND Polygons\r\n  //   Active state defines color\r\n  {\r\n    'id': 'gl-draw-lines',\r\n    'type': 'line',\r\n    'filter': [\r\n      'any',\r\n      ['==', '$type', 'LineString'],\r\n      ['==', '$type', 'Polygon'],\r\n    ],\r\n    'layout': {\r\n      'line-cap': 'round',\r\n      'line-join': 'round',\r\n    },\r\n    'paint': {\r\n      'line-color': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], orange,\r\n        blue,\r\n      ],\r\n      'line-dasharray': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], [0.2, 2],\r\n        [2, 0],\r\n      ],\r\n      'line-width': 2,\r\n    },\r\n  },\r\n  // Points\r\n  //   Circle with an outline\r\n  //   Active state defines size and color\r\n  {\r\n    'id': 'gl-draw-point-outer',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Point'],\r\n      ['==', 'meta', 'feature'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], 7,\r\n        5,\r\n      ],\r\n      'circle-color': white,\r\n    },\r\n  },\r\n  {\r\n    'id': 'gl-draw-point-inner',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Point'],\r\n      ['==', 'meta', 'feature'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], 5,\r\n        3,\r\n      ],\r\n      'circle-color': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], orange,\r\n        blue,\r\n      ],\r\n    },\r\n  },\r\n  // Vertex\r\n  //   Visible when editing polygons and lines\r\n  //   Similar behaviour to Points\r\n  //   Active state defines size\r\n  {\r\n    'id': 'gl-draw-vertex-outer',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Point'],\r\n      ['==', 'meta', 'vertex'],\r\n      ['!=', 'mode', 'simple_select'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], 7,\r\n        5,\r\n      ],\r\n      'circle-color': white,\r\n    },\r\n  },\r\n  {\r\n    'id': 'gl-draw-vertex-inner',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Point'],\r\n      ['==', 'meta', 'vertex'],\r\n      ['!=', 'mode', 'simple_select'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], 5,\r\n        3,\r\n      ],\r\n      'circle-color': orange,\r\n    },\r\n  },\r\n  // Midpoint\r\n  //   Visible when editing polygons and lines\r\n  //   Tapping or dragging them adds a new vertex to the feature\r\n  {\r\n    'id': 'gl-draw-midpoint',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', 'meta', 'midpoint'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': 3,\r\n      'circle-color': orange,\r\n    },\r\n  },\r\n];\r\n","import * as Constants from '../constants.js';\r\n\r\nexport function isOfMetaType(type) {\r\n  return function(e) {\r\n    const featureTarget = e.featureTarget;\r\n    if (!featureTarget) return false;\r\n    if (!featureTarget.properties) return false;\r\n    return featureTarget.properties.meta === type;\r\n  };\r\n}\r\n\r\nexport function isShiftMousedown(e) {\r\n  if (!e.originalEvent) return false;\r\n  if (!e.originalEvent.shiftKey) return false;\r\n  return e.originalEvent.button === 0;\r\n}\r\n\r\nexport function isActiveFeature(e) {\r\n  if (!e.featureTarget) return false;\r\n  if (!e.featureTarget.properties) return false;\r\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\r\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\r\n}\r\n\r\nexport function isInactiveFeature(e) {\r\n  if (!e.featureTarget) return false;\r\n  if (!e.featureTarget.properties) return false;\r\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\r\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\r\n}\r\n\r\nexport function noTarget(e) {\r\n  return e.featureTarget === undefined;\r\n}\r\n\r\nexport function isFeature(e) {\r\n  if (!e.featureTarget) return false;\r\n  if (!e.featureTarget.properties) return false;\r\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\r\n}\r\n\r\nexport function isVertex(e) {\r\n  const featureTarget = e.featureTarget;\r\n  if (!featureTarget) return false;\r\n  if (!featureTarget.properties) return false;\r\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\r\n}\r\n\r\nexport function isShiftDown(e) {\r\n  if (!e.originalEvent) return false;\r\n  return e.originalEvent.shiftKey === true;\r\n}\r\n\r\nexport function isEscapeKey(e) {\r\n  return e.keyCode === 27;\r\n}\r\n\r\nexport function isEnterKey(e) {\r\n  return e.keyCode === 13;\r\n}\r\n\r\nexport function isTrue() {\r\n  return true;\r\n}\r\n","/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class\n * @param {number} x the x-coordinate. This could be longitude or screen pixels, or any other sort of unit.\n * @param {number} y the y-coordinate. This could be latitude or screen pixels, or any other sort of unit.\n *\n * @example\n * const point = new Point(-77, 38);\n */\nexport default function Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    mult(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    div(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround(a, p) { return this.clone()._rotateAround(a, p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {[number, number, number, number]} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round() { return this.clone()._round(); },\n\n    /**\n     * Return the magnitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {number} magnitude\n     */\n    mag() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    dist(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    distSqr(p) {\n        const dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {number} angle\n     */\n    angle() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleTo(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleWith(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /**\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {number} x the x-coordinate\n     * @param {number} y the y-coordinate\n     * @return {number} the angle in radians\n     */\n    angleWithSep(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    /** @param {[number, number, number, number]} m */\n    _matMult(m) {\n        const x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _add(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _sub(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    /** @param {number} k */\n    _mult(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    /** @param {number} k */\n    _div(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _multByPoint(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _divByPoint(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp() {\n        const y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    /** @param {number} angle */\n    _rotate(angle) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /**\n     * @param {number} angle\n     * @param {Point} p\n     */\n    _rotateAround(angle, p) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    },\n\n    constructor: Point\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, return it unchanged.\n * @param {Point | [number, number] | {x: number, y: number}} p input value\n * @return {Point} constructed point.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (p) {\n    if (p instanceof Point) {\n        return /** @type {Point} */ (p);\n    }\n    if (Array.isArray(p)) {\n        return new Point(+p[0], +p[1]);\n    }\n    if (p.x !== undefined && p.y !== undefined) {\n        return new Point(+p.x, +p.y);\n    }\n    throw new Error('Expected [x, y] or {x, y} point format');\n};\n","import Point from '@mapbox/point-geometry';\r\n\r\n/**\r\n * Returns a Point representing a mouse event's position\r\n * relative to a containing element.\r\n *\r\n * @param {MouseEvent} mouseEvent\r\n * @param {Node} container\r\n * @returns {Point}\r\n */\r\nfunction mouseEventPoint(mouseEvent, container) {\r\n  const rect = container.getBoundingClientRect();\r\n  return new Point(\r\n    mouseEvent.clientX - rect.left - (container.clientLeft || 0),\r\n    mouseEvent.clientY - rect.top - (container.clientTop || 0)\r\n  );\r\n}\r\n\r\nexport default mouseEventPoint;\r\n","import * as Constants from '../constants.js';\n// import {generateID} from '../lib/id.js';\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\n\nexport default function(parentId, coordinates, path, selected) {\n  return {\n    // id: generateID(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: (selected) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates\n    }\n  };\n}\n","import * as Constants from '../constants.js';\r\n\r\nexport default function(parent, startVertex, endVertex) {\r\n  const startCoord = startVertex.geometry.coordinates;\r\n  const endCoord = endVertex.geometry.coordinates;\r\n\r\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\r\n  // so run away\r\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\r\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\r\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\r\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\r\n    return null;\r\n  }\r\n\r\n  const mid = {\r\n    lng: (startCoord[0] + endCoord[0]) / 2,\r\n    lat: (startCoord[1] + endCoord[1]) / 2\r\n  };\r\n\r\n  return {\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {\r\n      meta: Constants.meta.MIDPOINT,\r\n      parent,\r\n      lng: mid.lng,\r\n      lat: mid.lat,\r\n      coord_path: endVertex.properties.coord_path\r\n    },\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POINT,\r\n      coordinates: [mid.lng, mid.lat]\r\n    }\r\n  };\r\n}\r\n","import createVertex from './create_vertex.js';\r\nimport createMidpoint from './create_midpoint.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\r\n  const { type, coordinates } = geojson.geometry;\r\n  const featureId = geojson.properties && geojson.properties.id;\r\n\r\n  let supplementaryPoints = [];\r\n\r\n  if (type === Constants.geojsonTypes.POINT) {\r\n    // For points, just create a vertex\r\n    supplementaryPoints.push(createVertex(featureId, coordinates, basePath, isSelectedPath(basePath)));\r\n  } else if (type === Constants.geojsonTypes.POLYGON) {\r\n    // Cycle through a Polygon's rings and\r\n    // process each line\r\n    coordinates.forEach((line, lineIndex) => {\r\n      processLine(line, (basePath !== null) ? `${basePath}.${lineIndex}` : String(lineIndex));\r\n    });\r\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\r\n    processLine(coordinates, basePath);\r\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\r\n    processMultiGeometry();\r\n  }\r\n\r\n  function processLine(line, lineBasePath) {\r\n    let firstPointString = '';\r\n    let lastVertex = null;\r\n    line.forEach((point, pointIndex) => {\r\n      const pointPath = (lineBasePath !== undefined && lineBasePath !== null) ? `${lineBasePath}.${pointIndex}` : String(pointIndex);\r\n      const vertex = createVertex(featureId, point, pointPath, isSelectedPath(pointPath));\r\n\r\n      // If we're creating midpoints, check if there was a\r\n      // vertex before this one. If so, add a midpoint\r\n      // between that vertex and this one.\r\n      if (options.midpoints && lastVertex) {\r\n        const midpoint = createMidpoint(featureId, lastVertex, vertex);\r\n        if (midpoint) {\r\n          supplementaryPoints.push(midpoint);\r\n        }\r\n      }\r\n      lastVertex = vertex;\r\n\r\n      // A Polygon line's last point is the same as the first point. If we're on the last\r\n      // point, we want to draw a midpoint before it but not another vertex on it\r\n      // (since we already a vertex there, from the first point).\r\n      const stringifiedPoint = JSON.stringify(point);\r\n      if (firstPointString !== stringifiedPoint) {\r\n        supplementaryPoints.push(vertex);\r\n      }\r\n      if (pointIndex === 0) {\r\n        firstPointString = stringifiedPoint;\r\n      }\r\n    });\r\n  }\r\n\r\n  function isSelectedPath(path) {\r\n    if (!options.selectedPaths) return false;\r\n    return options.selectedPaths.indexOf(path) !== -1;\r\n  }\r\n\r\n  // Split a multi-geometry into constituent\r\n  // geometries, and accumulate the supplementary points\r\n  // for each of those constituents\r\n  function processMultiGeometry() {\r\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, '');\r\n    coordinates.forEach((subCoordinates, index) => {\r\n      const subFeature = {\r\n        type: Constants.geojsonTypes.FEATURE,\r\n        properties: geojson.properties,\r\n        geometry: {\r\n          type: subType,\r\n          coordinates: subCoordinates\r\n        }\r\n      };\r\n      supplementaryPoints = supplementaryPoints.concat(createSupplementaryPoints(subFeature, options, index));\r\n    });\r\n  }\r\n\r\n  return supplementaryPoints;\r\n}\r\n\r\nexport default createSupplementaryPoints;\r\n","export default {\r\n  enable(ctx) {\r\n    setTimeout(() => {\r\n      // First check we've got a map and some context.\r\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\r\n      // Now check initial state wasn't false (we leave it disabled if so)\r\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\r\n      ctx.map.doubleClickZoom.enable();\r\n    }, 0);\r\n  },\r\n  disable(ctx) {\r\n    setTimeout(() => {\r\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\r\n      // Always disable here, as it's necessary in some cases.\r\n      ctx.map.doubleClickZoom.disable();\r\n    }, 0);\r\n  }\r\n};\r\n","import * as Constants from '../constants.js';\r\n\r\nconst {\r\n  LAT_MIN,\r\n  LAT_MAX,\r\n  LAT_RENDERED_MIN,\r\n  LAT_RENDERED_MAX,\r\n  LNG_MIN,\r\n  LNG_MAX,\r\n} = Constants;\r\nfunction extent(feature) {\r\n  const depth = {\r\n    Point: 0,\r\n    LineString: 1,\r\n    Polygon: 2,\r\n    MultiPoint: 1,\r\n    MultiLineString: 2,\r\n    MultiPolygon: 3,\r\n  }[feature.geometry.type];\r\n\r\n  const coords = [feature.geometry.coordinates].flat(depth);\r\n  const lngs = coords.map(coord => coord[0]);\r\n  const lats = coords.map(coord => coord[1]);\r\n  const min = vals => Math.min.apply(null, vals);\r\n  const max = vals => Math.max.apply(null, vals);\r\n  return [min(lngs), min(lats), max(lngs), max(lats)];\r\n}\r\n\r\n// Ensure that we do not drag north-south far enough for\r\n// - any part of any feature to exceed the poles\r\n// - any feature to be completely lost in the space between the projection's\r\n//   edge and the poles, such that it couldn't be re-selected and moved back\r\nexport default function(geojsonFeatures, delta) {\r\n  // \"inner edge\" = a feature's latitude closest to the equator\r\n  let northInnerEdge = LAT_MIN;\r\n  let southInnerEdge = LAT_MAX;\r\n  // \"outer edge\" = a feature's latitude furthest from the equator\r\n  let northOuterEdge = LAT_MIN;\r\n  let southOuterEdge = LAT_MAX;\r\n\r\n  let westEdge = LNG_MAX;\r\n  let eastEdge = LNG_MIN;\r\n\r\n  geojsonFeatures.forEach((feature) => {\r\n    const bounds = extent(feature);\r\n    const featureSouthEdge = bounds[1];\r\n    const featureNorthEdge = bounds[3];\r\n    const featureWestEdge = bounds[0];\r\n    const featureEastEdge = bounds[2];\r\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\r\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\r\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\r\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\r\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\r\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\r\n  });\r\n\r\n\r\n  // These changes are not mutually exclusive: we might hit the inner\r\n  // edge but also have hit the outer edge and therefore need\r\n  // another readjustment\r\n  const constrainedDelta = delta;\r\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\r\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\r\n  }\r\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\r\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\r\n  }\r\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\r\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\r\n  }\r\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\r\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\r\n  }\r\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\r\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\r\n  }\r\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\r\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\r\n  }\r\n\r\n  return constrainedDelta;\r\n}\r\n","import constrainFeatureMovement from './constrain_feature_movement.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nexport default function(features, delta) {\r\n  const constrainedDelta = constrainFeatureMovement(features.map(feature => feature.toGeoJSON()), delta);\r\n\r\n  features.forEach((feature) => {\r\n    const currentCoordinates = feature.getCoordinates();\r\n\r\n    const moveCoordinate = (coord) => {\r\n      const point = {\r\n        lng: coord[0] + constrainedDelta.lng,\r\n        lat: coord[1] + constrainedDelta.lat\r\n      };\r\n      return [point.lng, point.lat];\r\n    };\r\n    const moveRing = ring => ring.map(coord => moveCoordinate(coord));\r\n    const moveMultiPolygon = multi => multi.map(ring => moveRing(ring));\r\n\r\n    let nextCoordinates;\r\n    if (feature.type === Constants.geojsonTypes.POINT) {\r\n      nextCoordinates = moveCoordinate(currentCoordinates);\r\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\r\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\r\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\r\n      nextCoordinates = currentCoordinates.map(moveRing);\r\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\r\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\r\n    }\r\n\r\n    feature.incomingCoords(nextCoordinates);\r\n  });\r\n}\r\n","import * as CommonSelectors from '../lib/common_selectors.js';\r\nimport mouseEventPoint from '../lib/mouse_event_point.js';\r\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\r\nimport StringSet from '../lib/string_set.js';\r\nimport doubleClickZoom from '../lib/double_click_zoom.js';\r\nimport moveFeatures from '../lib/move_features.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nconst SimpleSelect = {};\r\n\r\nSimpleSelect.onSetup = function(opts) {\r\n  // turn the opts into state.\r\n  const state = {\r\n    dragMoveLocation: null,\r\n    boxSelectStartLocation: null,\r\n    boxSelectElement: undefined,\r\n    boxSelecting: false,\r\n    canBoxSelect: false,\r\n    dragMoving: false,\r\n    canDragMove: false,\r\n    initialDragPanState: this.map.dragPan.isEnabled(),\r\n    initiallySelectedFeatureIds: opts.featureIds || []\r\n  };\r\n\r\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => this.getFeature(id) !== undefined));\r\n  this.fireActionable();\r\n\r\n  this.setActionableState({\r\n    combineFeatures: true,\r\n    uncombineFeatures: true,\r\n    trash: true\r\n  });\r\n\r\n  return state;\r\n};\r\n\r\nSimpleSelect.fireUpdate = function() {\r\n  this.fire(Constants.events.UPDATE, {\r\n    action: Constants.updateActions.MOVE,\r\n    features: this.getSelected().map(f => f.toGeoJSON())\r\n  });\r\n};\r\n\r\nSimpleSelect.fireActionable = function() {\r\n  const selectedFeatures = this.getSelected();\r\n\r\n  const multiFeatures = selectedFeatures.filter(\r\n    feature => this.isInstanceOf('MultiFeature', feature)\r\n  );\r\n\r\n  let combineFeatures = false;\r\n\r\n  if (selectedFeatures.length > 1) {\r\n    combineFeatures = true;\r\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\r\n    selectedFeatures.forEach((feature) => {\r\n      if (feature.type.replace('Multi', '') !== featureType) {\r\n        combineFeatures = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  const uncombineFeatures = multiFeatures.length > 0;\r\n  const trash = selectedFeatures.length > 0;\r\n\r\n  this.setActionableState({\r\n    combineFeatures, uncombineFeatures, trash\r\n  });\r\n};\r\n\r\nSimpleSelect.getUniqueIds = function(allFeatures) {\r\n  if (!allFeatures.length) return [];\r\n  const ids = allFeatures.map(s => s.properties.id)\r\n    .filter(id => id !== undefined)\r\n    .reduce((memo, id) => {\r\n      memo.add(id);\r\n      return memo;\r\n    }, new StringSet());\r\n\r\n  return ids.values();\r\n};\r\n\r\nSimpleSelect.stopExtendedInteractions = function(state) {\r\n  if (state.boxSelectElement) {\r\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\r\n    state.boxSelectElement = null;\r\n  }\r\n\r\n  if ((state.canDragMove || state.canBoxSelect) && state.initialDragPanState === true) {\r\n    this.map.dragPan.enable();\r\n  }\r\n\r\n  state.boxSelecting = false;\r\n  state.canBoxSelect = false;\r\n  state.dragMoving = false;\r\n  state.canDragMove = false;\r\n};\r\n\r\nSimpleSelect.onStop = function() {\r\n  doubleClickZoom.enable(this);\r\n};\r\n\r\nSimpleSelect.onMouseMove = function(state, e) {\r\n  const isFeature = CommonSelectors.isFeature(e);\r\n  if (isFeature && state.dragMoving) this.fireUpdate();\r\n\r\n  // On mousemove that is not a drag, stop extended interactions.\r\n  // This is useful if you drag off the canvas, release the button,\r\n  // then move the mouse back over the canvas --- we don't allow the\r\n  // interaction to continue then, but we do let it continue if you held\r\n  // the mouse button that whole time\r\n  this.stopExtendedInteractions(state);\r\n\r\n  // Skip render\r\n  return true;\r\n};\r\n\r\nSimpleSelect.onMouseOut = function(state) {\r\n  // As soon as you mouse leaves the canvas, update the feature\r\n  if (state.dragMoving) return this.fireUpdate();\r\n\r\n  // Skip render\r\n  return true;\r\n};\r\n\r\nSimpleSelect.onTap = SimpleSelect.onClick = function(state, e) {\r\n  // Click (with or without shift) on no feature\r\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\r\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\r\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\r\n};\r\n\r\nSimpleSelect.clickAnywhere = function (state) {\r\n  // Clear the re-render selection\r\n  const wasSelected = this.getSelectedIds();\r\n  if (wasSelected.length) {\r\n    this.clearSelectedFeatures();\r\n    wasSelected.forEach(id => this.doRender(id));\r\n  }\r\n  doubleClickZoom.enable(this);\r\n  this.stopExtendedInteractions(state);\r\n};\r\n\r\nSimpleSelect.clickOnVertex = function(state, e) {\r\n  // Enter direct select mode\r\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\r\n    featureId: e.featureTarget.properties.parent,\r\n    coordPath: e.featureTarget.properties.coord_path,\r\n    startPos: e.lngLat\r\n  });\r\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n};\r\n\r\nSimpleSelect.startOnActiveFeature = function(state, e) {\r\n  // Stop any already-underway extended interactions\r\n  this.stopExtendedInteractions(state);\r\n\r\n  // Disable map.dragPan immediately so it can't start\r\n  this.map.dragPan.disable();\r\n\r\n  // Re-render it and enable drag move\r\n  this.doRender(e.featureTarget.properties.id);\r\n\r\n  // Set up the state for drag moving\r\n  state.canDragMove = true;\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nSimpleSelect.clickOnFeature = function(state, e) {\r\n  // Stop everything\r\n  doubleClickZoom.disable(this);\r\n  this.stopExtendedInteractions(state);\r\n\r\n  const isShiftClick = CommonSelectors.isShiftDown(e);\r\n  const selectedFeatureIds = this.getSelectedIds();\r\n  const featureId = e.featureTarget.properties.id;\r\n  const isFeatureSelected = this.isSelected(featureId);\r\n\r\n  // Click (without shift) on any selected feature but a point\r\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\r\n    // Enter direct select mode\r\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\r\n      featureId\r\n    });\r\n  }\r\n\r\n  // Shift-click on a selected feature\r\n  if (isFeatureSelected && isShiftClick) {\r\n    // Deselect it\r\n    this.deselect(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\r\n    if (selectedFeatureIds.length === 1) {\r\n      doubleClickZoom.enable(this);\r\n    }\r\n  // Shift-click on an unselected feature\r\n  } else if (!isFeatureSelected && isShiftClick) {\r\n    // Add it to the selection\r\n    this.select(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  // Click (without shift) on an unselected feature\r\n  } else if (!isFeatureSelected && !isShiftClick) {\r\n    // Make it the only selected feature\r\n    selectedFeatureIds.forEach(id => this.doRender(id));\r\n    this.setSelected(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  }\r\n\r\n  // No matter what, re-render the clicked feature\r\n  this.doRender(featureId);\r\n};\r\n\r\nSimpleSelect.onMouseDown = function(state, e) {\r\n  state.initialDragPanState = this.map.dragPan.isEnabled();\r\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\r\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\r\n};\r\n\r\nSimpleSelect.startBoxSelect = function(state, e) {\r\n  this.stopExtendedInteractions(state);\r\n  this.map.dragPan.disable();\r\n  // Enable box select\r\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\r\n  state.canBoxSelect = true;\r\n};\r\n\r\nSimpleSelect.onTouchStart = function(state, e) {\r\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\r\n};\r\n\r\nSimpleSelect.onDrag = function(state, e) {\r\n  if (state.canDragMove) return this.dragMove(state, e);\r\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\r\n};\r\n\r\nSimpleSelect.whileBoxSelect = function(state, e) {\r\n  state.boxSelecting = true;\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n\r\n  // Create the box node if it doesn't exist\r\n  if (!state.boxSelectElement) {\r\n    state.boxSelectElement = document.createElement('div');\r\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\r\n    this.map.getContainer().appendChild(state.boxSelectElement);\r\n  }\r\n\r\n  // Adjust the box node's width and xy position\r\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\r\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\r\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\r\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\r\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\r\n  const translateValue = `translate(${minX}px, ${minY}px)`;\r\n  state.boxSelectElement.style.transform = translateValue;\r\n  state.boxSelectElement.style.WebkitTransform = translateValue;\r\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\r\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\r\n};\r\n\r\nSimpleSelect.dragMove = function(state, e) {\r\n  // Dragging when drag move is enabled\r\n  state.dragMoving = true;\r\n  e.originalEvent.stopPropagation();\r\n\r\n  const delta = {\r\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\r\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\r\n  };\r\n\r\n  moveFeatures(this.getSelected(), delta);\r\n\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nSimpleSelect.onTouchEnd = SimpleSelect.onMouseUp = function(state, e) {\r\n  // End any extended interactions\r\n  if (state.dragMoving) {\r\n    this.fireUpdate();\r\n  } else if (state.boxSelecting) {\r\n    const bbox = [\r\n      state.boxSelectStartLocation,\r\n      mouseEventPoint(e.originalEvent, this.map.getContainer())\r\n    ];\r\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\r\n    const idsToSelect = this.getUniqueIds(featuresInBox)\r\n      .filter(id => !this.isSelected(id));\r\n\r\n    if (idsToSelect.length) {\r\n      this.select(idsToSelect);\r\n      idsToSelect.forEach(id => this.doRender(id));\r\n      this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n    }\r\n  }\r\n  this.stopExtendedInteractions(state);\r\n};\r\n\r\nSimpleSelect.toDisplayFeatures = function(state, geojson, display) {\r\n  geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\r\n    Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  display(geojson);\r\n  this.fireActionable();\r\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\r\n    geojson.geometry.type === Constants.geojsonTypes.POINT) return;\r\n  createSupplementaryPoints(geojson).forEach(display);\r\n};\r\n\r\nSimpleSelect.onTrash = function() {\r\n  this.deleteFeature(this.getSelectedIds());\r\n  this.fireActionable();\r\n};\r\n\r\nSimpleSelect.onCombineFeatures = function() {\r\n  const selectedFeatures = this.getSelected();\r\n\r\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\r\n\r\n  const coordinates = [], featuresCombined = [];\r\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\r\n\r\n  for (let i = 0; i < selectedFeatures.length; i++) {\r\n    const feature = selectedFeatures[i];\r\n\r\n    if (feature.type.replace('Multi', '') !== featureType) {\r\n      return;\r\n    }\r\n    if (feature.type.includes('Multi')) {\r\n      feature.getCoordinates().forEach((subcoords) => {\r\n        coordinates.push(subcoords);\r\n      });\r\n    } else {\r\n      coordinates.push(feature.getCoordinates());\r\n    }\r\n\r\n    featuresCombined.push(feature.toGeoJSON());\r\n  }\r\n\r\n  if (featuresCombined.length > 1) {\r\n    const multiFeature = this.newFeature({\r\n      type: Constants.geojsonTypes.FEATURE,\r\n      properties: featuresCombined[0].properties,\r\n      geometry: {\r\n        type: `Multi${featureType}`,\r\n        coordinates\r\n      }\r\n    });\r\n\r\n    this.addFeature(multiFeature);\r\n    this.deleteFeature(this.getSelectedIds(), { silent: true });\r\n    this.setSelected([multiFeature.id]);\r\n\r\n    this.fire(Constants.events.COMBINE_FEATURES, {\r\n      createdFeatures: [multiFeature.toGeoJSON()],\r\n      deletedFeatures: featuresCombined\r\n    });\r\n  }\r\n  this.fireActionable();\r\n};\r\n\r\nSimpleSelect.onUncombineFeatures = function() {\r\n  const selectedFeatures = this.getSelected();\r\n  if (selectedFeatures.length === 0) return;\r\n\r\n  const createdFeatures = [];\r\n  const featuresUncombined = [];\r\n\r\n  for (let i = 0; i < selectedFeatures.length; i++) {\r\n    const feature = selectedFeatures[i];\r\n\r\n    if (this.isInstanceOf('MultiFeature', feature)) {\r\n      feature.getFeatures().forEach((subFeature) => {\r\n        this.addFeature(subFeature);\r\n        subFeature.properties = feature.properties;\r\n        createdFeatures.push(subFeature.toGeoJSON());\r\n        this.select([subFeature.id]);\r\n      });\r\n      this.deleteFeature(feature.id, { silent: true });\r\n      featuresUncombined.push(feature.toGeoJSON());\r\n    }\r\n  }\r\n\r\n  if (createdFeatures.length > 1) {\r\n    this.fire(Constants.events.UNCOMBINE_FEATURES, {\r\n      createdFeatures,\r\n      deletedFeatures: featuresUncombined\r\n    });\r\n  }\r\n  this.fireActionable();\r\n};\r\n\r\nexport default SimpleSelect;\r\n","import { noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown } from '../lib/common_selectors.js';\r\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\r\nimport constrainFeatureMovement from '../lib/constrain_feature_movement.js';\r\nimport doubleClickZoom from '../lib/double_click_zoom.js';\r\nimport * as Constants from '../constants.js';\r\nimport moveFeatures from '../lib/move_features.js';\r\n\r\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\r\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\r\n\r\nconst DirectSelect = {};\r\n\r\n// INTERNAL FUCNTIONS\r\n\r\nDirectSelect.fireUpdate = function() {\r\n  this.fire(Constants.events.UPDATE, {\r\n    action: Constants.updateActions.CHANGE_COORDINATES,\r\n    features: this.getSelected().map(f => f.toGeoJSON())\r\n  });\r\n};\r\n\r\nDirectSelect.fireActionable = function(state) {\r\n  this.setActionableState({\r\n    combineFeatures: false,\r\n    uncombineFeatures: false,\r\n    trash: state.selectedCoordPaths.length > 0\r\n  });\r\n};\r\n\r\nDirectSelect.startDragging = function(state, e) {\r\n  if (state.initialDragPanState == null) {\r\n    state.initialDragPanState = this.map.dragPan.isEnabled();\r\n  }\r\n\r\n  this.map.dragPan.disable();\r\n  state.canDragMove = true;\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nDirectSelect.stopDragging = function(state) {\r\n  if (state.canDragMove && state.initialDragPanState === true) {\r\n    this.map.dragPan.enable();\r\n  }\r\n\r\n  state.initialDragPanState = null;\r\n  state.dragMoving = false;\r\n  state.canDragMove = false;\r\n  state.dragMoveLocation = null;\r\n};\r\n\r\nDirectSelect.onVertex = function (state, e) {\r\n  this.startDragging(state, e);\r\n  const about = e.featureTarget.properties;\r\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\r\n  if (!isShiftDown(e) && selectedIndex === -1) {\r\n    state.selectedCoordPaths = [about.coord_path];\r\n  } else if (isShiftDown(e) && selectedIndex === -1) {\r\n    state.selectedCoordPaths.push(about.coord_path);\r\n  }\r\n\r\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\r\n  this.setSelectedCoordinates(selectedCoordinates);\r\n};\r\n\r\nDirectSelect.onMidpoint = function(state, e) {\r\n  this.startDragging(state, e);\r\n  const about = e.featureTarget.properties;\r\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\r\n  this.fireUpdate();\r\n  state.selectedCoordPaths = [about.coord_path];\r\n};\r\n\r\nDirectSelect.pathsToCoordinates = function(featureId, paths) {\r\n  return paths.map(coord_path => ({ feature_id: featureId, coord_path }));\r\n};\r\n\r\nDirectSelect.onFeature = function(state, e) {\r\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);\r\n  else this.stopDragging(state);\r\n};\r\n\r\nDirectSelect.dragFeature = function(state, e, delta) {\r\n  moveFeatures(this.getSelected(), delta);\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nDirectSelect.dragVertex = function(state, e, delta) {\r\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\r\n  const selectedCoordPoints = selectedCoords.map(coords => ({\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {},\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POINT,\r\n      coordinates: coords\r\n    }\r\n  }));\r\n\r\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\r\n  for (let i = 0; i < selectedCoords.length; i++) {\r\n    const coord = selectedCoords[i];\r\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\r\n  }\r\n};\r\n\r\nDirectSelect.clickNoTarget = function () {\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDirectSelect.clickInactive = function () {\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDirectSelect.clickActiveFeature = function (state) {\r\n  state.selectedCoordPaths = [];\r\n  this.clearSelectedCoordinates();\r\n  state.feature.changed();\r\n};\r\n\r\n// EXTERNAL FUNCTIONS\r\n\r\nDirectSelect.onSetup = function(opts) {\r\n  const featureId = opts.featureId;\r\n  const feature = this.getFeature(featureId);\r\n\r\n  if (!feature) {\r\n    throw new Error('You must provide a featureId to enter direct_select mode');\r\n  }\r\n\r\n  if (feature.type === Constants.geojsonTypes.POINT) {\r\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\r\n  }\r\n\r\n  const state = {\r\n    featureId,\r\n    feature,\r\n    dragMoveLocation: opts.startPos || null,\r\n    dragMoving: false,\r\n    canDragMove: false,\r\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : [],\r\n  };\r\n\r\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\r\n  this.setSelected(featureId);\r\n  doubleClickZoom.disable(this);\r\n\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return state;\r\n};\r\n\r\nDirectSelect.onStop = function() {\r\n  doubleClickZoom.enable(this);\r\n  this.clearSelectedCoordinates();\r\n};\r\n\r\nDirectSelect.toDisplayFeatures = function(state, geojson, push) {\r\n  if (state.featureId === geojson.properties.id) {\r\n    geojson.properties.active = Constants.activeStates.ACTIVE;\r\n    push(geojson);\r\n    createSupplementaryPoints(geojson, {\r\n      map: this.map,\r\n      midpoints: true,\r\n      selectedPaths: state.selectedCoordPaths\r\n    }).forEach(push);\r\n  } else {\r\n    geojson.properties.active = Constants.activeStates.INACTIVE;\r\n    push(geojson);\r\n  }\r\n  this.fireActionable(state);\r\n};\r\n\r\nDirectSelect.onTrash = function(state) {\r\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\r\n  // in reverse order so that we can remove by index safely.\r\n  state.selectedCoordPaths\r\n    .sort((a, b) => b.localeCompare(a, 'en', { numeric: true }))\r\n    .forEach(id => state.feature.removeCoordinate(id));\r\n  this.fireUpdate();\r\n  state.selectedCoordPaths = [];\r\n  this.clearSelectedCoordinates();\r\n  this.fireActionable(state);\r\n  if (state.feature.isValid() === false) {\r\n    this.deleteFeature([state.featureId]);\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\r\n  }\r\n};\r\n\r\nDirectSelect.onMouseMove = function(state, e) {\r\n  // On mousemove that is not a drag, stop vertex movement.\r\n  const isFeature = isActiveFeature(e);\r\n  const onVertex = isVertex(e);\r\n  const isMidPoint = isMidpoint(e);\r\n  const noCoords = state.selectedCoordPaths.length === 0;\r\n  if (isFeature && noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  else if (onVertex && !noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  else this.updateUIClasses({ mouse: Constants.cursors.NONE });\r\n\r\n  const isDraggableItem = onVertex || isFeature || isMidPoint;\r\n  if (isDraggableItem && state.dragMoving) this.fireUpdate();\r\n\r\n  this.stopDragging(state);\r\n\r\n  // Skip render\r\n  return true;\r\n};\r\n\r\nDirectSelect.onMouseOut = function(state) {\r\n  // As soon as you mouse leaves the canvas, update the feature\r\n  if (state.dragMoving) this.fireUpdate();\r\n\r\n  // Skip render\r\n  return true;\r\n};\r\n\r\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function(state, e) {\r\n  if (isVertex(e)) return this.onVertex(state, e);\r\n  if (isActiveFeature(e)) return this.onFeature(state, e);\r\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\r\n};\r\n\r\nDirectSelect.onDrag = function(state, e) {\r\n  if (state.canDragMove !== true) return;\r\n  state.dragMoving = true;\r\n  e.originalEvent.stopPropagation();\r\n\r\n  const delta = {\r\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\r\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\r\n  };\r\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);\r\n  else this.dragFeature(state, e, delta);\r\n\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nDirectSelect.onClick = function(state, e) {\r\n  if (noTarget(e)) return this.clickNoTarget(state, e);\r\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\r\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\r\n  this.stopDragging(state);\r\n};\r\n\r\nDirectSelect.onTap = function(state, e) {\r\n  if (noTarget(e)) return this.clickNoTarget(state, e);\r\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\r\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\r\n};\r\n\r\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function(state) {\r\n  if (state.dragMoving) {\r\n    this.fireUpdate();\r\n  }\r\n  this.stopDragging(state);\r\n};\r\n\r\nexport default DirectSelect;\r\n\r\n","import * as CommonSelectors from '../lib/common_selectors.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nconst DrawPoint = {};\r\n\r\nDrawPoint.onSetup = function() {\r\n  const point = this.newFeature({\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {},\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POINT,\r\n      coordinates: []\r\n    }\r\n  });\r\n\r\n  this.addFeature(point);\r\n\r\n  this.clearSelectedFeatures();\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  this.activateUIButton(Constants.types.POINT);\r\n\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return { point };\r\n};\r\n\r\nDrawPoint.stopDrawingAndRemove = function(state) {\r\n  this.deleteFeature([state.point.id], { silent: true });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDrawPoint.onTap = DrawPoint.onClick = function(state, e) {\r\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\r\n  this.fire(Constants.events.CREATE, {\r\n    features: [state.point.toGeoJSON()]\r\n  });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.point.id] });\r\n};\r\n\r\nDrawPoint.onStop = function(state) {\r\n  this.activateUIButton();\r\n  if (!state.point.getCoordinate().length) {\r\n    this.deleteFeature([state.point.id], { silent: true });\r\n  }\r\n};\r\n\r\nDrawPoint.toDisplayFeatures = function(state, geojson, display) {\r\n  // Never render the point we're drawing\r\n  const isActivePoint = geojson.properties.id === state.point.id;\r\n  geojson.properties.active = (isActivePoint) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  if (!isActivePoint) return display(geojson);\r\n};\r\n\r\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\r\n\r\nDrawPoint.onKeyUp = function(state, e) {\r\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\r\n    return this.stopDrawingAndRemove(state, e);\r\n  }\r\n};\r\n\r\nexport default DrawPoint;\r\n","function isEventAtCoordinates(event, coordinates) {\r\n  if (!event.lngLat) return false;\r\n  return event.lngLat.lng === coordinates[0] && event.lngLat.lat === coordinates[1];\r\n}\r\n\r\nexport default isEventAtCoordinates;\r\n","import * as CommonSelectors from '../lib/common_selectors.js';\r\nimport doubleClickZoom from '../lib/double_click_zoom.js';\r\nimport * as Constants from '../constants.js';\r\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\r\nimport createVertex from '../lib/create_vertex.js';\r\n\r\nconst DrawPolygon = {};\r\n\r\nDrawPolygon.onSetup = function() {\r\n  const polygon = this.newFeature({\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {},\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POLYGON,\r\n      coordinates: [[]]\r\n    }\r\n  });\r\n\r\n  this.addFeature(polygon);\r\n\r\n  this.clearSelectedFeatures();\r\n  doubleClickZoom.disable(this);\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  this.activateUIButton(Constants.types.POLYGON);\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return {\r\n    polygon,\r\n    currentVertexPosition: 0\r\n  };\r\n};\r\n\r\nDrawPolygon.clickAnywhere = function(state, e) {\r\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.polygon.coordinates[0][state.currentVertexPosition - 1])) {\r\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\r\n  }\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\r\n  state.currentVertexPosition++;\r\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\r\n};\r\n\r\nDrawPolygon.clickOnVertex = function(state) {\r\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\r\n};\r\n\r\nDrawPolygon.onMouseMove = function(state, e) {\r\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\r\n  if (CommonSelectors.isVertex(e)) {\r\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\r\n  }\r\n};\r\n\r\nDrawPolygon.onTap = DrawPolygon.onClick = function(state, e) {\r\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\r\n  return this.clickAnywhere(state, e);\r\n};\r\n\r\nDrawPolygon.onKeyUp = function(state, e) {\r\n  if (CommonSelectors.isEscapeKey(e)) {\r\n    this.deleteFeature([state.polygon.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n  } else if (CommonSelectors.isEnterKey(e)) {\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\r\n  }\r\n};\r\n\r\nDrawPolygon.onStop = function(state) {\r\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\r\n  doubleClickZoom.enable(this);\r\n  this.activateUIButton();\r\n\r\n  // check to see if we've deleted this feature\r\n  if (this.getFeature(state.polygon.id) === undefined) return;\r\n\r\n  //remove last added coordinate\r\n  state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`);\r\n  if (state.polygon.isValid()) {\r\n    this.fire(Constants.events.CREATE, {\r\n      features: [state.polygon.toGeoJSON()]\r\n    });\r\n  } else {\r\n    this.deleteFeature([state.polygon.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\r\n  }\r\n};\r\n\r\nDrawPolygon.toDisplayFeatures = function(state, geojson, display) {\r\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\r\n  geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  if (!isActivePolygon) return display(geojson);\r\n\r\n  // Don't render a polygon until it has two positions\r\n  // (and a 3rd which is just the first repeated)\r\n  if (geojson.geometry.coordinates.length === 0) return;\r\n\r\n  const coordinateCount = geojson.geometry.coordinates[0].length;\r\n  // 2 coordinates after selecting a draw type\r\n  // 3 after creating the first point\r\n  if (coordinateCount < 3) {\r\n    return;\r\n  }\r\n  geojson.properties.meta = Constants.meta.FEATURE;\r\n  display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][0], '0.0', false));\r\n  if (coordinateCount > 3) {\r\n    // Add a start position marker to the map, clicking on this will finish the feature\r\n    // This should only be shown when we're in a valid spot\r\n    const endPos = geojson.geometry.coordinates[0].length - 3;\r\n    display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][endPos], `0.${endPos}`, false));\r\n  }\r\n  if (coordinateCount <= 4) {\r\n    // If we've only drawn two positions (plus the closer),\r\n    // make a LineString instead of a Polygon\r\n    const lineCoordinates = [\r\n      [geojson.geometry.coordinates[0][0][0], geojson.geometry.coordinates[0][0][1]], [geojson.geometry.coordinates[0][1][0], geojson.geometry.coordinates[0][1][1]]\r\n    ];\r\n    // create an initial vertex so that we can track the first point on mobile devices\r\n    display({\r\n      type: Constants.geojsonTypes.FEATURE,\r\n      properties: geojson.properties,\r\n      geometry: {\r\n        coordinates: lineCoordinates,\r\n        type: Constants.geojsonTypes.LINE_STRING\r\n      }\r\n    });\r\n    if (coordinateCount === 3) {\r\n      return;\r\n    }\r\n  }\r\n  // render the Polygon\r\n  return display(geojson);\r\n};\r\n\r\nDrawPolygon.onTrash = function(state) {\r\n  this.deleteFeature([state.polygon.id], { silent: true });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nexport default DrawPolygon;\r\n","import * as CommonSelectors from '../lib/common_selectors.js';\r\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\r\nimport doubleClickZoom from '../lib/double_click_zoom.js';\r\nimport * as Constants from '../constants.js';\r\nimport createVertex from '../lib/create_vertex.js';\r\n\r\nconst DrawLineString = {};\r\n\r\nDrawLineString.onSetup = function(opts) {\r\n  opts = opts || {};\r\n  const featureId = opts.featureId;\r\n\r\n  let line, currentVertexPosition;\r\n  let direction = 'forward';\r\n  if (featureId) {\r\n    line = this.getFeature(featureId);\r\n    if (!line) {\r\n      throw new Error('Could not find a feature with the provided featureId');\r\n    }\r\n    let from = opts.from;\r\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\r\n      from = from.geometry;\r\n    }\r\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\r\n      from = from.coordinates;\r\n    }\r\n    if (!from || !Array.isArray(from)) {\r\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\r\n    }\r\n    const lastCoord = line.coordinates.length - 1;\r\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\r\n      currentVertexPosition = lastCoord + 1;\r\n      // add one new coordinate to continue from\r\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\r\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\r\n      direction = 'backwards';\r\n      currentVertexPosition = 0;\r\n      // add one new coordinate to continue from\r\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\r\n    } else {\r\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\r\n    }\r\n  } else {\r\n    line = this.newFeature({\r\n      type: Constants.geojsonTypes.FEATURE,\r\n      properties: {},\r\n      geometry: {\r\n        type: Constants.geojsonTypes.LINE_STRING,\r\n        coordinates: []\r\n      }\r\n    });\r\n    currentVertexPosition = 0;\r\n    this.addFeature(line);\r\n  }\r\n\r\n  this.clearSelectedFeatures();\r\n  doubleClickZoom.disable(this);\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  this.activateUIButton(Constants.types.LINE);\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return {\r\n    line,\r\n    currentVertexPosition,\r\n    direction\r\n  };\r\n};\r\n\r\nDrawLineString.clickAnywhere = function(state, e) {\r\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) ||\r\n      state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\r\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n  }\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  if (state.direction === 'forward') {\r\n    state.currentVertexPosition++;\r\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  } else {\r\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\r\n  }\r\n};\r\n\r\nDrawLineString.clickOnVertex = function(state) {\r\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n};\r\n\r\nDrawLineString.onMouseMove = function(state, e) {\r\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  if (CommonSelectors.isVertex(e)) {\r\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\r\n  }\r\n};\r\n\r\nDrawLineString.onTap = DrawLineString.onClick = function(state, e) {\r\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\r\n  this.clickAnywhere(state, e);\r\n};\r\n\r\nDrawLineString.onKeyUp = function(state, e) {\r\n  if (CommonSelectors.isEnterKey(e)) {\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n  } else if (CommonSelectors.isEscapeKey(e)) {\r\n    this.deleteFeature([state.line.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n  }\r\n};\r\n\r\nDrawLineString.onStop = function(state) {\r\n  doubleClickZoom.enable(this);\r\n  this.activateUIButton();\r\n\r\n  // check to see if we've deleted this feature\r\n  if (this.getFeature(state.line.id) === undefined) return;\r\n\r\n  //remove last added coordinate\r\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\r\n  if (state.line.isValid()) {\r\n    this.fire(Constants.events.CREATE, {\r\n      features: [state.line.toGeoJSON()]\r\n    });\r\n  } else {\r\n    this.deleteFeature([state.line.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\r\n  }\r\n};\r\n\r\nDrawLineString.onTrash = function(state) {\r\n  this.deleteFeature([state.line.id], { silent: true });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDrawLineString.toDisplayFeatures = function(state, geojson, display) {\r\n  const isActiveLine = geojson.properties.id === state.line.id;\r\n  geojson.properties.active = (isActiveLine) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  if (!isActiveLine) return display(geojson);\r\n  // Only render the line if it has at least one real coordinate\r\n  if (geojson.geometry.coordinates.length < 2) return;\r\n  geojson.properties.meta = Constants.meta.FEATURE;\r\n  display(createVertex(\r\n    state.line.id,\r\n    geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1],\r\n    `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`,\r\n    false\r\n  ));\r\n\r\n  display(geojson);\r\n};\r\n\r\nexport default DrawLineString;\r\n","\r\nimport simple_select from './simple_select.js';\r\nimport direct_select from './direct_select.js';\r\nimport draw_point from './draw_point.js';\r\nimport draw_polygon from './draw_polygon.js';\r\nimport draw_line_string from './draw_line_string.js';\r\n\r\nexport default {\r\n  simple_select,\r\n  direct_select,\r\n  draw_point,\r\n  draw_polygon,\r\n  draw_line_string,\r\n};\r\n","import * as Constants from './constants.js';\n\nimport styles from './lib/theme.js';\nimport modes from './modes/index.js';\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false,\n  suppressAPIEvents: true\n};\n\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\n\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSource(styles) {\n  return styles.map((style) => {\n    if (style.source) return style;\n    return Object.assign({}, style, {\n      id: style.id,\n      source: Constants.source\n    });\n  });\n}\n\nexport default function(options = {}) {\n  let withDefaults = Object.assign({}, options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = Object.assign({}, hideControls, options.controls);\n  } else {\n    withDefaults.controls = Object.assign({}, showControls, options.controls);\n  }\n\n  withDefaults = Object.assign({}, defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSource(withDefaults.styles);\n\n  return withDefaults;\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n","export default function(a, b) {\r\n  if (a.length !== b.length) return false;\r\n  return JSON.stringify(a.map(id => id).sort()) === JSON.stringify(b.map(id => id).sort());\r\n}\r\n","import isEqual from 'fast-deep-equal';\nimport normalize from '@mapbox/geojson-normalize';\nimport { generateID } from './lib/id.js';\nimport featuresAt from './lib/features_at.js';\nimport stringSetsAreEqual from './lib/string_sets_are_equal.js';\nimport * as Constants from './constants.js';\nimport StringSet from './lib/string_set.js';\n\nimport Polygon from './feature_types/polygon.js';\nimport LineString from './feature_types/line_string.js';\nimport Point from './feature_types/point.js';\nimport MultiFeature from './feature_types/multi_feature.js';\n\nconst featureTypes = {\n  Polygon,\n  LineString,\n  Point,\n  MultiPolygon: MultiFeature,\n  MultiLineString: MultiFeature,\n  MultiPoint: MultiFeature\n};\n\nexport default function (ctx, api) {\n  api.modes = Constants.modes;\n\n  // API doesn't emit events by default\n  const silent = ctx.options.suppressAPIEvents !== undefined ? !!ctx.options.suppressAPIEvents : true;\n\n  api.getFeatureIdsAt = function (point) {\n    const features = featuresAt.click({ point }, null, ctx);\n    return features.map(feature => feature.properties.id);\n  };\n\n  api.getSelectedIds = function () {\n    return ctx.store.getSelectedIds();\n  };\n\n  api.getSelected = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedIds().map(id => ctx.store.get(id)).map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.getSelectedPoints = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    };\n  };\n\n  api.set = function (featureCollection) {\n    if (featureCollection.type === undefined || featureCollection.type !== Constants.geojsonTypes.FEATURE_COLLECTION || !Array.isArray(featureCollection.features)) {\n      throw new Error('Invalid FeatureCollection');\n    }\n    const renderBatch = ctx.store.createRenderBatch();\n    let toDelete = ctx.store.getAllIds().slice();\n    const newIds = api.add(featureCollection);\n    const newIdsLookup = new StringSet(newIds);\n\n    toDelete = toDelete.filter(id => !newIdsLookup.has(id));\n    if (toDelete.length) {\n      api.delete(toDelete);\n    }\n\n    renderBatch();\n    return newIds;\n  };\n\n  api.add = function (geojson) {\n    const featureCollection = JSON.parse(JSON.stringify(normalize(geojson)));\n\n    const ids = featureCollection.features.map((feature) => {\n      feature.id = feature.id || generateID();\n\n      if (feature.geometry === null) {\n        throw new Error('Invalid geometry: null');\n      }\n\n      if (ctx.store.get(feature.id) === undefined || ctx.store.get(feature.id).type !== feature.geometry.type) {\n        // If the feature has not yet been created ...\n        const Model = featureTypes[feature.geometry.type];\n        if (Model === undefined) {\n          throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);\n        }\n        const internalFeature = new Model(ctx, feature);\n        ctx.store.add(internalFeature, { silent });\n      } else {\n        // If a feature of that id has already been created, and we are swapping it out ...\n        const internalFeature = ctx.store.get(feature.id);\n        const originalProperties = internalFeature.properties;\n        internalFeature.properties = feature.properties;\n        if (!isEqual(originalProperties, feature.properties)) {\n          ctx.store.featureChanged(internalFeature.id, { silent });\n        }\n        if (!isEqual(internalFeature.getCoordinates(), feature.geometry.coordinates)) {\n          internalFeature.incomingCoords(feature.geometry.coordinates);\n        }\n      }\n      return feature.id;\n    });\n\n    ctx.store.render();\n    return ids;\n  };\n\n\n  api.get = function (id) {\n    const feature = ctx.store.get(id);\n    if (feature) {\n      return feature.toGeoJSON();\n    }\n  };\n\n  api.getAll = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getAll().map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.delete = function (featureIds) {\n    ctx.store.delete(featureIds, { silent });\n    // If we were in direct select mode and our selected feature no longer exists\n    // (because it was deleted), we need to get out of that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT && !ctx.store.getSelectedIds().length) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.deleteAll = function () {\n    ctx.store.delete(ctx.store.getAllIds(), { silent });\n    // If we were in direct select mode, now our selected feature no longer exists,\n    // so escape that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.changeMode = function (mode, modeOptions = {}, force = false) {\n    if (force) {\n      ctx.events.changeMode(mode, modeOptions, { silent });\n      return api;\n    }\n    // Avoid changing modes just to re-select what's already selected\n    if (mode === Constants.modes.SIMPLE_SELECT && api.getMode() === Constants.modes.SIMPLE_SELECT) {\n      if (stringSetsAreEqual((modeOptions.featureIds || []), ctx.store.getSelectedIds())) return api;\n      // And if we are changing the selection within simple_select mode, just change the selection,\n      // instead of stopping and re-starting the mode\n      ctx.store.setSelected(modeOptions.featureIds, { silent });\n      ctx.store.render();\n      return api;\n    }\n\n    if (mode === Constants.modes.DIRECT_SELECT && api.getMode() === Constants.modes.DIRECT_SELECT &&\n      modeOptions.featureId === ctx.store.getSelectedIds()[0]) {\n      return api;\n    }\n\n    ctx.events.changeMode(mode, modeOptions, { silent });\n    return api;\n  };\n\n  api.getMode = function () {\n    return ctx.events.getMode();\n  };\n\n  api.trash = function () {\n    ctx.events.trash({ silent });\n    return api;\n  };\n\n  api.combineFeatures = function () {\n    ctx.events.combineFeatures({ silent });\n    return api;\n  };\n\n  api.uncombineFeatures = function () {\n    ctx.events.uncombineFeatures({ silent });\n    return api;\n  };\n\n  api.setFeatureProperty = function (featureId, property, value) {\n    ctx.store.setFeatureProperty(featureId, property, value, { silent });\n    return api;\n  };\n  api.reRender = function () {\n    ctx.store.setDirty();\n    ctx.store.render();\n    return api;\n  };\n  return api;\n}\n","import runSetup from './src/setup.js';\r\nimport setupOptions from './src/options.js';\r\nimport setupAPI from './src/api.js';\r\nimport modes from './src/modes/index.js';\r\nimport * as Constants from './src/constants.js';\r\nimport * as lib from './src/lib/index.js';\r\n\r\nconst setupDraw = function(options, api) {\r\n  options = setupOptions(options);\r\n\r\n  const ctx = {\r\n    options\r\n  };\r\n\r\n  api = setupAPI(ctx, api);\r\n  ctx.api = api;\r\n\r\n  const setup = runSetup(ctx);\r\n\r\n  api.onAdd = setup.onAdd;\r\n  api.onRemove = setup.onRemove;\r\n  api.types = Constants.types;\r\n  api.options = options;\r\n\r\n  return api;\r\n};\r\n\r\nfunction MapboxDraw(options) {\r\n  setupDraw(options, this);\r\n}\r\n\r\nMapboxDraw.modes = modes;\r\nMapboxDraw.constants = Constants;\r\nMapboxDraw.lib = lib;\r\n\r\nexport default MapboxDraw;\r\n"],"names":["ModeHandler","mode","DrawContext","handlers","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","ctx","on","event","selector","fn","undefined","Error","push","render","id","store","featureChanged","delegate","eventName","handles","iHandle","length","handle","call","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures","geomReduce","geojson","callback","initialValue","previousValue","i","j","g","geometry","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","type","isFeature","features","properties","bbox","geometries","geomEach","currentGeometry","polygonArea","coords","total","Math","abs","ringArea","FACTOR","earthRadius","PI_OVER_180","PI","coordsLength","lower","middle","upper","lowerX","middleY","sin","turf_area_default","value","geom","coordinates","calculateArea","classes","CANVAS","CONTROL_BASE","CONTROL_PREFIX","CONTROL_BUTTON","CONTROL_BUTTON_LINE","CONTROL_BUTTON_POLYGON","CONTROL_BUTTON_POINT","CONTROL_BUTTON_TRASH","CONTROL_BUTTON_COMBINE_FEATURES","CONTROL_BUTTON_UNCOMBINE_FEATURES","CONTROL_GROUP","ATTRIBUTION","ACTIVE_BUTTON","BOX_SELECT","source","cursors","ADD","MOVE","DRAG","POINTER","NONE","types","POLYGON","LINE","POINT","geojsonTypes","FEATURE","LINE_STRING","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","modes","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","events","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","updateActions","CHANGE_PROPERTIES","CHANGE_COORDINATES","meta","MIDPOINT","VERTEX","ROTATE","activeStates","ACTIVE","INACTIVE","interactions","LAT_RENDERED_MIN","LAT_RENDERED_MAX","FEATURE_SORT_RANKS","Point","LineString","MultiLineString","Polygon","comparator","a","b","score","Constants.geojsonTypes","area","sortFeatures","map","feature","sort","mapEventToBoundingBox","mapEvent","buffer","point","x","y","StringSet","items","this","_items","_nums","_length","l","add","prototype","has","delete","values","Object","keys","forEach","k","v","JSON","parse","clear","META_TYPES","Constants.meta","featuresAt","options","clickBuffer","touch","touchBuffer","box","queryParams","styles","layers","s","filter","getLayer","queryRenderedFeatures","indexOf","featureIds","uniqueFeatures","getFeatureAtAndSetCursors","mouse","Constants.cursors","active","Constants.activeStates","currentModeName","queueMapClasses","euclideanDistance","sqrt","FINE_TOLERANCE","GROSS_TOLERANCE","INTERVAL","isClick","end","fineTolerance","grossTolerance","interval","time","moveDistance","TAP_TOLERANCE","TAP_INTERVAL","isTap","tolerance","nanoid","alphabet","defaultSize","size","random","customAlphabet","generateID","Feature","changed","incomingCoords","setCoordinates","getCoordinates","stringify","setProperty","property","toGeoJSON","internal","userProperties","name","create","isValid","updateCoordinate","pathOrLng","lngOrLat","lat","arguments","getCoordinate","addCoordinate","path","lng","parseInt","splice","removeCoordinate","ring","slice","every","ids","split","concat","parts","ringId","coordId","models","MultiPoint","MultiPolygon","takeAction","action","idx","tail","join","MultiFeature","model","TypeError","_coordinatesToFeatures","ModeInterface","drawConfig","_ctx","Model","bind","replace","f","getFeatures","setSelected","setSelectedCoordinates","reduce","m","c","feature_id","get","getSelected","getSelectedIds","isSelected","getFeature","select","deselect","deleteFeature","opts","addFeature","clearSelectedFeatures","clearSelected","clearSelectedCoordinates","setActionableState","actions","newSet","actionable","changeMode","eventOpts","fire","eventData","updateUIClasses","activateUIButton","setActiveButton","bufferType","newFeature","isInstanceOf","doRender","onSetup","onDrag","onClick","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onKeyUp","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onTap","onStop","onTrash","onCombineFeature","onUncombineFeature","toDisplayFeatures","eventMapper","eventKeys","objectToMode","modeObject","modeObjectKeys","startOpts","state","key","modeHandler","eh","e","onCombineFeatures","onUncombineFeatures","toDenseArray","sourceId","Constants.source","cleanup","isDirty","clearChangedIds","getSource","newIds","getAllIds","lastCount","newFeatures","featureInternal","currentModeRender","setData","Store","renderRequest","_features","_featureIds","_selectedFeatureIds","_selectedCoordinates","_changedFeatureIds","_emitSelectionChange","_mapInitialConfig","requestAnimationFrame","Constants.events","points","getSelectedCoordinates","coordinate","refreshSelectedCoordinates","newSelectedCoordinates","silent","createRenderBatch","holdRender","numRenders","setDirty","featureCreated","suppressAPIEvents","Constants.updateActions","getChangedIds","deletedFeaturesToEmit","getAll","coord_path","setFeatureProperty","storeMapConfig","Constants.interactions","interaction","isEnabled","restoreMapConfig","enable","disable","getInitialConfigValue","classTypes","runSetup","controlContainer","mapLoadedInterval","setup","onRemove","off","connect","clearInterval","removeLayers","removeButtons","removeEventListeners","clearMapClasses","boxZoomInitial","boxZoom","container","parentNode","removeChild","addLayers","addEventListeners","onAdd","mouseDownInfo","touchStartInfo","currentMode","isDrag","Date","getTime","originalEvent","stopPropagation","mousedrag","endInfo","touchdrag","buttons","which","target","getFeaturesAndSetCursor","featureTarget","touchEnabled","preventDefault","isKeyModeValid","code","modename","nextModeOptions","eventOptions","modebuilder","setupModeHandler","srcElement","classList","contains","Constants.classes","keyCode","controls","Constants.modes","line_string","polygon","zoomend","changeZoom","data","dataType","some","style","actionState","defaultMode","addEventListener","keybindings","removeEventListener","getMode","buttonElements","activeButton","currentMapClasses","nextMapClasses","assign","classesToRemove","classesToAdd","remove","createControlButton","button","document","createElement","className","setAttribute","title","appendChild","deactivateButtons","onDeactivate","onActivate","addButtons","controlGroup","Constants.types","combine_features","uncombine_features","buttonId","getContainer","boxSelect","dragPanIsEnabled","dragPan","loaded","setInterval","addSource","addLayer","removeLayer","removeSource","blue","orange","white","paint","layout","isOfMetaType","isShiftMousedown","shiftKey","isActiveFeature","isInactiveFeature","noTarget","isVertex","isShiftDown","isEscapeKey","isEnterKey","mouseEventPoint","mouseEvent","rect","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","createVertex","parentId","selected","parent","createMidpoint","startVertex","endVertex","startCoord","endCoord","Constants.LAT_RENDERED_MAX","Constants.LAT_RENDERED_MIN","mid","createSupplementaryPoints","basePath","supplementaryPoints","processLine","line","lineBasePath","firstPointString","lastVertex","pointIndex","pointPath","String","vertex","isSelectedPath","midpoints","midpoint","stringifiedPoint","selectedPaths","lineIndex","subType","subCoordinates","index","subFeature","processMultiGeometry","clone","p","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","round","_round","mag","equals","other","dist","distSqr","dx","dy","angle","atan2","angleTo","angleWith","angleWithSep","cos","constructor","convert","Array","isArray","doubleClickZoom","setTimeout","LAT_MIN","LAT_MAX","LNG_MIN","LNG_MAX","Constants","constrainFeatureMovement","geojsonFeatures","delta","northInnerEdge","southInnerEdge","northOuterEdge","southOuterEdge","westEdge","eastEdge","bounds","depth","flat","lngs","coord","lats","min","vals","apply","max","extent","featureSouthEdge","featureNorthEdge","featureWestEdge","featureEastEdge","constrainedDelta","ceil","moveFeatures","currentCoordinates","moveCoordinate","moveRing","moveMultiPolygon","multi","nextCoordinates","SimpleSelect","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initialDragPanState","initiallySelectedFeatureIds","fireActionable","selectedFeatures","multiFeatures","featureType","allFeatures","memo","CommonSelectors.isFeature","fireUpdate","stopExtendedInteractions","CommonSelectors.noTarget","clickAnywhere","CommonSelectors.isOfMetaType","clickOnVertex","clickOnFeature","wasSelected","coordPath","startPos","lngLat","startOnActiveFeature","isShiftClick","CommonSelectors.isShiftDown","selectedFeatureIds","isFeatureSelected","CommonSelectors.isActiveFeature","CommonSelectors.isShiftMousedown","startBoxSelect","dragMove","whileBoxSelect","current","minX","maxX","minY","maxY","translateValue","transform","WebkitTransform","width","height","featuresInBox","idsToSelect","getUniqueIds","display","featuresCombined","includes","subcoords","multiFeature","createdFeatures","deletedFeatures","featuresUncombined","isMidpoint","DirectSelect","selectedCoordPaths","startDragging","about","selectedIndex","selectedCoordinates","pathsToCoordinates","paths","stopDragging","selectedCoords","localeCompare","numeric","onVertex","isMidPoint","noCoords","onFeature","onMidpoint","dragVertex","dragFeature","clickNoTarget","clickActiveFeature","clickInactive","DrawPoint","isEventAtCoordinates","stopDrawingAndRemove","isActivePoint","CommonSelectors.isEscapeKey","CommonSelectors.isEnterKey","DrawPolygon","currentVertexPosition","CommonSelectors.isVertex","isActivePolygon","coordinateCount","endPos","lineCoordinates","DrawLineString","direction","from","lastCoord","isActiveLine","simple_select","direct_select","draw_point","draw_polygon","draw_line_string","defaultOptions","displayControlsDefault","showControls","hideControls","setupOptions","withDefaults","fastDeepEqual","equal","RegExp","flags","valueOf","toString","hasOwnProperty","geojsonNormalize","gj","GeometryCollection","FeatureCollection","stringSetsAreEqual","featureTypes","setupDraw","api","getFeatureIdsAt","getSelectedPoints","set","featureCollection","renderBatch","toDelete","newIdsLookup","normalize","internalFeature","originalProperties","isEqual","deleteAll","modeOptions","force","reRender","setupAPI","MapboxDraw","constants","lib"],"mappings":"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","x_google_ignoreList":[1,2,13,30,46,47]}