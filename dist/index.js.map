{"version":3,"file":"index.js","sources":["../src/lib/mode_handler.js","../node_modules/wgs84/index.js","../node_modules/@mapbox/geojson-area/index.js","../src/constants.js","../src/lib/sort_features.js","../src/lib/map_event_to_bounding_box.js","../src/lib/string_set.js","../src/lib/features_at.js","../src/lib/get_features_and_set_cursor.js","../src/lib/euclidean_distance.js","../src/lib/is_click.js","../src/lib/is_tap.js","../src/lib/id.js","../node_modules/nanoid/non-secure/index.js","../src/feature_types/feature.js","../src/feature_types/point.js","../src/feature_types/line_string.js","../src/feature_types/polygon.js","../src/feature_types/multi_feature.js","../src/modes/mode_interface_accessors.js","../src/modes/mode_interface.js","../src/modes/object_to_mode.js","../src/lib/to_dense_array.js","../src/render.js","../src/store.js","../src/ui.js","../src/setup.js","../src/events.js","../src/lib/theme.js","../src/lib/common_selectors.js","../node_modules/@mapbox/point-geometry/index.js","../src/lib/mouse_event_point.js","../src/lib/create_vertex.js","../src/lib/create_midpoint.js","../src/lib/create_supplementary_points.js","../src/lib/double_click_zoom.js","../src/lib/constrain_feature_movement.js","../src/lib/move_features.js","../src/modes/simple_select.js","../src/modes/direct_select.js","../src/modes/draw_point.js","../src/lib/is_event_at_coordinates.js","../src/modes/draw_polygon.js","../src/modes/draw_line_string.js","../src/modes/index.js","../src/options.js","../node_modules/fast-deep-equal/index.js","../node_modules/@mapbox/geojson-normalize/index.js","../src/lib/string_sets_are_equal.js","../src/api.js","../index.js"],"sourcesContent":["\r\nconst ModeHandler = function(mode, DrawContext) {\r\n\r\n  const handlers = {\r\n    drag: [],\r\n    click: [],\r\n    mousemove: [],\r\n    mousedown: [],\r\n    mouseup: [],\r\n    mouseout: [],\r\n    keydown: [],\r\n    keyup: [],\r\n    touchstart: [],\r\n    touchmove: [],\r\n    touchend: [],\r\n    tap: []\r\n  };\r\n\r\n  const ctx = {\r\n    on(event, selector, fn) {\r\n      if (handlers[event] === undefined) {\r\n        throw new Error(`Invalid event type: ${event}`);\r\n      }\r\n      handlers[event].push({\r\n        selector,\r\n        fn\r\n      });\r\n    },\r\n    render(id) {\r\n      DrawContext.store.featureChanged(id);\r\n    }\r\n  };\r\n\r\n  const delegate = function (eventName, event) {\r\n    const handles = handlers[eventName];\r\n    let iHandle = handles.length;\r\n    while (iHandle--) {\r\n      const handle = handles[iHandle];\r\n      if (handle.selector(event)) {\r\n        const skipRender = handle.fn.call(ctx, event);\r\n        if (!skipRender) {\r\n          DrawContext.store.render();\r\n        }\r\n        DrawContext.ui.updateMapClasses();\r\n\r\n        // ensure an event is only handled once\r\n        // we do this to let modes have multiple overlapping selectors\r\n        // and relay on order of oppertations to filter\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  mode.start.call(ctx);\r\n\r\n  return {\r\n    render: mode.render,\r\n    stop() {\r\n      if (mode.stop) mode.stop();\r\n    },\r\n    trash() {\r\n      if (mode.trash) {\r\n        mode.trash();\r\n        DrawContext.store.render();\r\n      }\r\n    },\r\n    combineFeatures() {\r\n      if (mode.combineFeatures) {\r\n        mode.combineFeatures();\r\n      }\r\n    },\r\n    uncombineFeatures() {\r\n      if (mode.uncombineFeatures) {\r\n        mode.uncombineFeatures();\r\n      }\r\n    },\r\n    drag(event) {\r\n      delegate('drag', event);\r\n    },\r\n    click(event) {\r\n      delegate('click', event);\r\n    },\r\n    mousemove(event) {\r\n      delegate('mousemove', event);\r\n    },\r\n    mousedown(event) {\r\n      delegate('mousedown', event);\r\n    },\r\n    mouseup(event) {\r\n      delegate('mouseup', event);\r\n    },\r\n    mouseout(event) {\r\n      delegate('mouseout', event);\r\n    },\r\n    keydown(event) {\r\n      delegate('keydown', event);\r\n    },\r\n    keyup(event) {\r\n      delegate('keyup', event);\r\n    },\r\n    touchstart(event) {\r\n      delegate('touchstart', event);\r\n    },\r\n    touchmove(event) {\r\n      delegate('touchmove', event);\r\n    },\r\n    touchend(event) {\r\n      delegate('touchend', event);\r\n    },\r\n    tap(event) {\r\n      delegate('tap', event);\r\n    }\r\n  };\r\n};\r\n\r\nexport default ModeHandler;\r\n","module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n","var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}","export const classes = {\n  CANVAS: 'mapboxgl-canvas',\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\n\nexport const source = 'mapbox-gl-draw';\n\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\n\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\n\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\n\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select'\n};\n\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\n\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_PROPERTIES: 'change_properties',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\n\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex',\n  ROTATE: 'rotate'\n};\n\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\n\nexport const interactions = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate'\n];\n\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;\n","import area from '@mapbox/geojson-area';\r\nimport * as Constants from '../constants.js';\r\n\r\nconst FEATURE_SORT_RANKS = {\r\n  Point: 0,\r\n  LineString: 1,\r\n  MultiLineString: 1,\r\n  Polygon: 2\r\n};\r\n\r\nfunction comparator(a, b) {\r\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\r\n\r\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\r\n    return a.area - b.area;\r\n  }\r\n\r\n  return score;\r\n}\r\n\r\n// Sort in the order above, then sort polygons by area ascending.\r\nfunction sortFeatures(features) {\r\n  return features.map((feature) => {\r\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\r\n      feature.area = area.geometry({\r\n        type: Constants.geojsonTypes.FEATURE,\r\n        property: {},\r\n        geometry: feature.geometry\r\n      });\r\n    }\r\n    return feature;\r\n  }).sort(comparator).map((feature) => {\r\n    delete feature.area;\r\n    return feature;\r\n  });\r\n}\r\n\r\nexport default sortFeatures;\r\n","/**\r\n * Returns a bounding box representing the event's location.\r\n *\r\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\r\n * @return {Array<Array<number>>} Bounding box.\r\n */\r\nfunction mapEventToBoundingBox(mapEvent, buffer = 0) {\r\n  return [\r\n    [mapEvent.point.x - buffer, mapEvent.point.y - buffer],\r\n    [mapEvent.point.x + buffer, mapEvent.point.y + buffer]\r\n  ];\r\n}\r\n\r\nexport default mapEventToBoundingBox;\r\n","function StringSet(items) {\r\n  this._items = {};\r\n  this._nums = {};\r\n  this._length = items ? items.length : 0;\r\n  if (!items) return;\r\n  for (let i = 0, l = items.length; i < l; i++) {\r\n    this.add(items[i]);\r\n    if (items[i] === undefined) continue;\r\n    if (typeof items[i] === 'string') this._items[items[i]] = i;\r\n    else this._nums[items[i]] = i;\r\n\r\n  }\r\n}\r\n\r\nStringSet.prototype.add = function(x) {\r\n  if (this.has(x)) return this;\r\n  this._length++;\r\n  if (typeof x === 'string') this._items[x] = this._length;\r\n  else this._nums[x] = this._length;\r\n  return this;\r\n};\r\n\r\nStringSet.prototype.delete = function(x) {\r\n  if (this.has(x) === false) return this;\r\n  this._length--;\r\n  delete this._items[x];\r\n  delete this._nums[x];\r\n  return this;\r\n};\r\n\r\nStringSet.prototype.has = function(x) {\r\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\r\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\r\n};\r\n\r\nStringSet.prototype.values = function() {\r\n  const values = [];\r\n  Object.keys(this._items).forEach((k) => {\r\n    values.push({ k, v: this._items[k] });\r\n  });\r\n  Object.keys(this._nums).forEach((k) => {\r\n    values.push({ k: JSON.parse(k), v: this._nums[k] });\r\n  });\r\n\r\n  return values.sort((a, b) => a.v - b.v).map(a => a.k);\r\n};\r\n\r\nStringSet.prototype.clear = function() {\r\n  this._length = 0;\r\n  this._items = {};\r\n  this._nums = {};\r\n  return this;\r\n};\r\n\r\nexport default StringSet;\r\n","import sortFeatures from './sort_features.js';\nimport mapEventToBoundingBox from './map_event_to_bounding_box.js';\nimport * as Constants from '../constants.js';\nimport StringSet from './string_set.js';\n\nconst META_TYPES = [\n  Constants.meta.FEATURE,\n  Constants.meta.MIDPOINT,\n  Constants.meta.VERTEX,\n  Constants.meta.ROTATE\n];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n\n  const box = (event) ? mapEventToBoundingBox(event, buffer) : bbox;\n\n  const queryParams = {};\n\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id).filter(id => ctx.map.getLayer(id) != null);\n\n  const features = ctx.map.queryRenderedFeatures(box, queryParams)\n    .filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach((feature) => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n\n  return sortFeatures(uniqueFeatures);\n}\n","import featuresAt from './features_at.js';\nimport * as Constants from '../constants.js';\n\nexport default function getFeatureAtAndSetCursors(event, ctx) {\n  const features = featuresAt.click(event, null, ctx);\n  const classes = { mouse: Constants.cursors.NONE };\n\n  if (features[0]) {\n    classes.mouse = (features[0].properties.active === Constants.activeStates.ACTIVE) ?\n      Constants.cursors.MOVE : Constants.cursors.POINTER;\n    classes.feature = features[0].properties.meta;\n  }\n\n  if (ctx.events.currentModeName().indexOf('draw') !== -1) {\n    classes.mouse = Constants.cursors.ADD;\n  }\n\n  ctx.ui.queueMapClasses(classes);\n  ctx.ui.updateMapClasses();\n\n  return features[0];\n}\n","export default function(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return Math.sqrt((x * x) + (y * y));\n}\n","import euclideanDistance from './euclidean_distance.js';\r\n\r\nconst FINE_TOLERANCE = 4;\r\nconst GROSS_TOLERANCE = 12;\r\nconst INTERVAL = 500;\r\n\r\nexport default function isClick(start, end, options = {}) {\r\n  const fineTolerance = (options.fineTolerance != null) ? options.fineTolerance : FINE_TOLERANCE;\r\n  const grossTolerance = (options.grossTolerance != null) ? options.grossTolerance : GROSS_TOLERANCE;\r\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\r\n\r\n  start.point = start.point || end.point;\r\n  start.time = start.time || end.time;\r\n  const moveDistance = euclideanDistance(start.point, end.point);\r\n\r\n  return moveDistance < fineTolerance ||\r\n    (moveDistance < grossTolerance && (end.time - start.time) < interval);\r\n}\r\n","import euclideanDistance from './euclidean_distance.js';\r\n\r\nexport const TAP_TOLERANCE = 25;\r\nexport const TAP_INTERVAL = 250;\r\n\r\nexport default function isTap(start, end, options = {}) {\r\n  const tolerance = (options.tolerance != null) ? options.tolerance : TAP_TOLERANCE;\r\n  const interval = (options.interval != null) ? options.interval : TAP_INTERVAL;\r\n\r\n  start.point = start.point || end.point;\r\n  start.time = start.time || end.time;\r\n  const moveDistance = euclideanDistance(start.point, end.point);\r\n\r\n  return moveDistance < tolerance && (end.time - start.time) < interval;\r\n}\r\n","import {customAlphabet} from 'nanoid/non-secure';\n\nconst nanoid = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', 32);\n\nexport function generateID() {\n  return nanoid();\n}\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size | 0\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size | 0\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n","import {generateID} from '../lib/id.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nconst Feature = function(ctx, geojson) {\r\n  this.ctx = ctx;\r\n  this.properties = geojson.properties || {};\r\n  this.coordinates = geojson.geometry.coordinates;\r\n  this.id = geojson.id || generateID();\r\n  this.type = geojson.geometry.type;\r\n};\r\n\r\nFeature.prototype.changed = function() {\r\n  this.ctx.store.featureChanged(this.id);\r\n};\r\n\r\nFeature.prototype.incomingCoords = function(coords) {\r\n  this.setCoordinates(coords);\r\n};\r\n\r\nFeature.prototype.setCoordinates = function(coords) {\r\n  this.coordinates = coords;\r\n  this.changed();\r\n};\r\n\r\nFeature.prototype.getCoordinates = function() {\r\n  return JSON.parse(JSON.stringify(this.coordinates));\r\n};\r\n\r\nFeature.prototype.setProperty = function(property, value) {\r\n  this.properties[property] = value;\r\n};\r\n\r\nFeature.prototype.toGeoJSON = function() {\r\n  return JSON.parse(JSON.stringify({\r\n    id: this.id,\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: this.properties,\r\n    geometry: {\r\n      coordinates: this.getCoordinates(),\r\n      type: this.type\r\n    }\r\n  }));\r\n};\r\n\r\nFeature.prototype.internal = function(mode) {\r\n  const properties = {\r\n    id: this.id,\r\n    meta: Constants.meta.FEATURE,\r\n    'meta:type': this.type,\r\n    active: Constants.activeStates.INACTIVE,\r\n    mode\r\n  };\r\n\r\n  if (this.ctx.options.userProperties) {\r\n    for (const name in this.properties) {\r\n      properties[`user_${name}`] = this.properties[name];\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties,\r\n    geometry: {\r\n      coordinates: this.getCoordinates(),\r\n      type: this.type\r\n    }\r\n  };\r\n};\r\n\r\nexport default Feature;\r\n","import Feature from './feature.js';\r\n\r\nconst Point = function(ctx, geojson) {\r\n  Feature.call(this, ctx, geojson);\r\n};\r\n\r\nPoint.prototype = Object.create(Feature.prototype);\r\n\r\nPoint.prototype.isValid = function() {\r\n  return typeof this.coordinates[0] === 'number' &&\r\n    typeof this.coordinates[1] === 'number';\r\n};\r\n\r\nPoint.prototype.updateCoordinate = function(pathOrLng, lngOrLat, lat) {\r\n  if (arguments.length === 3) {\r\n    this.coordinates = [lngOrLat, lat];\r\n  } else {\r\n    this.coordinates = [pathOrLng, lngOrLat];\r\n  }\r\n  this.changed();\r\n};\r\n\r\nPoint.prototype.getCoordinate = function() {\r\n  return this.getCoordinates();\r\n};\r\n\r\nexport default Point;\r\n","import Feature from './feature.js';\r\n\r\nconst LineString = function(ctx, geojson) {\r\n  Feature.call(this, ctx, geojson);\r\n};\r\n\r\nLineString.prototype = Object.create(Feature.prototype);\r\n\r\nLineString.prototype.isValid = function() {\r\n  return this.coordinates.length > 1;\r\n};\r\n\r\nLineString.prototype.addCoordinate = function(path, lng, lat) {\r\n  this.changed();\r\n  const id = parseInt(path, 10);\r\n  this.coordinates.splice(id, 0, [lng, lat]);\r\n};\r\n\r\nLineString.prototype.getCoordinate = function(path) {\r\n  const id = parseInt(path, 10);\r\n  return JSON.parse(JSON.stringify(this.coordinates[id]));\r\n};\r\n\r\nLineString.prototype.removeCoordinate = function(path) {\r\n  this.changed();\r\n  this.coordinates.splice(parseInt(path, 10), 1);\r\n};\r\n\r\nLineString.prototype.updateCoordinate = function(path, lng, lat) {\r\n  const id = parseInt(path, 10);\r\n  this.coordinates[id] = [lng, lat];\r\n  this.changed();\r\n};\r\n\r\nexport default LineString;\r\n","import Feature from './feature.js';\r\n\r\nconst Polygon = function(ctx, geojson) {\r\n  Feature.call(this, ctx, geojson);\r\n  this.coordinates = this.coordinates.map(ring => ring.slice(0, -1));\r\n};\r\n\r\nPolygon.prototype = Object.create(Feature.prototype);\r\n\r\nPolygon.prototype.isValid = function() {\r\n  if (this.coordinates.length === 0) return false;\r\n  return this.coordinates.every(ring => ring.length > 2);\r\n};\r\n\r\n// Expects valid geoJSON polygon geometry: first and last positions must be equivalent.\r\nPolygon.prototype.incomingCoords = function(coords) {\r\n  this.coordinates = coords.map(ring => ring.slice(0, -1));\r\n  this.changed();\r\n};\r\n\r\n// Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.\r\nPolygon.prototype.setCoordinates = function(coords) {\r\n  this.coordinates = coords;\r\n  this.changed();\r\n};\r\n\r\nPolygon.prototype.addCoordinate = function(path, lng, lat) {\r\n  this.changed();\r\n  const ids = path.split('.').map(x => parseInt(x, 10));\r\n\r\n  const ring = this.coordinates[ids[0]];\r\n\r\n  ring.splice(ids[1], 0, [lng, lat]);\r\n};\r\n\r\nPolygon.prototype.removeCoordinate = function(path) {\r\n  this.changed();\r\n  const ids = path.split('.').map(x => parseInt(x, 10));\r\n  const ring = this.coordinates[ids[0]];\r\n  if (ring) {\r\n    ring.splice(ids[1], 1);\r\n    if (ring.length < 3) {\r\n      this.coordinates.splice(ids[0], 1);\r\n    }\r\n  }\r\n};\r\n\r\nPolygon.prototype.getCoordinate = function(path) {\r\n  const ids = path.split('.').map(x => parseInt(x, 10));\r\n  const ring = this.coordinates[ids[0]];\r\n  return JSON.parse(JSON.stringify(ring[ids[1]]));\r\n};\r\n\r\nPolygon.prototype.getCoordinates = function() {\r\n  return this.coordinates.map(coords => coords.concat([coords[0]]));\r\n};\r\n\r\nPolygon.prototype.updateCoordinate = function(path, lng, lat) {\r\n  this.changed();\r\n  const parts = path.split('.');\r\n  const ringId = parseInt(parts[0], 10);\r\n  const coordId = parseInt(parts[1], 10);\r\n\r\n  if (this.coordinates[ringId] === undefined) {\r\n    this.coordinates[ringId] = [];\r\n  }\r\n\r\n  this.coordinates[ringId][coordId] = [lng, lat];\r\n};\r\n\r\nexport default Polygon;\r\n","import {generateID} from '../lib/id.js';\r\nimport Feature from './feature.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nimport MultiPoint from './point.js';\r\nimport MultiLineString from './line_string.js';\r\nimport MultiPolygon from './polygon.js';\r\n\r\nconst models = {\r\n  MultiPoint,\r\n  MultiLineString,\r\n  MultiPolygon\r\n};\r\n\r\nconst takeAction = (features, action, path, lng, lat) => {\r\n  const parts = path.split('.');\r\n  const idx = parseInt(parts[0], 10);\r\n  const tail = (!parts[1]) ? null : parts.slice(1).join('.');\r\n  return features[idx][action](tail, lng, lat);\r\n};\r\n\r\nconst MultiFeature = function(ctx, geojson) {\r\n  Feature.call(this, ctx, geojson);\r\n\r\n  delete this.coordinates;\r\n  this.model = models[geojson.geometry.type];\r\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\r\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\r\n};\r\n\r\nMultiFeature.prototype = Object.create(Feature.prototype);\r\n\r\nMultiFeature.prototype._coordinatesToFeatures = function(coordinates) {\r\n  const Model = this.model.bind(this);\r\n  return coordinates.map(coords => new Model(this.ctx, {\r\n    id: generateID(),\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {},\r\n    geometry: {\r\n      coordinates: coords,\r\n      type: this.type.replace('Multi', '')\r\n    }\r\n  }));\r\n};\r\n\r\nMultiFeature.prototype.isValid = function() {\r\n  return this.features.every(f => f.isValid());\r\n};\r\n\r\nMultiFeature.prototype.setCoordinates = function(coords) {\r\n  this.features = this._coordinatesToFeatures(coords);\r\n  this.changed();\r\n};\r\n\r\nMultiFeature.prototype.getCoordinate = function(path) {\r\n  return takeAction(this.features, 'getCoordinate', path);\r\n};\r\n\r\nMultiFeature.prototype.getCoordinates = function() {\r\n  return JSON.parse(JSON.stringify(this.features.map((f) => {\r\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\r\n    return f.coordinates;\r\n  })));\r\n};\r\n\r\nMultiFeature.prototype.updateCoordinate = function(path, lng, lat) {\r\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\r\n  this.changed();\r\n};\r\n\r\nMultiFeature.prototype.addCoordinate = function(path, lng, lat) {\r\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\r\n  this.changed();\r\n};\r\n\r\nMultiFeature.prototype.removeCoordinate = function(path) {\r\n  takeAction(this.features, 'removeCoordinate', path);\r\n  this.changed();\r\n};\r\n\r\nMultiFeature.prototype.getFeatures = function() {\r\n  return this.features;\r\n};\r\n\r\nexport default MultiFeature;\r\n","import * as Constants from '../constants.js';\r\nimport featuresAt from '../lib/features_at.js';\r\nimport Point from '../feature_types/point.js';\r\nimport LineString from '../feature_types/line_string.js';\r\nimport Polygon from '../feature_types/polygon.js';\r\nimport MultiFeature from '../feature_types/multi_feature.js';\r\n\r\nexport default function ModeInterface(ctx) {\r\n  this.map = ctx.map;\r\n  this.drawConfig = JSON.parse(JSON.stringify(ctx.options || {}));\r\n  this._ctx = ctx;\r\n}\r\n\r\n/**\r\n * Sets Draw's interal selected state\r\n * @name this.setSelected\r\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\r\n */\r\nModeInterface.prototype.setSelected = function(features) {\r\n  return this._ctx.store.setSelected(features);\r\n};\r\n\r\n/**\r\n * Sets Draw's internal selected coordinate state\r\n * @name this.setSelectedCoordinates\r\n * @param {Object[]} coords - a array of {coord_path: 'string', feature_id: 'string'}\r\n */\r\nModeInterface.prototype.setSelectedCoordinates = function(coords) {\r\n  this._ctx.store.setSelectedCoordinates(coords);\r\n  coords.reduce((m, c) => {\r\n    if (m[c.feature_id] === undefined) {\r\n      m[c.feature_id] = true;\r\n      this._ctx.store.get(c.feature_id).changed();\r\n    }\r\n    return m;\r\n  }, {});\r\n};\r\n\r\n/**\r\n * Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\r\n * @name this.getSelected\r\n * @returns {DrawFeature[]}\r\n */\r\nModeInterface.prototype.getSelected = function() {\r\n  return this._ctx.store.getSelected();\r\n};\r\n\r\n/**\r\n * Get the ids of all currently selected features\r\n * @name this.getSelectedIds\r\n * @returns {String[]}\r\n */\r\nModeInterface.prototype.getSelectedIds = function() {\r\n  return this._ctx.store.getSelectedIds();\r\n};\r\n\r\n/**\r\n * Check if a feature is selected\r\n * @name this.isSelected\r\n * @param {String} id - a feature id\r\n * @returns {Boolean}\r\n */\r\nModeInterface.prototype.isSelected = function(id) {\r\n  return this._ctx.store.isSelected(id);\r\n};\r\n\r\n/**\r\n * Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) by its id\r\n * @name this.getFeature\r\n * @param {String} id - a feature id\r\n * @returns {DrawFeature}\r\n */\r\nModeInterface.prototype.getFeature = function(id) {\r\n  return this._ctx.store.get(id);\r\n};\r\n\r\n/**\r\n * Add a feature to draw's internal selected state\r\n * @name this.select\r\n * @param {String} id\r\n */\r\nModeInterface.prototype.select = function(id) {\r\n  return this._ctx.store.select(id);\r\n};\r\n\r\n/**\r\n * Remove a feature from draw's internal selected state\r\n * @name this.delete\r\n * @param {String} id\r\n */\r\nModeInterface.prototype.deselect = function(id) {\r\n  return this._ctx.store.deselect(id);\r\n};\r\n\r\n/**\r\n * Delete a feature from draw\r\n * @name this.deleteFeature\r\n * @param {String} id - a feature id\r\n */\r\nModeInterface.prototype.deleteFeature = function(id, opts = {}) {\r\n  return this._ctx.store.delete(id, opts);\r\n};\r\n\r\n/**\r\n * Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) to draw.\r\n * See `this.newFeature` for converting geojson into a DrawFeature\r\n * @name this.addFeature\r\n * @param {DrawFeature} feature - the feature to add\r\n */\r\nModeInterface.prototype.addFeature = function(feature, opts = {}) {\r\n  return this._ctx.store.add(feature, opts);\r\n};\r\n\r\n/**\r\n * Clear all selected features\r\n */\r\nModeInterface.prototype.clearSelectedFeatures = function() {\r\n  return this._ctx.store.clearSelected();\r\n};\r\n\r\n/**\r\n * Clear all selected coordinates\r\n */\r\nModeInterface.prototype.clearSelectedCoordinates = function() {\r\n  return this._ctx.store.clearSelectedCoordinates();\r\n};\r\n\r\n/**\r\n * Indicate if the different action are currently possible with your mode\r\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\r\n * @name this.setActionableState\r\n * @param {Object} actions\r\n */\r\nModeInterface.prototype.setActionableState = function(actions = {}) {\r\n  const newSet = {\r\n    trash: actions.trash || false,\r\n    combineFeatures: actions.combineFeatures || false,\r\n    uncombineFeatures: actions.uncombineFeatures || false\r\n  };\r\n  return this._ctx.events.actionable(newSet);\r\n};\r\n\r\n/**\r\n * Trigger a mode change\r\n * @name this.changeMode\r\n * @param {String} mode - the mode to transition into\r\n * @param {Object} opts - the options object to pass to the new mode\r\n * @param {Object} eventOpts - used to control what kind of events are emitted.\r\n */\r\nModeInterface.prototype.changeMode = function(mode, opts = {}, eventOpts = {}) {\r\n  return this._ctx.events.changeMode(mode, opts, eventOpts);\r\n};\r\n\r\n/**\r\n * Fire a map event\r\n * @name this.fire\r\n * @param {String} eventName - the event name.\r\n * @param {Object} eventData - the event data object.\r\n */\r\nModeInterface.prototype.fire = function(eventName, eventData) {\r\n  return this._ctx.events.fire(eventName, eventData);\r\n};\r\n\r\n/**\r\n * Update the state of draw map classes\r\n * @name this.updateUIClasses\r\n * @param {Object} opts\r\n */\r\nModeInterface.prototype.updateUIClasses = function(opts) {\r\n  return this._ctx.ui.queueMapClasses(opts);\r\n};\r\n\r\n/**\r\n * If a name is provided it makes that button active, else if makes all buttons inactive\r\n * @name this.activateUIButton\r\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive\r\n */\r\nModeInterface.prototype.activateUIButton = function(name) {\r\n  return this._ctx.ui.setActiveButton(name);\r\n};\r\n\r\n/**\r\n * Get the features at the location of an event object or in a bbox\r\n * @name this.featuresAt\r\n * @param {Event||NULL} event - a mapbox-gl event object\r\n * @param {BBOX||NULL} bbox - the area to get features from\r\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click\r\n */\r\nModeInterface.prototype.featuresAt = function(event, bbox, bufferType = 'click') {\r\n  if (bufferType !== 'click' && bufferType !== 'touch') throw new Error('invalid buffer type');\r\n  return featuresAt[bufferType](event, bbox, this._ctx);\r\n};\r\n\r\n/**\r\n * Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) from geojson\r\n * @name this.newFeature\r\n * @param {GeoJSONFeature} geojson\r\n * @returns {DrawFeature}\r\n */\r\nModeInterface.prototype.newFeature = function(geojson) {\r\n  const type = geojson.geometry.type;\r\n  if (type === Constants.geojsonTypes.POINT) return new Point(this._ctx, geojson);\r\n  if (type === Constants.geojsonTypes.LINE_STRING) return new LineString(this._ctx, geojson);\r\n  if (type === Constants.geojsonTypes.POLYGON) return new Polygon(this._ctx, geojson);\r\n  return new MultiFeature(this._ctx, geojson);\r\n};\r\n\r\n/**\r\n * Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\r\n * @name this.isInstanceOf\r\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\r\n * @param {Object} feature - the object that needs to be checked\r\n * @returns {Boolean}\r\n */\r\nModeInterface.prototype.isInstanceOf = function(type, feature) {\r\n  if (type === Constants.geojsonTypes.POINT) return feature instanceof Point;\r\n  if (type === Constants.geojsonTypes.LINE_STRING) return feature instanceof LineString;\r\n  if (type === Constants.geojsonTypes.POLYGON) return feature instanceof Polygon;\r\n  if (type === 'MultiFeature') return feature instanceof MultiFeature;\r\n  throw new Error(`Unknown feature class: ${type}`);\r\n};\r\n\r\n/**\r\n * Force draw to rerender the feature of the provided id\r\n * @name this.doRender\r\n * @param {String} id - a feature id\r\n */\r\nModeInterface.prototype.doRender = function(id) {\r\n  return this._ctx.store.featureChanged(id);\r\n};\r\n\r\n","import ModeInterface from './mode_interface_accessors.js';\r\nexport default ModeInterface;\r\n\r\n/**\r\n * Triggered while a mode is being transitioned into.\r\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\r\n * @name MODE.onSetup\r\n * @returns {Object} - this object will be passed to all other life cycle functions\r\n */\r\nModeInterface.prototype.onSetup = function() {};\r\n\r\n/**\r\n * Triggered when a drag event is detected on the map\r\n * @name MODE.onDrag\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onDrag = function() {};\r\n\r\n/**\r\n * Triggered when the mouse is clicked\r\n * @name MODE.onClick\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onClick = function() {};\r\n\r\n/**\r\n * Triggered with the mouse is moved\r\n * @name MODE.onMouseMove\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onMouseMove = function() {};\r\n\r\n/**\r\n * Triggered when the mouse button is pressed down\r\n * @name MODE.onMouseDown\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onMouseDown = function() {};\r\n\r\n/**\r\n * Triggered when the mouse button is released\r\n * @name MODE.onMouseUp\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onMouseUp = function() {};\r\n\r\n/**\r\n * Triggered when the mouse leaves the map's container\r\n * @name MODE.onMouseOut\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onMouseOut = function() {};\r\n\r\n/**\r\n * Triggered when a key up event is detected\r\n * @name MODE.onKeyUp\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onKeyUp = function() {};\r\n\r\n/**\r\n * Triggered when a key down event is detected\r\n * @name MODE.onKeyDown\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onKeyDown = function() {};\r\n\r\n/**\r\n * Triggered when a touch event is started\r\n * @name MODE.onTouchStart\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onTouchStart = function() {};\r\n\r\n/**\r\n * Triggered when one drags thier finger on a mobile device\r\n * @name MODE.onTouchMove\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onTouchMove = function() {};\r\n\r\n/**\r\n * Triggered when one removes their finger from the map\r\n * @name MODE.onTouchEnd\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onTouchEnd = function() {};\r\n\r\n/**\r\n * Triggered when one quicly taps the map\r\n * @name MODE.onTap\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param e {Object} - the captured event that is triggering this life cycle event\r\n */\r\nModeInterface.prototype.onTap = function() {};\r\n\r\n/**\r\n * Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\r\n * @name MODE.onStop\r\n * @param state {Object} - a mutible state object created by onSetup\r\n */\r\nModeInterface.prototype.onStop = function() {};\r\n\r\n/**\r\n * Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#trash-draw) is called.\r\n * @name MODE.onTrash\r\n * @param state {Object} - a mutible state object created by onSetup\r\n */\r\nModeInterface.prototype.onTrash = function() {};\r\n\r\n/**\r\n * Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#combinefeatures-draw) is called.\r\n * @name MODE.onCombineFeature\r\n * @param state {Object} - a mutible state object created by onSetup\r\n */\r\nModeInterface.prototype.onCombineFeature = function() {};\r\n\r\n/**\r\n * Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#uncombinefeatures-draw) is called.\r\n * @name MODE.onUncombineFeature\r\n * @param state {Object} - a mutible state object created by onSetup\r\n */\r\nModeInterface.prototype.onUncombineFeature = function() {};\r\n\r\n/**\r\n * Triggered per feature on render to convert raw features into set of features for display on the map\r\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\r\n * @name MODE.toDisplayFeatures\r\n * @param state {Object} - a mutible state object created by onSetup\r\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\r\n * @param display {Function} - all geojson objects passed to this be rendered onto the map\r\n */\r\nModeInterface.prototype.toDisplayFeatures = function() {\r\n  throw new Error('You must overwrite toDisplayFeatures');\r\n};\r\n\r\n","import ModeInterface from './mode_interface.js';\r\n\r\nconst eventMapper = {\r\n  drag: 'onDrag',\r\n  click: 'onClick',\r\n  mousemove: 'onMouseMove',\r\n  mousedown: 'onMouseDown',\r\n  mouseup: 'onMouseUp',\r\n  mouseout: 'onMouseOut',\r\n  keyup: 'onKeyUp',\r\n  keydown: 'onKeyDown',\r\n  touchstart: 'onTouchStart',\r\n  touchmove: 'onTouchMove',\r\n  touchend: 'onTouchEnd',\r\n  tap: 'onTap'\r\n};\r\n\r\nconst eventKeys = Object.keys(eventMapper);\r\n\r\nexport default function(modeObject) {\r\n  const modeObjectKeys = Object.keys(modeObject);\r\n\r\n  return function(ctx, startOpts = {}) {\r\n    let state = {};\r\n\r\n    const mode = modeObjectKeys.reduce((m, k) => {\r\n      m[k] = modeObject[k];\r\n      return m;\r\n    }, new ModeInterface(ctx));\r\n\r\n    function wrapper(eh) {\r\n      return e => mode[eh](state, e);\r\n    }\r\n\r\n    return {\r\n      start() {\r\n        state = mode.onSetup(startOpts); // this should set ui buttons\r\n\r\n        // Adds event handlers for all event options\r\n        // add sets the selector to false for all\r\n        // handlers that are not present in the mode\r\n        // to reduce on render calls for functions that\r\n        // have no logic\r\n        eventKeys.forEach((key) => {\r\n          const modeHandler = eventMapper[key];\r\n          let selector = () => false;\r\n          if (modeObject[modeHandler]) {\r\n            selector = () => true;\r\n          }\r\n          this.on(key, selector, wrapper(modeHandler));\r\n        });\r\n\r\n      },\r\n      stop() {\r\n        mode.onStop(state);\r\n      },\r\n      trash() {\r\n        mode.onTrash(state);\r\n      },\r\n      combineFeatures() {\r\n        mode.onCombineFeatures(state);\r\n      },\r\n      uncombineFeatures() {\r\n        mode.onUncombineFeatures(state);\r\n      },\r\n      render(geojson, push) {\r\n        mode.toDisplayFeatures(state, geojson, push);\r\n      }\r\n    };\r\n  };\r\n}\r\n","/**\r\n * Derive a dense array (no `undefined`s) from a single value or array.\r\n *\r\n * @param {any} x\r\n * @return {Array<any>}\r\n */\r\nfunction toDenseArray(x) {\r\n  return [].concat(x).filter(y => y !== undefined);\r\n}\r\n\r\nexport default toDenseArray;\r\n","import * as Constants from './constants.js';\n\nexport default function render() {\n  // eslint-disable-next-line no-invalid-this\n  const store = this;\n  const mapExists = store.ctx.map && store.ctx.map.getSource(Constants.source) !== undefined;\n  if (!mapExists) return cleanup();\n\n  const mode = store.ctx.events.currentModeName();\n\n  store.ctx.ui.queueMapClasses({ mode });\n\n  const newIds = store.getAllIds();\n\n  const lastCount = store.source.length;\n  store.source = [];\n  const changed = lastCount !== store.source.length || newIds.length > 0;\n  newIds.forEach(id => renderFeature(id));\n\n  function renderFeature(id) {\n    const feature = store.get(id);\n    const featureInternal = feature.internal(mode);\n    store.ctx.events.currentModeRender(featureInternal, (geojson) => {\n      geojson.properties.mode = mode;\n      store.source.push(geojson);\n    });\n  }\n\n  if (changed) {\n    store.ctx.map.getSource(Constants.source).setData({\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: store.source\n    });\n  }\n\n  cleanup();\n\n  function cleanup() {\n    store.isDirty = false;\n    store.clearChangedIds();\n  }\n}\n","import toDenseArray from './lib/to_dense_array.js';\nimport StringSet from './lib/string_set.js';\nimport render from './render.js';\nimport * as Constants from './constants.js';\n\nexport default function Store(ctx) {\n  this._features = {};\n  this._featureIds = new StringSet();\n  this._selectedFeatureIds = new StringSet();\n  this._selectedCoordinates = [];\n  this._changedFeatureIds = new StringSet();\n  this._emitSelectionChange = false;\n  this._mapInitialConfig = {};\n  this.ctx = ctx;\n  this.source = [];\n\n  // Deduplicate requests to render and tie them to animation frames.\n  let renderRequest;\n  this.render = () => {\n    if (!renderRequest) {\n      renderRequest = requestAnimationFrame(() => {\n        renderRequest = null;\n        render.call(this);\n\n        // Fire deduplicated selection change event\n        if (this._emitSelectionChange) {\n          this.ctx.events.fire(Constants.events.SELECTION_CHANGE, {\n            features: this.getSelected().map(feature => feature.toGeoJSON()),\n            points: this.getSelectedCoordinates().map(coordinate => ({\n              type: Constants.geojsonTypes.FEATURE,\n              properties: {},\n              geometry: {\n                type: Constants.geojsonTypes.POINT,\n                coordinates: coordinate.coordinates\n              }\n            }))\n          });\n\n          this._emitSelectionChange = false;\n        }\n\n        // Fire render event\n        this.ctx.events.fire(Constants.events.RENDER, {});\n      });\n    }\n  };\n\n  this.isDirty = false;\n}\n\n/**\n * Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch\n */\nStore.prototype.createRenderBatch = function() {\n  const holdRender = this.render;\n  let numRenders = 0;\n  this.render = function() {\n    numRenders++;\n  };\n\n  return () => {\n    this.render = holdRender;\n    if (numRenders > 0) {\n      this.render();\n    }\n  };\n};\n\n/**\n * Sets the store's state to dirty.\n * @return {Store} this\n */\nStore.prototype.setDirty = function() {\n  this.isDirty = true;\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureCreated = function(featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    const feature = this.get(featureId);\n    this.ctx.events.fire(Constants.events.CREATE, {\n      features: [feature.toGeoJSON()]\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureChanged = function(featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    this.ctx.events.fire(Constants.events.UPDATE, {\n      action: options.action ? options.action : Constants.updateActions.CHANGE_COORDINATES,\n      features: [this.get(featureId).toGeoJSON()]\n    });\n  }\n\n  return this;\n};\n\n/**\n * Gets the ids of all features currently in changed state.\n * @return {Store} this\n */\nStore.prototype.getChangedIds = function() {\n  return this._changedFeatureIds.values();\n};\n\n/**\n * Sets all features to unchanged state.\n * @return {Store} this\n */\nStore.prototype.clearChangedIds = function() {\n  this._changedFeatureIds.clear();\n  return this;\n};\n\n/**\n * Gets the ids of all features in the store.\n * @return {Store} this\n */\nStore.prototype.getAllIds = function() {\n  return this._featureIds.values();\n};\n\n/**\n * Adds a feature to the store.\n * @param {Object} feature\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n *\n * @return {Store} this\n */\nStore.prototype.add = function(feature, options = {}) {\n  this._features[feature.id] = feature;\n  this._featureIds.add(feature.id);\n  this.featureCreated(feature.id, {silent: options.silent});\n  return this;\n};\n\n/**\n * Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.delete = function(featureIds, options = {}) {\n  const deletedFeaturesToEmit = [];\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._featureIds.has(id)) return;\n    this._featureIds.delete(id);\n    this._selectedFeatureIds.delete(id);\n    if (!options.silent) {\n      if (deletedFeaturesToEmit.indexOf(this._features[id]) === -1) {\n        deletedFeaturesToEmit.push(this._features[id].toGeoJSON());\n      }\n    }\n    delete this._features[id];\n    this.isDirty = true;\n  });\n\n  if (deletedFeaturesToEmit.length) {\n    this.ctx.events.fire(Constants.events.DELETE, {features: deletedFeaturesToEmit});\n  }\n\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature\n */\nStore.prototype.get = function(id) {\n  return this._features[id];\n};\n\n/**\n * Returns all features in the store.\n * @return {Array<Object>}\n */\nStore.prototype.getAll = function() {\n  return Object.keys(this._features).map(id => this._features[id]);\n};\n\n/**\n * Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.select = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.add(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.deselect = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.delete(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.clearSelected = function(options = {}) {\n  this.deselect(this._selectedFeatureIds.values(), { silent: options.silent });\n  return this;\n};\n\n/**\n * Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.setSelected = function(featureIds, options = {}) {\n  featureIds = toDenseArray(featureIds);\n\n  // Deselect any features not in the new selection\n  this.deselect(this._selectedFeatureIds.values().filter(id => featureIds.indexOf(id) === -1), { silent: options.silent });\n\n  // Select any features in the new selection that were not already selected\n  this.select(featureIds.filter(id => !this._selectedFeatureIds.has(id)), { silent: options.silent });\n\n  return this;\n};\n\n/**\n * Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this\n */\nStore.prototype.setSelectedCoordinates = function(coordinates) {\n  this._selectedCoordinates = coordinates;\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this\n */\nStore.prototype.clearSelectedCoordinates = function() {\n  this._selectedCoordinates = [];\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.\n */\nStore.prototype.getSelectedIds = function() {\n  return this._selectedFeatureIds.values();\n};\n\n/**\n * Returns features in the current selection.\n * @return {Array<Object>} Selected features.\n */\nStore.prototype.getSelected = function() {\n  return this.getSelectedIds().map(id => this.get(id));\n};\n\n/**\n * Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.\n */\nStore.prototype.getSelectedCoordinates = function() {\n  const selected = this._selectedCoordinates.map((coordinate) => {\n    const feature = this.get(coordinate.feature_id);\n    return {\n      coordinates: feature.getCoordinate(coordinate.coord_path)\n    };\n  });\n  return selected;\n};\n\n/**\n * Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.\n */\nStore.prototype.isSelected = function(featureId) {\n  return this._selectedFeatureIds.has(featureId);\n};\n\n/**\n * Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n*/\nStore.prototype.setFeatureProperty = function(featureId, property, value, options = {}) {\n  this.get(featureId).setProperty(property, value);\n\n  this.featureChanged(featureId, {\n    silent: options.silent,\n    action: Constants.updateActions.CHANGE_PROPERTIES\n  });\n};\n\nfunction refreshSelectedCoordinates(store, options = {}) {\n  const newSelectedCoordinates = store._selectedCoordinates.filter(point => store._selectedFeatureIds.has(point.feature_id));\n  if (store._selectedCoordinates.length !== newSelectedCoordinates.length && !options.silent) {\n    store._emitSelectionChange = true;\n  }\n  store._selectedCoordinates = newSelectedCoordinates;\n}\n\n/**\n * Stores the initial config for a map, so that we can set it again after we're done.\n*/\nStore.prototype.storeMapConfig = function() {\n  Constants.interactions.forEach((interaction) => {\n    const interactionSet = this.ctx.map[interaction];\n    if (interactionSet) {\n      this._mapInitialConfig[interaction] = this.ctx.map[interaction].isEnabled();\n    }\n  });\n};\n\n/**\n * Restores the initial config for a map, ensuring all is well.\n*/\nStore.prototype.restoreMapConfig = function() {\n  Object.keys(this._mapInitialConfig).forEach((key) => {\n    const value = this._mapInitialConfig[key];\n    if (value) {\n      this.ctx.map[key].enable();\n    } else {\n      this.ctx.map[key].disable();\n    }\n  });\n};\n\n/**\n * Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)\n*/\nStore.prototype.getInitialConfigValue = function(interaction) {\n  if (this._mapInitialConfig[interaction] !== undefined) {\n    return this._mapInitialConfig[interaction];\n  } else {\n    // This needs to be set to whatever the default is for that interaction\n    // It seems to be true for all cases currently, so let's send back `true`.\n    return true;\n  }\n};\n","import * as Constants from './constants.js';\r\n\r\nconst classTypes = ['mode', 'feature', 'mouse'];\r\n\r\nexport default function(ctx) {\r\n\r\n\r\n  const buttonElements = {};\r\n  let activeButton = null;\r\n\r\n  let currentMapClasses = {\r\n    mode: null, // e.g. mode-direct_select\r\n    feature: null, // e.g. feature-vertex\r\n    mouse: null // e.g. mouse-move\r\n  };\r\n\r\n  let nextMapClasses = {\r\n    mode: null,\r\n    feature: null,\r\n    mouse: null\r\n  };\r\n\r\n  function clearMapClasses() {\r\n    queueMapClasses({mode:null, feature:null, mouse:null});\r\n    updateMapClasses();\r\n  }\r\n\r\n  function queueMapClasses(options) {\r\n    nextMapClasses = Object.assign(nextMapClasses, options);\r\n  }\r\n\r\n  function updateMapClasses() {\r\n    if (!ctx.container) return;\r\n\r\n    const classesToRemove = [];\r\n    const classesToAdd = [];\r\n\r\n    classTypes.forEach((type) => {\r\n      if (nextMapClasses[type] === currentMapClasses[type]) return;\r\n\r\n      classesToRemove.push(`${type}-${currentMapClasses[type]}`);\r\n      if (nextMapClasses[type] !== null) {\r\n        classesToAdd.push(`${type}-${nextMapClasses[type]}`);\r\n      }\r\n    });\r\n\r\n    if (classesToRemove.length > 0) {\r\n      ctx.container.classList.remove(...classesToRemove);\r\n    }\r\n\r\n    if (classesToAdd.length > 0) {\r\n      ctx.container.classList.add(...classesToAdd);\r\n    }\r\n\r\n    currentMapClasses = Object.assign(currentMapClasses, nextMapClasses);\r\n  }\r\n\r\n  function createControlButton(id, options = {}) {\r\n    const button = document.createElement('button');\r\n    button.className = `${Constants.classes.CONTROL_BUTTON} ${options.className}`;\r\n    button.setAttribute('title', options.title);\r\n    options.container.appendChild(button);\r\n\r\n    button.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      const clickedButton = e.target;\r\n      if (clickedButton === activeButton) {\r\n        deactivateButtons();\r\n        options.onDeactivate();\r\n        return;\r\n      }\r\n\r\n      setActiveButton(id);\r\n      options.onActivate();\r\n    }, true);\r\n\r\n    return button;\r\n  }\r\n\r\n  function deactivateButtons() {\r\n    if (!activeButton) return;\r\n    activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON);\r\n    activeButton = null;\r\n  }\r\n\r\n  function setActiveButton(id) {\r\n    deactivateButtons();\r\n\r\n    const button = buttonElements[id];\r\n    if (!button) return;\r\n\r\n    if (button && id !== 'trash') {\r\n      button.classList.add(Constants.classes.ACTIVE_BUTTON);\r\n      activeButton = button;\r\n    }\r\n  }\r\n\r\n  function addButtons() {\r\n    const controls = ctx.options.controls;\r\n    const controlGroup = document.createElement('div');\r\n    controlGroup.className = `${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`;\r\n\r\n    if (!controls) return controlGroup;\r\n\r\n    if (controls[Constants.types.POINT]) {\r\n      buttonElements[Constants.types.POINT] = createControlButton(Constants.types.POINT, {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_POINT,\r\n        title: `Marker tool ${ctx.options.keybindings ? '(1)' : ''}`,\r\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POINT),\r\n        onDeactivate: () => ctx.events.trash()\r\n      });\r\n    }\r\n\r\n\r\n    if (controls[Constants.types.LINE]) {\r\n      buttonElements[Constants.types.LINE] = createControlButton(Constants.types.LINE, {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_LINE,\r\n        title: `LineString tool ${ctx.options.keybindings ? '(2)' : ''}`,\r\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING),\r\n        onDeactivate: () => ctx.events.trash()\r\n      });\r\n    }\r\n\r\n    if (controls[Constants.types.POLYGON]) {\r\n      buttonElements[Constants.types.POLYGON] = createControlButton(Constants.types.POLYGON, {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_POLYGON,\r\n        title: `Polygon tool ${ctx.options.keybindings ? '(3)' : ''}`,\r\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POLYGON),\r\n        onDeactivate: () => ctx.events.trash()\r\n      });\r\n    }\r\n\r\n    if (controls.trash) {\r\n      buttonElements.trash = createControlButton('trash', {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_TRASH,\r\n        title: 'Delete',\r\n        onActivate: () => {\r\n          ctx.events.trash();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (controls.combine_features) {\r\n      buttonElements.combine_features = createControlButton('combineFeatures', {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,\r\n        title: 'Combine',\r\n        onActivate: () => {\r\n          ctx.events.combineFeatures();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (controls.uncombine_features) {\r\n      buttonElements.uncombine_features = createControlButton('uncombineFeatures', {\r\n        container: controlGroup,\r\n        className: Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,\r\n        title: 'Uncombine',\r\n        onActivate: () => {\r\n          ctx.events.uncombineFeatures();\r\n        }\r\n      });\r\n    }\r\n\r\n    return controlGroup;\r\n  }\r\n\r\n  function removeButtons() {\r\n    Object.keys(buttonElements).forEach((buttonId) => {\r\n      const button = buttonElements[buttonId];\r\n      if (button.parentNode) {\r\n        button.parentNode.removeChild(button);\r\n      }\r\n      delete buttonElements[buttonId];\r\n    });\r\n  }\r\n\r\n  return {\r\n    setActiveButton,\r\n    queueMapClasses,\r\n    updateMapClasses,\r\n    clearMapClasses,\r\n    addButtons,\r\n    removeButtons\r\n  };\r\n}\r\n","import events from './events.js';\nimport Store from './store.js';\nimport ui from './ui.js';\nimport * as Constants from './constants.js';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      if (ctx.boxZoomInitial) ctx.map.boxZoom.enable();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        ctx.boxZoomInitial = map.boxZoom.isEnabled();\n        map.boxZoom.disable();\n        const dragPanIsEnabled = map.dragPan.isEnabled();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n        if (!dragPanIsEnabled) {\n          map.dragPan.disable();\n        }\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.source, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.source)) {\n        ctx.map.removeSource(Constants.source);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n","import setupModeHandler from './lib/mode_handler.js';\r\nimport getFeaturesAndSetCursor from './lib/get_features_and_set_cursor.js';\r\nimport featuresAt from './lib/features_at.js';\r\nimport isClick from './lib/is_click.js';\r\nimport isTap from './lib/is_tap.js';\r\nimport * as Constants from './constants.js';\r\nimport objectToMode from './modes/object_to_mode.js';\r\n\r\nexport default function(ctx) {\r\n\r\n  const modes = Object.keys(ctx.options.modes).reduce((m, k) => {\r\n    m[k] = objectToMode(ctx.options.modes[k]);\r\n    return m;\r\n  }, {});\r\n\r\n  let mouseDownInfo = {};\r\n  let touchStartInfo = {};\r\n  const events = {};\r\n  let currentModeName = null;\r\n  let currentMode = null;\r\n\r\n  events.drag = function(event, isDrag) {\r\n    if (isDrag({\r\n      point: event.point,\r\n      time: new Date().getTime()\r\n    })) {\r\n      ctx.ui.queueMapClasses({ mouse: Constants.cursors.DRAG });\r\n      currentMode.drag(event);\r\n    } else {\r\n      event.originalEvent.stopPropagation();\r\n    }\r\n  };\r\n\r\n  events.mousedrag = function(event) {\r\n    events.drag(event, endInfo => !isClick(mouseDownInfo, endInfo));\r\n  };\r\n\r\n  events.touchdrag = function(event) {\r\n    events.drag(event, endInfo => !isTap(touchStartInfo, endInfo));\r\n  };\r\n\r\n  events.mousemove = function(event) {\r\n    const button = event.originalEvent.buttons !== undefined ? event.originalEvent.buttons : event.originalEvent.which;\r\n    if (button === 1) {\r\n      return events.mousedrag(event);\r\n    }\r\n    const target = getFeaturesAndSetCursor(event, ctx);\r\n    event.featureTarget = target;\r\n    currentMode.mousemove(event);\r\n  };\r\n\r\n  events.mousedown = function(event) {\r\n    mouseDownInfo = {\r\n      time: new Date().getTime(),\r\n      point: event.point\r\n    };\r\n    const target = getFeaturesAndSetCursor(event, ctx);\r\n    event.featureTarget = target;\r\n    currentMode.mousedown(event);\r\n  };\r\n\r\n  events.mouseup = function(event) {\r\n    const target = getFeaturesAndSetCursor(event, ctx);\r\n    event.featureTarget = target;\r\n\r\n    if (isClick(mouseDownInfo, {\r\n      point: event.point,\r\n      time: new Date().getTime()\r\n    })) {\r\n      currentMode.click(event);\r\n    } else {\r\n      currentMode.mouseup(event);\r\n    }\r\n  };\r\n\r\n  events.mouseout = function(event) {\r\n    currentMode.mouseout(event);\r\n  };\r\n\r\n  events.touchstart = function(event) {\r\n    if (!ctx.options.touchEnabled) {\r\n      return;\r\n    }\r\n\r\n    touchStartInfo = {\r\n      time: new Date().getTime(),\r\n      point: event.point\r\n    };\r\n    const target = featuresAt.touch(event, null, ctx)[0];\r\n    event.featureTarget = target;\r\n    currentMode.touchstart(event);\r\n  };\r\n\r\n  events.touchmove = function(event) {\r\n    if (!ctx.options.touchEnabled) {\r\n      return;\r\n    }\r\n\r\n    currentMode.touchmove(event);\r\n    return events.touchdrag(event);\r\n  };\r\n\r\n  events.touchend = function(event) {\r\n    // Prevent emulated mouse events because we will fully handle the touch here.\r\n    // This does not stop the touch events from propogating to mapbox though.\r\n    event.originalEvent.preventDefault();\r\n    if (!ctx.options.touchEnabled) {\r\n      return;\r\n    }\r\n\r\n    const target = featuresAt.touch(event, null, ctx)[0];\r\n    event.featureTarget = target;\r\n    if (isTap(touchStartInfo, {\r\n      time: new Date().getTime(),\r\n      point: event.point\r\n    })) {\r\n      currentMode.tap(event);\r\n    } else {\r\n      currentMode.touchend(event);\r\n    }\r\n  };\r\n\r\n  // 8 - Backspace\r\n  // 46 - Delete\r\n  const isKeyModeValid = code => !(code === 8 || code === 46 || (code >= 48 && code <= 57));\r\n\r\n  events.keydown = function(event) {\r\n    const isMapElement = (event.srcElement || event.target).classList.contains(Constants.classes.CANVAS);\r\n    if (!isMapElement) return; // we only handle events on the map\r\n\r\n    if ((event.keyCode === 8 || event.keyCode === 46) && ctx.options.controls.trash) {\r\n      event.preventDefault();\r\n      currentMode.trash();\r\n    } else if (isKeyModeValid(event.keyCode)) {\r\n      currentMode.keydown(event);\r\n    } else if (event.keyCode === 49 && ctx.options.controls.point) {\r\n      changeMode(Constants.modes.DRAW_POINT);\r\n    } else if (event.keyCode === 50 && ctx.options.controls.line_string) {\r\n      changeMode(Constants.modes.DRAW_LINE_STRING);\r\n    } else if (event.keyCode === 51 && ctx.options.controls.polygon) {\r\n      changeMode(Constants.modes.DRAW_POLYGON);\r\n    }\r\n  };\r\n\r\n  events.keyup = function(event) {\r\n    if (isKeyModeValid(event.keyCode)) {\r\n      currentMode.keyup(event);\r\n    }\r\n  };\r\n\r\n  events.zoomend = function() {\r\n    ctx.store.changeZoom();\r\n  };\r\n\r\n  events.data = function(event) {\r\n    if (event.dataType === 'style') {\r\n      const { setup, map, options, store } = ctx;\r\n      const hasLayers = options.styles.some(style => map.getLayer(style.id));\r\n      if (!hasLayers) {\r\n        setup.addLayers();\r\n        store.setDirty();\r\n        store.render();\r\n      }\r\n    }\r\n  };\r\n\r\n  function changeMode(modename, nextModeOptions, eventOptions = {}) {\r\n    currentMode.stop();\r\n\r\n    const modebuilder = modes[modename];\r\n    if (modebuilder === undefined) {\r\n      throw new Error(`${modename} is not valid`);\r\n    }\r\n    currentModeName = modename;\r\n    const mode = modebuilder(ctx, nextModeOptions);\r\n    currentMode = setupModeHandler(mode, ctx);\r\n\r\n    if (!eventOptions.silent) {\r\n      ctx.map.fire(Constants.events.MODE_CHANGE, { mode: modename});\r\n    }\r\n\r\n    ctx.store.setDirty();\r\n    ctx.store.render();\r\n  }\r\n\r\n  const actionState = {\r\n    trash: false,\r\n    combineFeatures: false,\r\n    uncombineFeatures: false\r\n  };\r\n\r\n  function actionable(actions) {\r\n    let changed = false;\r\n    Object.keys(actions).forEach((action) => {\r\n      if (actionState[action] === undefined) throw new Error('Invalid action type');\r\n      if (actionState[action] !== actions[action]) changed = true;\r\n      actionState[action] = actions[action];\r\n    });\r\n    if (changed) ctx.map.fire(Constants.events.ACTIONABLE, { actions: actionState });\r\n  }\r\n\r\n  const api = {\r\n    start() {\r\n      currentModeName = ctx.options.defaultMode;\r\n      currentMode = setupModeHandler(modes[currentModeName](ctx), ctx);\r\n    },\r\n    changeMode,\r\n    actionable,\r\n    currentModeName() {\r\n      return currentModeName;\r\n    },\r\n    currentModeRender(geojson, push) {\r\n      return currentMode.render(geojson, push);\r\n    },\r\n    fire(eventName, eventData) {\r\n      if (!ctx.map) return;\r\n      ctx.map.fire(eventName, eventData);\r\n    },\r\n    addEventListeners() {\r\n      ctx.map.on('mousemove', events.mousemove);\r\n      ctx.map.on('mousedown', events.mousedown);\r\n      ctx.map.on('mouseup', events.mouseup);\r\n      ctx.map.on('data', events.data);\r\n\r\n      ctx.map.on('touchmove', events.touchmove);\r\n      ctx.map.on('touchstart', events.touchstart);\r\n      ctx.map.on('touchend', events.touchend);\r\n\r\n      ctx.container.addEventListener('mouseout', events.mouseout);\r\n\r\n      if (ctx.options.keybindings) {\r\n        ctx.container.addEventListener('keydown', events.keydown);\r\n        ctx.container.addEventListener('keyup', events.keyup);\r\n      }\r\n    },\r\n    removeEventListeners() {\r\n      ctx.map.off('mousemove', events.mousemove);\r\n      ctx.map.off('mousedown', events.mousedown);\r\n      ctx.map.off('mouseup', events.mouseup);\r\n      ctx.map.off('data', events.data);\r\n\r\n      ctx.map.off('touchmove', events.touchmove);\r\n      ctx.map.off('touchstart', events.touchstart);\r\n      ctx.map.off('touchend', events.touchend);\r\n\r\n      ctx.container.removeEventListener('mouseout', events.mouseout);\r\n\r\n      if (ctx.options.keybindings) {\r\n        ctx.container.removeEventListener('keydown', events.keydown);\r\n        ctx.container.removeEventListener('keyup', events.keyup);\r\n      }\r\n    },\r\n    trash(options) {\r\n      currentMode.trash(options);\r\n    },\r\n    combineFeatures() {\r\n      currentMode.combineFeatures();\r\n    },\r\n    uncombineFeatures() {\r\n      currentMode.uncombineFeatures();\r\n    },\r\n    getMode() {\r\n      return currentModeName;\r\n    }\r\n  };\r\n\r\n  return api;\r\n}\r\n","/* eslint comma-dangle: [\"error\", \"always-multiline\"] */\r\n\r\nconst blue = '#3bb2d0';\r\nconst orange = '#fbb03b';\r\nconst white = '#fff';\r\n\r\nexport default [\r\n  // Polygons\r\n  //   Solid fill\r\n  //   Active state defines color\r\n  {\r\n    'id': 'gl-draw-polygon-fill',\r\n    'type': 'fill',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Polygon'],\r\n    ],\r\n    'paint': {\r\n      'fill-color': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], orange,\r\n        blue,\r\n      ],\r\n      'fill-opacity': 0.1,\r\n    },\r\n  },\r\n  // Lines\r\n  // Polygon\r\n  //   Matches Lines AND Polygons\r\n  //   Active state defines color\r\n  {\r\n    'id': 'gl-draw-lines',\r\n    'type': 'line',\r\n    'filter': [\r\n      'any',\r\n      ['==', '$type', 'LineString'],\r\n      ['==', '$type', 'Polygon'],\r\n    ],\r\n    'layout': {\r\n      'line-cap': 'round',\r\n      'line-join': 'round',\r\n    },\r\n    'paint': {\r\n      'line-color': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], orange,\r\n        blue,\r\n      ],\r\n      'line-dasharray': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], [0.2, 2],\r\n        [2, 0],\r\n      ],\r\n      'line-width': 2,\r\n    },\r\n  },\r\n  // Points\r\n  //   Circle with an outline\r\n  //   Active state defines size and color\r\n  {\r\n    'id': 'gl-draw-point-outer',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Point'],\r\n      ['==', 'meta', 'feature'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], 7,\r\n        5,\r\n      ],\r\n      'circle-color': white,\r\n    },\r\n  },\r\n  {\r\n    'id': 'gl-draw-point-inner',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Point'],\r\n      ['==', 'meta', 'feature'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], 5,\r\n        3,\r\n      ],\r\n      'circle-color': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], orange,\r\n        blue,\r\n      ],\r\n    },\r\n  },\r\n  // Vertex\r\n  //   Visible when editing polygons and lines\r\n  //   Similar behaviour to Points\r\n  //   Active state defines size\r\n  {\r\n    'id': 'gl-draw-vertex-outer',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Point'],\r\n      ['==', 'meta', 'vertex'],\r\n      ['!=', 'mode', 'simple_select'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], 7,\r\n        5,\r\n      ],\r\n      'circle-color': white,\r\n    },\r\n  },\r\n  {\r\n    'id': 'gl-draw-vertex-inner',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', '$type', 'Point'],\r\n      ['==', 'meta', 'vertex'],\r\n      ['!=', 'mode', 'simple_select'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': [\r\n        'case',\r\n        ['==', ['get', 'active'], 'true'], 5,\r\n        3,\r\n      ],\r\n      'circle-color': orange,\r\n    },\r\n  },\r\n  // Midpoint\r\n  //   Visible when editing polygons and lines\r\n  //   Tapping or dragging them adds a new vertex to the feature\r\n  {\r\n    'id': 'gl-draw-midpoint',\r\n    'type': 'circle',\r\n    'filter': [\r\n      'all',\r\n      ['==', 'meta', 'midpoint'],\r\n    ],\r\n    'paint': {\r\n      'circle-radius': 3,\r\n      'circle-color': orange,\r\n    },\r\n  },\r\n];\r\n","import * as Constants from '../constants.js';\r\n\r\nexport function isOfMetaType(type) {\r\n  return function(e) {\r\n    const featureTarget = e.featureTarget;\r\n    if (!featureTarget) return false;\r\n    if (!featureTarget.properties) return false;\r\n    return featureTarget.properties.meta === type;\r\n  };\r\n}\r\n\r\nexport function isShiftMousedown(e) {\r\n  if (!e.originalEvent) return false;\r\n  if (!e.originalEvent.shiftKey) return false;\r\n  return e.originalEvent.button === 0;\r\n}\r\n\r\nexport function isActiveFeature(e) {\r\n  if (!e.featureTarget) return false;\r\n  if (!e.featureTarget.properties) return false;\r\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\r\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\r\n}\r\n\r\nexport function isInactiveFeature(e) {\r\n  if (!e.featureTarget) return false;\r\n  if (!e.featureTarget.properties) return false;\r\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\r\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\r\n}\r\n\r\nexport function noTarget(e) {\r\n  return e.featureTarget === undefined;\r\n}\r\n\r\nexport function isFeature(e) {\r\n  if (!e.featureTarget) return false;\r\n  if (!e.featureTarget.properties) return false;\r\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\r\n}\r\n\r\nexport function isVertex(e) {\r\n  const featureTarget = e.featureTarget;\r\n  if (!featureTarget) return false;\r\n  if (!featureTarget.properties) return false;\r\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\r\n}\r\n\r\nexport function isShiftDown(e) {\r\n  if (!e.originalEvent) return false;\r\n  return e.originalEvent.shiftKey === true;\r\n}\r\n\r\nexport function isEscapeKey(e) {\r\n  return e.keyCode === 27;\r\n}\r\n\r\nexport function isEnterKey(e) {\r\n  return e.keyCode === 13;\r\n}\r\n\r\nexport function isTrue() {\r\n  return true;\r\n}\r\n","/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class\n * @param {number} x the x-coordinate. This could be longitude or screen pixels, or any other sort of unit.\n * @param {number} y the y-coordinate. This could be latitude or screen pixels, or any other sort of unit.\n *\n * @example\n * const point = new Point(-77, 38);\n */\nexport default function Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    mult(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    div(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround(a, p) { return this.clone()._rotateAround(a, p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {[number, number, number, number]} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round() { return this.clone()._round(); },\n\n    /**\n     * Return the magnitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {number} magnitude\n     */\n    mag() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    dist(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    distSqr(p) {\n        const dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {number} angle\n     */\n    angle() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleTo(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleWith(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /**\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {number} x the x-coordinate\n     * @param {number} y the y-coordinate\n     * @return {number} the angle in radians\n     */\n    angleWithSep(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    /** @param {[number, number, number, number]} m */\n    _matMult(m) {\n        const x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _add(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _sub(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    /** @param {number} k */\n    _mult(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    /** @param {number} k */\n    _div(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _multByPoint(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _divByPoint(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp() {\n        const y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    /** @param {number} angle */\n    _rotate(angle) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /**\n     * @param {number} angle\n     * @param {Point} p\n     */\n    _rotateAround(angle, p) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    },\n\n    constructor: Point\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, return it unchanged.\n * @param {Point | [number, number] | {x: number, y: number}} p input value\n * @return {Point} constructed point.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (p) {\n    if (p instanceof Point) {\n        return /** @type {Point} */ (p);\n    }\n    if (Array.isArray(p)) {\n        return new Point(+p[0], +p[1]);\n    }\n    if (p.x !== undefined && p.y !== undefined) {\n        return new Point(+p.x, +p.y);\n    }\n    throw new Error('Expected [x, y] or {x, y} point format');\n};\n","import Point from '@mapbox/point-geometry';\r\n\r\n/**\r\n * Returns a Point representing a mouse event's position\r\n * relative to a containing element.\r\n *\r\n * @param {MouseEvent} mouseEvent\r\n * @param {Node} container\r\n * @returns {Point}\r\n */\r\nfunction mouseEventPoint(mouseEvent, container) {\r\n  const rect = container.getBoundingClientRect();\r\n  return new Point(\r\n    mouseEvent.clientX - rect.left - (container.clientLeft || 0),\r\n    mouseEvent.clientY - rect.top - (container.clientTop || 0)\r\n  );\r\n}\r\n\r\nexport default mouseEventPoint;\r\n","import * as Constants from '../constants.js';\r\n\r\n/**\r\n * Returns GeoJSON for a Point representing the\r\n * vertex of another feature.\r\n *\r\n * @param {string} parentId\r\n * @param {Array<number>} coordinates\r\n * @param {string} path - Dot-separated numbers indicating exactly\r\n *   where the point exists within its parent feature's coordinates.\r\n * @param {boolean} selected\r\n * @return {GeoJSON} Point\r\n */\r\n\r\nexport default function(parentId, coordinates, path, selected) {\r\n  return {\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {\r\n      meta: Constants.meta.VERTEX,\r\n      parent: parentId,\r\n      coord_path: path,\r\n      active: (selected) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\r\n    },\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POINT,\r\n      coordinates\r\n    }\r\n  };\r\n}\r\n","import * as Constants from '../constants.js';\r\n\r\nexport default function(parent, startVertex, endVertex) {\r\n  const startCoord = startVertex.geometry.coordinates;\r\n  const endCoord = endVertex.geometry.coordinates;\r\n\r\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\r\n  // so run away\r\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\r\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\r\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\r\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\r\n    return null;\r\n  }\r\n\r\n  const mid = {\r\n    lng: (startCoord[0] + endCoord[0]) / 2,\r\n    lat: (startCoord[1] + endCoord[1]) / 2\r\n  };\r\n\r\n  return {\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {\r\n      meta: Constants.meta.MIDPOINT,\r\n      parent,\r\n      lng: mid.lng,\r\n      lat: mid.lat,\r\n      coord_path: endVertex.properties.coord_path\r\n    },\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POINT,\r\n      coordinates: [mid.lng, mid.lat]\r\n    }\r\n  };\r\n}\r\n","import createVertex from './create_vertex.js';\r\nimport createMidpoint from './create_midpoint.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\r\n  const { type, coordinates } = geojson.geometry;\r\n  const featureId = geojson.properties && geojson.properties.id;\r\n\r\n  let supplementaryPoints = [];\r\n\r\n  if (type === Constants.geojsonTypes.POINT) {\r\n    // For points, just create a vertex\r\n    supplementaryPoints.push(createVertex(featureId, coordinates, basePath, isSelectedPath(basePath)));\r\n  } else if (type === Constants.geojsonTypes.POLYGON) {\r\n    // Cycle through a Polygon's rings and\r\n    // process each line\r\n    coordinates.forEach((line, lineIndex) => {\r\n      processLine(line, (basePath !== null) ? `${basePath}.${lineIndex}` : String(lineIndex));\r\n    });\r\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\r\n    processLine(coordinates, basePath);\r\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\r\n    processMultiGeometry();\r\n  }\r\n\r\n  function processLine(line, lineBasePath) {\r\n    let firstPointString = '';\r\n    let lastVertex = null;\r\n    line.forEach((point, pointIndex) => {\r\n      const pointPath = (lineBasePath !== undefined && lineBasePath !== null) ? `${lineBasePath}.${pointIndex}` : String(pointIndex);\r\n      const vertex = createVertex(featureId, point, pointPath, isSelectedPath(pointPath));\r\n\r\n      // If we're creating midpoints, check if there was a\r\n      // vertex before this one. If so, add a midpoint\r\n      // between that vertex and this one.\r\n      if (options.midpoints && lastVertex) {\r\n        const midpoint = createMidpoint(featureId, lastVertex, vertex);\r\n        if (midpoint) {\r\n          supplementaryPoints.push(midpoint);\r\n        }\r\n      }\r\n      lastVertex = vertex;\r\n\r\n      // A Polygon line's last point is the same as the first point. If we're on the last\r\n      // point, we want to draw a midpoint before it but not another vertex on it\r\n      // (since we already a vertex there, from the first point).\r\n      const stringifiedPoint = JSON.stringify(point);\r\n      if (firstPointString !== stringifiedPoint) {\r\n        supplementaryPoints.push(vertex);\r\n      }\r\n      if (pointIndex === 0) {\r\n        firstPointString = stringifiedPoint;\r\n      }\r\n    });\r\n  }\r\n\r\n  function isSelectedPath(path) {\r\n    if (!options.selectedPaths) return false;\r\n    return options.selectedPaths.indexOf(path) !== -1;\r\n  }\r\n\r\n  // Split a multi-geometry into constituent\r\n  // geometries, and accumulate the supplementary points\r\n  // for each of those constituents\r\n  function processMultiGeometry() {\r\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, '');\r\n    coordinates.forEach((subCoordinates, index) => {\r\n      const subFeature = {\r\n        type: Constants.geojsonTypes.FEATURE,\r\n        properties: geojson.properties,\r\n        geometry: {\r\n          type: subType,\r\n          coordinates: subCoordinates\r\n        }\r\n      };\r\n      supplementaryPoints = supplementaryPoints.concat(createSupplementaryPoints(subFeature, options, index));\r\n    });\r\n  }\r\n\r\n  return supplementaryPoints;\r\n}\r\n\r\nexport default createSupplementaryPoints;\r\n","export default {\r\n  enable(ctx) {\r\n    setTimeout(() => {\r\n      // First check we've got a map and some context.\r\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\r\n      // Now check initial state wasn't false (we leave it disabled if so)\r\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\r\n      ctx.map.doubleClickZoom.enable();\r\n    }, 0);\r\n  },\r\n  disable(ctx) {\r\n    setTimeout(() => {\r\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\r\n      // Always disable here, as it's necessary in some cases.\r\n      ctx.map.doubleClickZoom.disable();\r\n    }, 0);\r\n  }\r\n};\r\n","import * as Constants from '../constants.js';\r\n\r\nconst {\r\n  LAT_MIN,\r\n  LAT_MAX,\r\n  LAT_RENDERED_MIN,\r\n  LAT_RENDERED_MAX,\r\n  LNG_MIN,\r\n  LNG_MAX,\r\n} = Constants;\r\nfunction extent(feature) {\r\n  const depth = {\r\n    Point: 0,\r\n    LineString: 1,\r\n    Polygon: 2,\r\n    MultiPoint: 1,\r\n    MultiLineString: 2,\r\n    MultiPolygon: 3,\r\n  }[feature.geometry.type];\r\n\r\n  const coords = [feature.geometry.coordinates].flat(depth);\r\n  const lngs = coords.map(coord => coord[0]);\r\n  const lats = coords.map(coord => coord[1]);\r\n  const min = vals => Math.min.apply(null, vals);\r\n  const max = vals => Math.max.apply(null, vals);\r\n  return [min(lngs), min(lats), max(lngs), max(lats)];\r\n}\r\n\r\n// Ensure that we do not drag north-south far enough for\r\n// - any part of any feature to exceed the poles\r\n// - any feature to be completely lost in the space between the projection's\r\n//   edge and the poles, such that it couldn't be re-selected and moved back\r\nexport default function(geojsonFeatures, delta) {\r\n  // \"inner edge\" = a feature's latitude closest to the equator\r\n  let northInnerEdge = LAT_MIN;\r\n  let southInnerEdge = LAT_MAX;\r\n  // \"outer edge\" = a feature's latitude furthest from the equator\r\n  let northOuterEdge = LAT_MIN;\r\n  let southOuterEdge = LAT_MAX;\r\n\r\n  let westEdge = LNG_MAX;\r\n  let eastEdge = LNG_MIN;\r\n\r\n  geojsonFeatures.forEach((feature) => {\r\n    const bounds = extent(feature);\r\n    const featureSouthEdge = bounds[1];\r\n    const featureNorthEdge = bounds[3];\r\n    const featureWestEdge = bounds[0];\r\n    const featureEastEdge = bounds[2];\r\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\r\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\r\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\r\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\r\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\r\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\r\n  });\r\n\r\n\r\n  // These changes are not mutually exclusive: we might hit the inner\r\n  // edge but also have hit the outer edge and therefore need\r\n  // another readjustment\r\n  const constrainedDelta = delta;\r\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\r\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\r\n  }\r\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\r\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\r\n  }\r\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\r\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\r\n  }\r\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\r\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\r\n  }\r\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\r\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\r\n  }\r\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\r\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\r\n  }\r\n\r\n  return constrainedDelta;\r\n}\r\n","import constrainFeatureMovement from './constrain_feature_movement.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nexport default function(features, delta) {\r\n  const constrainedDelta = constrainFeatureMovement(features.map(feature => feature.toGeoJSON()), delta);\r\n\r\n  features.forEach((feature) => {\r\n    const currentCoordinates = feature.getCoordinates();\r\n\r\n    const moveCoordinate = (coord) => {\r\n      const point = {\r\n        lng: coord[0] + constrainedDelta.lng,\r\n        lat: coord[1] + constrainedDelta.lat\r\n      };\r\n      return [point.lng, point.lat];\r\n    };\r\n    const moveRing = ring => ring.map(coord => moveCoordinate(coord));\r\n    const moveMultiPolygon = multi => multi.map(ring => moveRing(ring));\r\n\r\n    let nextCoordinates;\r\n    if (feature.type === Constants.geojsonTypes.POINT) {\r\n      nextCoordinates = moveCoordinate(currentCoordinates);\r\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\r\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\r\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\r\n      nextCoordinates = currentCoordinates.map(moveRing);\r\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\r\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\r\n    }\r\n\r\n    feature.incomingCoords(nextCoordinates);\r\n  });\r\n}\r\n","import * as CommonSelectors from '../lib/common_selectors.js';\r\nimport mouseEventPoint from '../lib/mouse_event_point.js';\r\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\r\nimport StringSet from '../lib/string_set.js';\r\nimport doubleClickZoom from '../lib/double_click_zoom.js';\r\nimport moveFeatures from '../lib/move_features.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nconst SimpleSelect = {};\r\n\r\nSimpleSelect.onSetup = function(opts) {\r\n  // turn the opts into state.\r\n  const state = {\r\n    dragMoveLocation: null,\r\n    boxSelectStartLocation: null,\r\n    boxSelectElement: undefined,\r\n    boxSelecting: false,\r\n    canBoxSelect: false,\r\n    dragMoving: false,\r\n    canDragMove: false,\r\n    initialDragPanState: this.map.dragPan.isEnabled(),\r\n    initiallySelectedFeatureIds: opts.featureIds || []\r\n  };\r\n\r\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => this.getFeature(id) !== undefined));\r\n  this.fireActionable();\r\n\r\n  this.setActionableState({\r\n    combineFeatures: true,\r\n    uncombineFeatures: true,\r\n    trash: true\r\n  });\r\n\r\n  return state;\r\n};\r\n\r\nSimpleSelect.fireUpdate = function() {\r\n  this.fire(Constants.events.UPDATE, {\r\n    action: Constants.updateActions.MOVE,\r\n    features: this.getSelected().map(f => f.toGeoJSON())\r\n  });\r\n};\r\n\r\nSimpleSelect.fireActionable = function() {\r\n  const selectedFeatures = this.getSelected();\r\n\r\n  const multiFeatures = selectedFeatures.filter(\r\n    feature => this.isInstanceOf('MultiFeature', feature)\r\n  );\r\n\r\n  let combineFeatures = false;\r\n\r\n  if (selectedFeatures.length > 1) {\r\n    combineFeatures = true;\r\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\r\n    selectedFeatures.forEach((feature) => {\r\n      if (feature.type.replace('Multi', '') !== featureType) {\r\n        combineFeatures = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  const uncombineFeatures = multiFeatures.length > 0;\r\n  const trash = selectedFeatures.length > 0;\r\n\r\n  this.setActionableState({\r\n    combineFeatures, uncombineFeatures, trash\r\n  });\r\n};\r\n\r\nSimpleSelect.getUniqueIds = function(allFeatures) {\r\n  if (!allFeatures.length) return [];\r\n  const ids = allFeatures.map(s => s.properties.id)\r\n    .filter(id => id !== undefined)\r\n    .reduce((memo, id) => {\r\n      memo.add(id);\r\n      return memo;\r\n    }, new StringSet());\r\n\r\n  return ids.values();\r\n};\r\n\r\nSimpleSelect.stopExtendedInteractions = function(state) {\r\n  if (state.boxSelectElement) {\r\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\r\n    state.boxSelectElement = null;\r\n  }\r\n\r\n  if ((state.canDragMove || state.canBoxSelect) && state.initialDragPanState === true) {\r\n    this.map.dragPan.enable();\r\n  }\r\n\r\n  state.boxSelecting = false;\r\n  state.canBoxSelect = false;\r\n  state.dragMoving = false;\r\n  state.canDragMove = false;\r\n};\r\n\r\nSimpleSelect.onStop = function() {\r\n  doubleClickZoom.enable(this);\r\n};\r\n\r\nSimpleSelect.onMouseMove = function(state, e) {\r\n  const isFeature = CommonSelectors.isFeature(e);\r\n  if (isFeature && state.dragMoving) this.fireUpdate();\r\n\r\n  // On mousemove that is not a drag, stop extended interactions.\r\n  // This is useful if you drag off the canvas, release the button,\r\n  // then move the mouse back over the canvas --- we don't allow the\r\n  // interaction to continue then, but we do let it continue if you held\r\n  // the mouse button that whole time\r\n  this.stopExtendedInteractions(state);\r\n\r\n  // Skip render\r\n  return true;\r\n};\r\n\r\nSimpleSelect.onMouseOut = function(state) {\r\n  // As soon as you mouse leaves the canvas, update the feature\r\n  if (state.dragMoving) return this.fireUpdate();\r\n\r\n  // Skip render\r\n  return true;\r\n};\r\n\r\nSimpleSelect.onTap = SimpleSelect.onClick = function(state, e) {\r\n  // Click (with or without shift) on no feature\r\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\r\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\r\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\r\n};\r\n\r\nSimpleSelect.clickAnywhere = function (state) {\r\n  // Clear the re-render selection\r\n  const wasSelected = this.getSelectedIds();\r\n  if (wasSelected.length) {\r\n    this.clearSelectedFeatures();\r\n    wasSelected.forEach(id => this.doRender(id));\r\n  }\r\n  doubleClickZoom.enable(this);\r\n  this.stopExtendedInteractions(state);\r\n};\r\n\r\nSimpleSelect.clickOnVertex = function(state, e) {\r\n  // Enter direct select mode\r\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\r\n    featureId: e.featureTarget.properties.parent,\r\n    coordPath: e.featureTarget.properties.coord_path,\r\n    startPos: e.lngLat\r\n  });\r\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n};\r\n\r\nSimpleSelect.startOnActiveFeature = function(state, e) {\r\n  // Stop any already-underway extended interactions\r\n  this.stopExtendedInteractions(state);\r\n\r\n  // Disable map.dragPan immediately so it can't start\r\n  this.map.dragPan.disable();\r\n\r\n  // Re-render it and enable drag move\r\n  this.doRender(e.featureTarget.properties.id);\r\n\r\n  // Set up the state for drag moving\r\n  state.canDragMove = true;\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nSimpleSelect.clickOnFeature = function(state, e) {\r\n  // Stop everything\r\n  doubleClickZoom.disable(this);\r\n  this.stopExtendedInteractions(state);\r\n\r\n  const isShiftClick = CommonSelectors.isShiftDown(e);\r\n  const selectedFeatureIds = this.getSelectedIds();\r\n  const featureId = e.featureTarget.properties.id;\r\n  const isFeatureSelected = this.isSelected(featureId);\r\n\r\n  // Click (without shift) on any selected feature but a point\r\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\r\n    // Enter direct select mode\r\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\r\n      featureId\r\n    });\r\n  }\r\n\r\n  // Shift-click on a selected feature\r\n  if (isFeatureSelected && isShiftClick) {\r\n    // Deselect it\r\n    this.deselect(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\r\n    if (selectedFeatureIds.length === 1) {\r\n      doubleClickZoom.enable(this);\r\n    }\r\n  // Shift-click on an unselected feature\r\n  } else if (!isFeatureSelected && isShiftClick) {\r\n    // Add it to the selection\r\n    this.select(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  // Click (without shift) on an unselected feature\r\n  } else if (!isFeatureSelected && !isShiftClick) {\r\n    // Make it the only selected feature\r\n    selectedFeatureIds.forEach(id => this.doRender(id));\r\n    this.setSelected(featureId);\r\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  }\r\n\r\n  // No matter what, re-render the clicked feature\r\n  this.doRender(featureId);\r\n};\r\n\r\nSimpleSelect.onMouseDown = function(state, e) {\r\n  state.initialDragPanState = this.map.dragPan.isEnabled();\r\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\r\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\r\n};\r\n\r\nSimpleSelect.startBoxSelect = function(state, e) {\r\n  this.stopExtendedInteractions(state);\r\n  this.map.dragPan.disable();\r\n  // Enable box select\r\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\r\n  state.canBoxSelect = true;\r\n};\r\n\r\nSimpleSelect.onTouchStart = function(state, e) {\r\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\r\n};\r\n\r\nSimpleSelect.onDrag = function(state, e) {\r\n  if (state.canDragMove) return this.dragMove(state, e);\r\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\r\n};\r\n\r\nSimpleSelect.whileBoxSelect = function(state, e) {\r\n  state.boxSelecting = true;\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n\r\n  // Create the box node if it doesn't exist\r\n  if (!state.boxSelectElement) {\r\n    state.boxSelectElement = document.createElement('div');\r\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\r\n    this.map.getContainer().appendChild(state.boxSelectElement);\r\n  }\r\n\r\n  // Adjust the box node's width and xy position\r\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\r\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\r\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\r\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\r\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\r\n  const translateValue = `translate(${minX}px, ${minY}px)`;\r\n  state.boxSelectElement.style.transform = translateValue;\r\n  state.boxSelectElement.style.WebkitTransform = translateValue;\r\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\r\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\r\n};\r\n\r\nSimpleSelect.dragMove = function(state, e) {\r\n  // Dragging when drag move is enabled\r\n  state.dragMoving = true;\r\n  e.originalEvent.stopPropagation();\r\n\r\n  const delta = {\r\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\r\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\r\n  };\r\n\r\n  moveFeatures(this.getSelected(), delta);\r\n\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nSimpleSelect.onTouchEnd = SimpleSelect.onMouseUp = function(state, e) {\r\n  // End any extended interactions\r\n  if (state.dragMoving) {\r\n    this.fireUpdate();\r\n  } else if (state.boxSelecting) {\r\n    const bbox = [\r\n      state.boxSelectStartLocation,\r\n      mouseEventPoint(e.originalEvent, this.map.getContainer())\r\n    ];\r\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\r\n    const idsToSelect = this.getUniqueIds(featuresInBox)\r\n      .filter(id => !this.isSelected(id));\r\n\r\n    if (idsToSelect.length) {\r\n      this.select(idsToSelect);\r\n      idsToSelect.forEach(id => this.doRender(id));\r\n      this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n    }\r\n  }\r\n  this.stopExtendedInteractions(state);\r\n};\r\n\r\nSimpleSelect.toDisplayFeatures = function(state, geojson, display) {\r\n  geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\r\n    Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  display(geojson);\r\n  this.fireActionable();\r\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\r\n    geojson.geometry.type === Constants.geojsonTypes.POINT) return;\r\n  createSupplementaryPoints(geojson).forEach(display);\r\n};\r\n\r\nSimpleSelect.onTrash = function() {\r\n  this.deleteFeature(this.getSelectedIds());\r\n  this.fireActionable();\r\n};\r\n\r\nSimpleSelect.onCombineFeatures = function() {\r\n  const selectedFeatures = this.getSelected();\r\n\r\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\r\n\r\n  const coordinates = [], featuresCombined = [];\r\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\r\n\r\n  for (let i = 0; i < selectedFeatures.length; i++) {\r\n    const feature = selectedFeatures[i];\r\n\r\n    if (feature.type.replace('Multi', '') !== featureType) {\r\n      return;\r\n    }\r\n    if (feature.type.includes('Multi')) {\r\n      feature.getCoordinates().forEach((subcoords) => {\r\n        coordinates.push(subcoords);\r\n      });\r\n    } else {\r\n      coordinates.push(feature.getCoordinates());\r\n    }\r\n\r\n    featuresCombined.push(feature.toGeoJSON());\r\n  }\r\n\r\n  if (featuresCombined.length > 1) {\r\n    const multiFeature = this.newFeature({\r\n      type: Constants.geojsonTypes.FEATURE,\r\n      properties: featuresCombined[0].properties,\r\n      geometry: {\r\n        type: `Multi${featureType}`,\r\n        coordinates\r\n      }\r\n    });\r\n\r\n    this.addFeature(multiFeature);\r\n    this.deleteFeature(this.getSelectedIds(), { silent: true });\r\n    this.setSelected([multiFeature.id]);\r\n\r\n    this.fire(Constants.events.COMBINE_FEATURES, {\r\n      createdFeatures: [multiFeature.toGeoJSON()],\r\n      deletedFeatures: featuresCombined\r\n    });\r\n  }\r\n  this.fireActionable();\r\n};\r\n\r\nSimpleSelect.onUncombineFeatures = function() {\r\n  const selectedFeatures = this.getSelected();\r\n  if (selectedFeatures.length === 0) return;\r\n\r\n  const createdFeatures = [];\r\n  const featuresUncombined = [];\r\n\r\n  for (let i = 0; i < selectedFeatures.length; i++) {\r\n    const feature = selectedFeatures[i];\r\n\r\n    if (this.isInstanceOf('MultiFeature', feature)) {\r\n      feature.getFeatures().forEach((subFeature) => {\r\n        this.addFeature(subFeature);\r\n        subFeature.properties = feature.properties;\r\n        createdFeatures.push(subFeature.toGeoJSON());\r\n        this.select([subFeature.id]);\r\n      });\r\n      this.deleteFeature(feature.id, { silent: true });\r\n      featuresUncombined.push(feature.toGeoJSON());\r\n    }\r\n  }\r\n\r\n  if (createdFeatures.length > 1) {\r\n    this.fire(Constants.events.UNCOMBINE_FEATURES, {\r\n      createdFeatures,\r\n      deletedFeatures: featuresUncombined\r\n    });\r\n  }\r\n  this.fireActionable();\r\n};\r\n\r\nexport default SimpleSelect;\r\n","import { noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown } from '../lib/common_selectors.js';\r\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\r\nimport constrainFeatureMovement from '../lib/constrain_feature_movement.js';\r\nimport doubleClickZoom from '../lib/double_click_zoom.js';\r\nimport * as Constants from '../constants.js';\r\nimport moveFeatures from '../lib/move_features.js';\r\n\r\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\r\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\r\n\r\nconst DirectSelect = {};\r\n\r\n// INTERNAL FUCNTIONS\r\n\r\nDirectSelect.fireUpdate = function() {\r\n  this.fire(Constants.events.UPDATE, {\r\n    action: Constants.updateActions.CHANGE_COORDINATES,\r\n    features: this.getSelected().map(f => f.toGeoJSON())\r\n  });\r\n};\r\n\r\nDirectSelect.fireActionable = function(state) {\r\n  this.setActionableState({\r\n    combineFeatures: false,\r\n    uncombineFeatures: false,\r\n    trash: state.selectedCoordPaths.length > 0\r\n  });\r\n};\r\n\r\nDirectSelect.startDragging = function(state, e) {\r\n  if (state.initialDragPanState == null) {\r\n    state.initialDragPanState = this.map.dragPan.isEnabled();\r\n  }\r\n\r\n  this.map.dragPan.disable();\r\n  state.canDragMove = true;\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nDirectSelect.stopDragging = function(state) {\r\n  if (state.canDragMove && state.initialDragPanState === true) {\r\n    this.map.dragPan.enable();\r\n  }\r\n\r\n  state.initialDragPanState = null;\r\n  state.dragMoving = false;\r\n  state.canDragMove = false;\r\n  state.dragMoveLocation = null;\r\n};\r\n\r\nDirectSelect.onVertex = function (state, e) {\r\n  this.startDragging(state, e);\r\n  const about = e.featureTarget.properties;\r\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\r\n  if (!isShiftDown(e) && selectedIndex === -1) {\r\n    state.selectedCoordPaths = [about.coord_path];\r\n  } else if (isShiftDown(e) && selectedIndex === -1) {\r\n    state.selectedCoordPaths.push(about.coord_path);\r\n  }\r\n\r\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\r\n  this.setSelectedCoordinates(selectedCoordinates);\r\n};\r\n\r\nDirectSelect.onMidpoint = function(state, e) {\r\n  this.startDragging(state, e);\r\n  const about = e.featureTarget.properties;\r\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\r\n  this.fireUpdate();\r\n  state.selectedCoordPaths = [about.coord_path];\r\n};\r\n\r\nDirectSelect.pathsToCoordinates = function(featureId, paths) {\r\n  return paths.map(coord_path => ({ feature_id: featureId, coord_path }));\r\n};\r\n\r\nDirectSelect.onFeature = function(state, e) {\r\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);\r\n  else this.stopDragging(state);\r\n};\r\n\r\nDirectSelect.dragFeature = function(state, e, delta) {\r\n  moveFeatures(this.getSelected(), delta);\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nDirectSelect.dragVertex = function(state, e, delta) {\r\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\r\n  const selectedCoordPoints = selectedCoords.map(coords => ({\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {},\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POINT,\r\n      coordinates: coords\r\n    }\r\n  }));\r\n\r\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\r\n  for (let i = 0; i < selectedCoords.length; i++) {\r\n    const coord = selectedCoords[i];\r\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\r\n  }\r\n};\r\n\r\nDirectSelect.clickNoTarget = function () {\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDirectSelect.clickInactive = function () {\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDirectSelect.clickActiveFeature = function (state) {\r\n  state.selectedCoordPaths = [];\r\n  this.clearSelectedCoordinates();\r\n  state.feature.changed();\r\n};\r\n\r\n// EXTERNAL FUNCTIONS\r\n\r\nDirectSelect.onSetup = function(opts) {\r\n  const featureId = opts.featureId;\r\n  const feature = this.getFeature(featureId);\r\n\r\n  if (!feature) {\r\n    throw new Error('You must provide a featureId to enter direct_select mode');\r\n  }\r\n\r\n  if (feature.type === Constants.geojsonTypes.POINT) {\r\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\r\n  }\r\n\r\n  const state = {\r\n    featureId,\r\n    feature,\r\n    dragMoveLocation: opts.startPos || null,\r\n    dragMoving: false,\r\n    canDragMove: false,\r\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : [],\r\n  };\r\n\r\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\r\n  this.setSelected(featureId);\r\n  doubleClickZoom.disable(this);\r\n\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return state;\r\n};\r\n\r\nDirectSelect.onStop = function() {\r\n  doubleClickZoom.enable(this);\r\n  this.clearSelectedCoordinates();\r\n};\r\n\r\nDirectSelect.toDisplayFeatures = function(state, geojson, push) {\r\n  if (state.featureId === geojson.properties.id) {\r\n    geojson.properties.active = Constants.activeStates.ACTIVE;\r\n    push(geojson);\r\n    createSupplementaryPoints(geojson, {\r\n      map: this.map,\r\n      midpoints: true,\r\n      selectedPaths: state.selectedCoordPaths\r\n    }).forEach(push);\r\n  } else {\r\n    geojson.properties.active = Constants.activeStates.INACTIVE;\r\n    push(geojson);\r\n  }\r\n  this.fireActionable(state);\r\n};\r\n\r\nDirectSelect.onTrash = function(state) {\r\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\r\n  // in reverse order so that we can remove by index safely.\r\n  state.selectedCoordPaths\r\n    .sort((a, b) => b.localeCompare(a, 'en', { numeric: true }))\r\n    .forEach(id => state.feature.removeCoordinate(id));\r\n  this.fireUpdate();\r\n  state.selectedCoordPaths = [];\r\n  this.clearSelectedCoordinates();\r\n  this.fireActionable(state);\r\n  if (state.feature.isValid() === false) {\r\n    this.deleteFeature([state.featureId]);\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\r\n  }\r\n};\r\n\r\nDirectSelect.onMouseMove = function(state, e) {\r\n  // On mousemove that is not a drag, stop vertex movement.\r\n  const isFeature = isActiveFeature(e);\r\n  const onVertex = isVertex(e);\r\n  const isMidPoint = isMidpoint(e);\r\n  const noCoords = state.selectedCoordPaths.length === 0;\r\n  if (isFeature && noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  else if (onVertex && !noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  else this.updateUIClasses({ mouse: Constants.cursors.NONE });\r\n\r\n  const isDraggableItem = onVertex || isFeature || isMidPoint;\r\n  if (isDraggableItem && state.dragMoving) this.fireUpdate();\r\n\r\n  this.stopDragging(state);\r\n\r\n  // Skip render\r\n  return true;\r\n};\r\n\r\nDirectSelect.onMouseOut = function(state) {\r\n  // As soon as you mouse leaves the canvas, update the feature\r\n  if (state.dragMoving) this.fireUpdate();\r\n\r\n  // Skip render\r\n  return true;\r\n};\r\n\r\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function(state, e) {\r\n  if (isVertex(e)) return this.onVertex(state, e);\r\n  if (isActiveFeature(e)) return this.onFeature(state, e);\r\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\r\n};\r\n\r\nDirectSelect.onDrag = function(state, e) {\r\n  if (state.canDragMove !== true) return;\r\n  state.dragMoving = true;\r\n  e.originalEvent.stopPropagation();\r\n\r\n  const delta = {\r\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\r\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\r\n  };\r\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);\r\n  else this.dragFeature(state, e, delta);\r\n\r\n  state.dragMoveLocation = e.lngLat;\r\n};\r\n\r\nDirectSelect.onClick = function(state, e) {\r\n  if (noTarget(e)) return this.clickNoTarget(state, e);\r\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\r\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\r\n  this.stopDragging(state);\r\n};\r\n\r\nDirectSelect.onTap = function(state, e) {\r\n  if (noTarget(e)) return this.clickNoTarget(state, e);\r\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\r\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\r\n};\r\n\r\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function(state) {\r\n  if (state.dragMoving) {\r\n    this.fireUpdate();\r\n  }\r\n  this.stopDragging(state);\r\n};\r\n\r\nexport default DirectSelect;\r\n\r\n","import * as CommonSelectors from '../lib/common_selectors.js';\r\nimport * as Constants from '../constants.js';\r\n\r\nconst DrawPoint = {};\r\n\r\nDrawPoint.onSetup = function() {\r\n  const point = this.newFeature({\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {},\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POINT,\r\n      coordinates: []\r\n    }\r\n  });\r\n\r\n  this.addFeature(point);\r\n\r\n  this.clearSelectedFeatures();\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  this.activateUIButton(Constants.types.POINT);\r\n\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return { point };\r\n};\r\n\r\nDrawPoint.stopDrawingAndRemove = function(state) {\r\n  this.deleteFeature([state.point.id], { silent: true });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDrawPoint.onTap = DrawPoint.onClick = function(state, e) {\r\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\r\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\r\n  this.fire(Constants.events.CREATE, {\r\n    features: [state.point.toGeoJSON()]\r\n  });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.point.id] });\r\n};\r\n\r\nDrawPoint.onStop = function(state) {\r\n  this.activateUIButton();\r\n  if (!state.point.getCoordinate().length) {\r\n    this.deleteFeature([state.point.id], { silent: true });\r\n  }\r\n};\r\n\r\nDrawPoint.toDisplayFeatures = function(state, geojson, display) {\r\n  // Never render the point we're drawing\r\n  const isActivePoint = geojson.properties.id === state.point.id;\r\n  geojson.properties.active = (isActivePoint) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  if (!isActivePoint) return display(geojson);\r\n};\r\n\r\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\r\n\r\nDrawPoint.onKeyUp = function(state, e) {\r\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\r\n    return this.stopDrawingAndRemove(state, e);\r\n  }\r\n};\r\n\r\nexport default DrawPoint;\r\n","function isEventAtCoordinates(event, coordinates) {\r\n  if (!event.lngLat) return false;\r\n  return event.lngLat.lng === coordinates[0] && event.lngLat.lat === coordinates[1];\r\n}\r\n\r\nexport default isEventAtCoordinates;\r\n","import * as CommonSelectors from '../lib/common_selectors.js';\r\nimport doubleClickZoom from '../lib/double_click_zoom.js';\r\nimport * as Constants from '../constants.js';\r\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\r\nimport createVertex from '../lib/create_vertex.js';\r\n\r\nconst DrawPolygon = {};\r\n\r\nDrawPolygon.onSetup = function() {\r\n  const polygon = this.newFeature({\r\n    type: Constants.geojsonTypes.FEATURE,\r\n    properties: {},\r\n    geometry: {\r\n      type: Constants.geojsonTypes.POLYGON,\r\n      coordinates: [[]]\r\n    }\r\n  });\r\n\r\n  this.addFeature(polygon);\r\n\r\n  this.clearSelectedFeatures();\r\n  doubleClickZoom.disable(this);\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  this.activateUIButton(Constants.types.POLYGON);\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return {\r\n    polygon,\r\n    currentVertexPosition: 0\r\n  };\r\n};\r\n\r\nDrawPolygon.clickAnywhere = function(state, e) {\r\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.polygon.coordinates[0][state.currentVertexPosition - 1])) {\r\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\r\n  }\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\r\n  state.currentVertexPosition++;\r\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\r\n};\r\n\r\nDrawPolygon.clickOnVertex = function(state) {\r\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\r\n};\r\n\r\nDrawPolygon.onMouseMove = function(state, e) {\r\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\r\n  if (CommonSelectors.isVertex(e)) {\r\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\r\n  }\r\n};\r\n\r\nDrawPolygon.onTap = DrawPolygon.onClick = function(state, e) {\r\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\r\n  return this.clickAnywhere(state, e);\r\n};\r\n\r\nDrawPolygon.onKeyUp = function(state, e) {\r\n  if (CommonSelectors.isEscapeKey(e)) {\r\n    this.deleteFeature([state.polygon.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n  } else if (CommonSelectors.isEnterKey(e)) {\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\r\n  }\r\n};\r\n\r\nDrawPolygon.onStop = function(state) {\r\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\r\n  doubleClickZoom.enable(this);\r\n  this.activateUIButton();\r\n\r\n  // check to see if we've deleted this feature\r\n  if (this.getFeature(state.polygon.id) === undefined) return;\r\n\r\n  //remove last added coordinate\r\n  state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`);\r\n  if (state.polygon.isValid()) {\r\n    this.fire(Constants.events.CREATE, {\r\n      features: [state.polygon.toGeoJSON()]\r\n    });\r\n  } else {\r\n    this.deleteFeature([state.polygon.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\r\n  }\r\n};\r\n\r\nDrawPolygon.toDisplayFeatures = function(state, geojson, display) {\r\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\r\n  geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  if (!isActivePolygon) return display(geojson);\r\n\r\n  // Don't render a polygon until it has two positions\r\n  // (and a 3rd which is just the first repeated)\r\n  if (geojson.geometry.coordinates.length === 0) return;\r\n\r\n  const coordinateCount = geojson.geometry.coordinates[0].length;\r\n  // 2 coordinates after selecting a draw type\r\n  // 3 after creating the first point\r\n  if (coordinateCount < 3) {\r\n    return;\r\n  }\r\n  geojson.properties.meta = Constants.meta.FEATURE;\r\n  display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][0], '0.0', false));\r\n  if (coordinateCount > 3) {\r\n    // Add a start position marker to the map, clicking on this will finish the feature\r\n    // This should only be shown when we're in a valid spot\r\n    const endPos = geojson.geometry.coordinates[0].length - 3;\r\n    display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][endPos], `0.${endPos}`, false));\r\n  }\r\n  if (coordinateCount <= 4) {\r\n    // If we've only drawn two positions (plus the closer),\r\n    // make a LineString instead of a Polygon\r\n    const lineCoordinates = [\r\n      [geojson.geometry.coordinates[0][0][0], geojson.geometry.coordinates[0][0][1]], [geojson.geometry.coordinates[0][1][0], geojson.geometry.coordinates[0][1][1]]\r\n    ];\r\n    // create an initial vertex so that we can track the first point on mobile devices\r\n    display({\r\n      type: Constants.geojsonTypes.FEATURE,\r\n      properties: geojson.properties,\r\n      geometry: {\r\n        coordinates: lineCoordinates,\r\n        type: Constants.geojsonTypes.LINE_STRING\r\n      }\r\n    });\r\n    if (coordinateCount === 3) {\r\n      return;\r\n    }\r\n  }\r\n  // render the Polygon\r\n  return display(geojson);\r\n};\r\n\r\nDrawPolygon.onTrash = function(state) {\r\n  this.deleteFeature([state.polygon.id], { silent: true });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nexport default DrawPolygon;\r\n","import * as CommonSelectors from '../lib/common_selectors.js';\r\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\r\nimport doubleClickZoom from '../lib/double_click_zoom.js';\r\nimport * as Constants from '../constants.js';\r\nimport createVertex from '../lib/create_vertex.js';\r\n\r\nconst DrawLineString = {};\r\n\r\nDrawLineString.onSetup = function(opts) {\r\n  opts = opts || {};\r\n  const featureId = opts.featureId;\r\n\r\n  let line, currentVertexPosition;\r\n  let direction = 'forward';\r\n  if (featureId) {\r\n    line = this.getFeature(featureId);\r\n    if (!line) {\r\n      throw new Error('Could not find a feature with the provided featureId');\r\n    }\r\n    let from = opts.from;\r\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\r\n      from = from.geometry;\r\n    }\r\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\r\n      from = from.coordinates;\r\n    }\r\n    if (!from || !Array.isArray(from)) {\r\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\r\n    }\r\n    const lastCoord = line.coordinates.length - 1;\r\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\r\n      currentVertexPosition = lastCoord + 1;\r\n      // add one new coordinate to continue from\r\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\r\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\r\n      direction = 'backwards';\r\n      currentVertexPosition = 0;\r\n      // add one new coordinate to continue from\r\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\r\n    } else {\r\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\r\n    }\r\n  } else {\r\n    line = this.newFeature({\r\n      type: Constants.geojsonTypes.FEATURE,\r\n      properties: {},\r\n      geometry: {\r\n        type: Constants.geojsonTypes.LINE_STRING,\r\n        coordinates: []\r\n      }\r\n    });\r\n    currentVertexPosition = 0;\r\n    this.addFeature(line);\r\n  }\r\n\r\n  this.clearSelectedFeatures();\r\n  doubleClickZoom.disable(this);\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  this.activateUIButton(Constants.types.LINE);\r\n  this.setActionableState({\r\n    trash: true\r\n  });\r\n\r\n  return {\r\n    line,\r\n    currentVertexPosition,\r\n    direction\r\n  };\r\n};\r\n\r\nDrawLineString.clickAnywhere = function(state, e) {\r\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) ||\r\n      state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\r\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n  }\r\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\r\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  if (state.direction === 'forward') {\r\n    state.currentVertexPosition++;\r\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  } else {\r\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\r\n  }\r\n};\r\n\r\nDrawLineString.clickOnVertex = function(state) {\r\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n};\r\n\r\nDrawLineString.onMouseMove = function(state, e) {\r\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\r\n  if (CommonSelectors.isVertex(e)) {\r\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\r\n  }\r\n};\r\n\r\nDrawLineString.onTap = DrawLineString.onClick = function(state, e) {\r\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\r\n  this.clickAnywhere(state, e);\r\n};\r\n\r\nDrawLineString.onKeyUp = function(state, e) {\r\n  if (CommonSelectors.isEnterKey(e)) {\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\r\n  } else if (CommonSelectors.isEscapeKey(e)) {\r\n    this.deleteFeature([state.line.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n  }\r\n};\r\n\r\nDrawLineString.onStop = function(state) {\r\n  doubleClickZoom.enable(this);\r\n  this.activateUIButton();\r\n\r\n  // check to see if we've deleted this feature\r\n  if (this.getFeature(state.line.id) === undefined) return;\r\n\r\n  //remove last added coordinate\r\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\r\n  if (state.line.isValid()) {\r\n    this.fire(Constants.events.CREATE, {\r\n      features: [state.line.toGeoJSON()]\r\n    });\r\n  } else {\r\n    this.deleteFeature([state.line.id], { silent: true });\r\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\r\n  }\r\n};\r\n\r\nDrawLineString.onTrash = function(state) {\r\n  this.deleteFeature([state.line.id], { silent: true });\r\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\r\n};\r\n\r\nDrawLineString.toDisplayFeatures = function(state, geojson, display) {\r\n  const isActiveLine = geojson.properties.id === state.line.id;\r\n  geojson.properties.active = (isActiveLine) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\r\n  if (!isActiveLine) return display(geojson);\r\n  // Only render the line if it has at least one real coordinate\r\n  if (geojson.geometry.coordinates.length < 2) return;\r\n  geojson.properties.meta = Constants.meta.FEATURE;\r\n  display(createVertex(\r\n    state.line.id,\r\n    geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1],\r\n    `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`,\r\n    false\r\n  ));\r\n\r\n  display(geojson);\r\n};\r\n\r\nexport default DrawLineString;\r\n","\r\nimport simple_select from './simple_select.js';\r\nimport direct_select from './direct_select.js';\r\nimport draw_point from './draw_point.js';\r\nimport draw_polygon from './draw_polygon.js';\r\nimport draw_line_string from './draw_line_string.js';\r\n\r\nexport default {\r\n  simple_select,\r\n  direct_select,\r\n  draw_point,\r\n  draw_polygon,\r\n  draw_line_string,\r\n};\r\n","import * as Constants from './constants.js';\n\nimport styles from './lib/theme.js';\nimport modes from './modes/index.js';\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false,\n  suppressAPIEvents: true\n};\n\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\n\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSource(styles) {\n  return styles.map((style) => {\n    if (style.source) return style;\n    return Object.assign({}, style, {\n      id: style.id,\n      source: Constants.source\n    });\n  });\n}\n\nexport default function(options = {}) {\n  let withDefaults = Object.assign({}, options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = Object.assign({}, hideControls, options.controls);\n  } else {\n    withDefaults.controls = Object.assign({}, showControls, options.controls);\n  }\n\n  withDefaults = Object.assign({}, defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSource(withDefaults.styles);\n\n  return withDefaults;\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n","export default function(a, b) {\r\n  if (a.length !== b.length) return false;\r\n  return JSON.stringify(a.map(id => id).sort()) === JSON.stringify(b.map(id => id).sort());\r\n}\r\n","import isEqual from 'fast-deep-equal';\nimport normalize from '@mapbox/geojson-normalize';\nimport { generateID } from './lib/id.js';\nimport featuresAt from './lib/features_at.js';\nimport stringSetsAreEqual from './lib/string_sets_are_equal.js';\nimport * as Constants from './constants.js';\nimport StringSet from './lib/string_set.js';\n\nimport Polygon from './feature_types/polygon.js';\nimport LineString from './feature_types/line_string.js';\nimport Point from './feature_types/point.js';\nimport MultiFeature from './feature_types/multi_feature.js';\n\nconst featureTypes = {\n  Polygon,\n  LineString,\n  Point,\n  MultiPolygon: MultiFeature,\n  MultiLineString: MultiFeature,\n  MultiPoint: MultiFeature\n};\n\nexport default function (ctx, api) {\n  api.modes = Constants.modes;\n\n  // API doesn't emit events by default\n  const silent = ctx.options.suppressAPIEvents !== undefined ? !!ctx.options.suppressAPIEvents : true;\n\n  api.getFeatureIdsAt = function (point) {\n    const features = featuresAt.click({ point }, null, ctx);\n    return features.map(feature => feature.properties.id);\n  };\n\n  api.getSelectedIds = function () {\n    return ctx.store.getSelectedIds();\n  };\n\n  api.getSelected = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedIds().map(id => ctx.store.get(id)).map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.getSelectedPoints = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    };\n  };\n\n  api.set = function (featureCollection) {\n    if (featureCollection.type === undefined || featureCollection.type !== Constants.geojsonTypes.FEATURE_COLLECTION || !Array.isArray(featureCollection.features)) {\n      throw new Error('Invalid FeatureCollection');\n    }\n    const renderBatch = ctx.store.createRenderBatch();\n    let toDelete = ctx.store.getAllIds().slice();\n    const newIds = api.add(featureCollection);\n    const newIdsLookup = new StringSet(newIds);\n\n    toDelete = toDelete.filter(id => !newIdsLookup.has(id));\n    if (toDelete.length) {\n      api.delete(toDelete);\n    }\n\n    renderBatch();\n    return newIds;\n  };\n\n  api.add = function (geojson) {\n    const featureCollection = JSON.parse(JSON.stringify(normalize(geojson)));\n\n    const ids = featureCollection.features.map((feature) => {\n      feature.id = feature.id || generateID();\n\n      if (feature.geometry === null) {\n        throw new Error('Invalid geometry: null');\n      }\n\n      if (ctx.store.get(feature.id) === undefined || ctx.store.get(feature.id).type !== feature.geometry.type) {\n        // If the feature has not yet been created ...\n        const Model = featureTypes[feature.geometry.type];\n        if (Model === undefined) {\n          throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);\n        }\n        const internalFeature = new Model(ctx, feature);\n        ctx.store.add(internalFeature, { silent });\n      } else {\n        // If a feature of that id has already been created, and we are swapping it out ...\n        const internalFeature = ctx.store.get(feature.id);\n        const originalProperties = internalFeature.properties;\n        internalFeature.properties = feature.properties;\n        if (!isEqual(originalProperties, feature.properties)) {\n          ctx.store.featureChanged(internalFeature.id, { silent });\n        }\n        if (!isEqual(internalFeature.getCoordinates(), feature.geometry.coordinates)) {\n          internalFeature.incomingCoords(feature.geometry.coordinates);\n        }\n      }\n      return feature.id;\n    });\n\n    ctx.store.render();\n    return ids;\n  };\n\n\n  api.get = function (id) {\n    const feature = ctx.store.get(id);\n    if (feature) {\n      return feature.toGeoJSON();\n    }\n  };\n\n  api.getAll = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getAll().map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.delete = function (featureIds) {\n    ctx.store.delete(featureIds, { silent });\n    // If we were in direct select mode and our selected feature no longer exists\n    // (because it was deleted), we need to get out of that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT && !ctx.store.getSelectedIds().length) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.deleteAll = function () {\n    ctx.store.delete(ctx.store.getAllIds(), { silent });\n    // If we were in direct select mode, now our selected feature no longer exists,\n    // so escape that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.changeMode = function (mode, modeOptions = {}) {\n    // Avoid changing modes just to re-select what's already selected\n    if (mode === Constants.modes.SIMPLE_SELECT && api.getMode() === Constants.modes.SIMPLE_SELECT) {\n      if (stringSetsAreEqual((modeOptions.featureIds || []), ctx.store.getSelectedIds())) return api;\n      // And if we are changing the selection within simple_select mode, just change the selection,\n      // instead of stopping and re-starting the mode\n      ctx.store.setSelected(modeOptions.featureIds, { silent });\n      ctx.store.render();\n      return api;\n    }\n\n    if (mode === Constants.modes.DIRECT_SELECT && api.getMode() === Constants.modes.DIRECT_SELECT &&\n      modeOptions.featureId === ctx.store.getSelectedIds()[0]) {\n      return api;\n    }\n\n    ctx.events.changeMode(mode, modeOptions, { silent });\n    return api;\n  };\n\n  api.getMode = function () {\n    return ctx.events.getMode();\n  };\n\n  api.trash = function () {\n    ctx.events.trash({ silent });\n    return api;\n  };\n\n  api.combineFeatures = function () {\n    ctx.events.combineFeatures({ silent });\n    return api;\n  };\n\n  api.uncombineFeatures = function () {\n    ctx.events.uncombineFeatures({ silent });\n    return api;\n  };\n\n  api.setFeatureProperty = function (featureId, property, value) {\n    ctx.store.setFeatureProperty(featureId, property, value, { silent });\n    return api;\n  };\n  api.reRender = function () {\n    ctx.store.setDirty();\n    ctx.store.render();\n    return api;\n  };\n  return api;\n}\n","import runSetup from './src/setup.js';\r\nimport setupOptions from './src/options.js';\r\nimport setupAPI from './src/api.js';\r\nimport modes from './src/modes/index.js';\r\nimport * as Constants from './src/constants.js';\r\nimport * as lib from './src/lib/index.js';\r\n\r\nconst setupDraw = function(options, api) {\r\n  options = setupOptions(options);\r\n\r\n  const ctx = {\r\n    options\r\n  };\r\n\r\n  api = setupAPI(ctx, api);\r\n  ctx.api = api;\r\n\r\n  const setup = runSetup(ctx);\r\n\r\n  api.onAdd = setup.onAdd;\r\n  api.onRemove = setup.onRemove;\r\n  api.types = Constants.types;\r\n  api.options = options;\r\n\r\n  return api;\r\n};\r\n\r\nfunction MapboxDraw(options) {\r\n  setupDraw(options, this);\r\n}\r\n\r\nMapboxDraw.modes = modes;\r\nMapboxDraw.constants = Constants;\r\nMapboxDraw.lib = lib;\r\n\r\nexport default MapboxDraw;\r\n"],"names":["ModeHandler","mode","DrawContext","handlers","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","ctx","on","event","selector","fn","undefined","Error","push","render","id","store","featureChanged","delegate","eventName","handles","iHandle","length","handle","call","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures","wgs84","RADIUS","FLATTENING","POLAR_RADIUS","require$$0","polygonArea","coords","area","Math","abs","ringArea","i","p1","p2","lowerIndex","middleIndex","upperIndex","coordsLength","rad","sin","_","PI","geojsonArea","geometry","type","coordinates","geometries","ring","classes","CANVAS","CONTROL_BASE","CONTROL_PREFIX","CONTROL_BUTTON","CONTROL_BUTTON_LINE","CONTROL_BUTTON_POLYGON","CONTROL_BUTTON_POINT","CONTROL_BUTTON_TRASH","CONTROL_BUTTON_COMBINE_FEATURES","CONTROL_BUTTON_UNCOMBINE_FEATURES","CONTROL_GROUP","ATTRIBUTION","ACTIVE_BUTTON","BOX_SELECT","source","cursors","ADD","MOVE","DRAG","POINTER","NONE","types","POLYGON","LINE","POINT","geojsonTypes","FEATURE","LINE_STRING","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","modes","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","events","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","updateActions","CHANGE_PROPERTIES","CHANGE_COORDINATES","meta","MIDPOINT","VERTEX","ROTATE","activeStates","ACTIVE","INACTIVE","interactions","LAT_RENDERED_MIN","LAT_RENDERED_MAX","FEATURE_SORT_RANKS","Point","LineString","MultiLineString","Polygon","comparator","a","b","score","Constants.geojsonTypes","sortFeatures","features","map","feature","property","sort","mapEventToBoundingBox","mapEvent","buffer","point","x","y","StringSet","items","this","_items","_nums","_length","l","add","prototype","has","delete","values","Object","keys","forEach","k","v","JSON","parse","clear","META_TYPES","Constants.meta","featuresAt","bbox","options","clickBuffer","touch","touchBuffer","box","queryParams","styles","layers","s","filter","getLayer","queryRenderedFeatures","indexOf","properties","featureIds","uniqueFeatures","featureId","getFeatureAtAndSetCursors","mouse","Constants.cursors","active","Constants.activeStates","currentModeName","queueMapClasses","euclideanDistance","sqrt","FINE_TOLERANCE","GROSS_TOLERANCE","INTERVAL","isClick","end","fineTolerance","grossTolerance","interval","time","moveDistance","TAP_TOLERANCE","TAP_INTERVAL","isTap","tolerance","nanoid","alphabet","defaultSize","size","random","customAlphabet","generateID","Feature","geojson","changed","incomingCoords","setCoordinates","getCoordinates","stringify","setProperty","value","toGeoJSON","internal","userProperties","name","create","isValid","updateCoordinate","pathOrLng","lngOrLat","lat","arguments","getCoordinate","addCoordinate","path","lng","parseInt","splice","removeCoordinate","slice","every","ids","split","concat","parts","ringId","coordId","models","MultiPoint","MultiPolygon","takeAction","action","idx","tail","join","MultiFeature","model","TypeError","_coordinatesToFeatures","ModeInterface","drawConfig","_ctx","Model","bind","replace","f","getFeatures","setSelected","setSelectedCoordinates","reduce","m","c","feature_id","get","getSelected","getSelectedIds","isSelected","getFeature","select","deselect","deleteFeature","opts","addFeature","clearSelectedFeatures","clearSelected","clearSelectedCoordinates","setActionableState","actions","newSet","actionable","changeMode","eventOpts","fire","eventData","updateUIClasses","activateUIButton","setActiveButton","bufferType","newFeature","isInstanceOf","doRender","onSetup","onDrag","onClick","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onKeyUp","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onTap","onStop","onTrash","onCombineFeature","onUncombineFeature","toDisplayFeatures","eventMapper","eventKeys","objectToMode","modeObject","modeObjectKeys","startOpts","state","key","modeHandler","eh","e","onCombineFeatures","onUncombineFeatures","toDenseArray","getSource","Constants.source","cleanup","newIds","getAllIds","lastCount","isDirty","clearChangedIds","featureInternal","currentModeRender","renderFeature","setData","Store","renderRequest","_features","_featureIds","_selectedFeatureIds","_selectedCoordinates","_changedFeatureIds","_emitSelectionChange","_mapInitialConfig","requestAnimationFrame","Constants.events","points","getSelectedCoordinates","coordinate","refreshSelectedCoordinates","newSelectedCoordinates","silent","createRenderBatch","holdRender","numRenders","setDirty","featureCreated","suppressAPIEvents","Constants.updateActions","getChangedIds","deletedFeaturesToEmit","getAll","coord_path","setFeatureProperty","storeMapConfig","Constants.interactions","interaction","isEnabled","restoreMapConfig","enable","disable","getInitialConfigValue","classTypes","runSetup","controlContainer","mapLoadedInterval","setup","onRemove","off","connect","clearInterval","removeLayers","removeButtons","removeEventListeners","clearMapClasses","boxZoomInitial","boxZoom","container","parentNode","removeChild","addLayers","addEventListeners","onAdd","mouseDownInfo","touchStartInfo","currentMode","isDrag","Date","getTime","originalEvent","stopPropagation","mousedrag","endInfo","touchdrag","buttons","which","target","getFeaturesAndSetCursor","featureTarget","touchEnabled","preventDefault","isKeyModeValid","code","modename","nextModeOptions","eventOptions","modebuilder","setupModeHandler","srcElement","classList","contains","Constants.classes","keyCode","controls","Constants.modes","line_string","polygon","zoomend","changeZoom","data","dataType","some","style","actionState","defaultMode","addEventListener","keybindings","removeEventListener","getMode","buttonElements","activeButton","currentMapClasses","nextMapClasses","assign","classesToRemove","classesToAdd","remove","createControlButton","button","document","createElement","className","setAttribute","title","appendChild","deactivateButtons","onDeactivate","onActivate","addButtons","controlGroup","Constants.types","combine_features","uncombine_features","buttonId","getContainer","boxSelect","dragPanIsEnabled","dragPan","loaded","setInterval","addSource","addLayer","removeLayer","removeSource","blue","orange","white","paint","layout","isOfMetaType","isShiftMousedown","shiftKey","isActiveFeature","isInactiveFeature","noTarget","isFeature","isVertex","isShiftDown","isEscapeKey","isEnterKey","mouseEventPoint","mouseEvent","rect","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","createVertex","parentId","selected","parent","createMidpoint","startVertex","endVertex","startCoord","endCoord","Constants.LAT_RENDERED_MAX","Constants.LAT_RENDERED_MIN","mid","createSupplementaryPoints","basePath","supplementaryPoints","processLine","line","lineBasePath","firstPointString","lastVertex","pointIndex","pointPath","String","vertex","isSelectedPath","midpoints","midpoint","stringifiedPoint","selectedPaths","lineIndex","subType","subCoordinates","index","subFeature","processMultiGeometry","clone","p","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","round","_round","mag","equals","other","dist","distSqr","dx","dy","angle","atan2","angleTo","angleWith","angleWithSep","cos","constructor","convert","Array","isArray","doubleClickZoom","setTimeout","LAT_MIN","LAT_MAX","LNG_MIN","LNG_MAX","Constants","constrainFeatureMovement","geojsonFeatures","delta","northInnerEdge","southInnerEdge","northOuterEdge","southOuterEdge","westEdge","eastEdge","bounds","depth","flat","lngs","coord","lats","min","vals","apply","max","extent","featureSouthEdge","featureNorthEdge","featureWestEdge","featureEastEdge","constrainedDelta","ceil","moveFeatures","currentCoordinates","moveCoordinate","moveRing","moveMultiPolygon","multi","nextCoordinates","SimpleSelect","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initialDragPanState","initiallySelectedFeatureIds","fireActionable","selectedFeatures","multiFeatures","featureType","allFeatures","memo","CommonSelectors.isFeature","fireUpdate","stopExtendedInteractions","CommonSelectors.noTarget","clickAnywhere","CommonSelectors.isOfMetaType","clickOnVertex","clickOnFeature","wasSelected","coordPath","startPos","lngLat","startOnActiveFeature","isShiftClick","CommonSelectors.isShiftDown","selectedFeatureIds","isFeatureSelected","CommonSelectors.isActiveFeature","CommonSelectors.isShiftMousedown","startBoxSelect","dragMove","whileBoxSelect","current","minX","maxX","minY","maxY","translateValue","transform","WebkitTransform","width","height","featuresInBox","idsToSelect","getUniqueIds","display","featuresCombined","includes","subcoords","multiFeature","createdFeatures","deletedFeatures","featuresUncombined","isMidpoint","DirectSelect","selectedCoordPaths","startDragging","about","selectedIndex","selectedCoordinates","pathsToCoordinates","paths","stopDragging","selectedCoords","localeCompare","numeric","onVertex","isMidPoint","noCoords","onFeature","onMidpoint","dragVertex","dragFeature","clickNoTarget","clickActiveFeature","clickInactive","DrawPoint","isEventAtCoordinates","stopDrawingAndRemove","isActivePoint","CommonSelectors.isEscapeKey","CommonSelectors.isEnterKey","DrawPolygon","currentVertexPosition","CommonSelectors.isVertex","isActivePolygon","coordinateCount","endPos","lineCoordinates","DrawLineString","direction","from","lastCoord","isActiveLine","simple_select","direct_select","draw_point","draw_polygon","draw_line_string","defaultOptions","displayControlsDefault","showControls","hideControls","setupOptions","withDefaults","fastDeepEqual","equal","RegExp","flags","valueOf","toString","hasOwnProperty","geojsonNormalize","gj","GeometryCollection","FeatureCollection","stringSetsAreEqual","featureTypes","setupDraw","api","getFeatureIdsAt","getSelectedPoints","set","featureCollection","renderBatch","toDelete","newIdsLookup","normalize","internalFeature","originalProperties","isEqual","deleteAll","modeOptions","reRender","setupAPI","MapboxDraw","constants","lib"],"mappings":"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","x_google_ignoreList":[1,2,13,30,46,47]}